//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializecreateTopicResponse")
public inline fun createTopicResponse(block: org.matrix.dma.gchat.proto.CreateTopicResponseKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.CreateTopicResponse =
  org.matrix.dma.gchat.proto.CreateTopicResponseKt.Dsl._create(org.matrix.dma.gchat.proto.CreateTopicResponse.newBuilder()).apply { block() }._build()
public object CreateTopicResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.CreateTopicResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.CreateTopicResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.CreateTopicResponse = _builder.build()

    /**
     * <code>optional .Topic topic = 1;</code>
     */
    public var topic: org.matrix.dma.gchat.proto.Topic
      @JvmName("getTopic")
      get() = _builder.getTopic()
      @JvmName("setTopic")
      set(value) {
        _builder.setTopic(value)
      }
    /**
     * <code>optional .Topic topic = 1;</code>
     */
    public fun clearTopic() {
      _builder.clearTopic()
    }
    /**
     * <code>optional .Topic topic = 1;</code>
     * @return Whether the topic field is set.
     */
    public fun hasTopic(): kotlin.Boolean {
      return _builder.hasTopic()
    }
    public val CreateTopicResponseKt.Dsl.topicOrNull: org.matrix.dma.gchat.proto.Topic?
      get() = _builder.topicOrNull

    /**
     * <code>optional .WriteRevision group_revision = 2;</code>
     */
    public var groupRevision: org.matrix.dma.gchat.proto.WriteRevision
      @JvmName("getGroupRevision")
      get() = _builder.getGroupRevision()
      @JvmName("setGroupRevision")
      set(value) {
        _builder.setGroupRevision(value)
      }
    /**
     * <code>optional .WriteRevision group_revision = 2;</code>
     */
    public fun clearGroupRevision() {
      _builder.clearGroupRevision()
    }
    /**
     * <code>optional .WriteRevision group_revision = 2;</code>
     * @return Whether the groupRevision field is set.
     */
    public fun hasGroupRevision(): kotlin.Boolean {
      return _builder.hasGroupRevision()
    }
    public val CreateTopicResponseKt.Dsl.groupRevisionOrNull: org.matrix.dma.gchat.proto.WriteRevision?
      get() = _builder.groupRevisionOrNull

    /**
     * <code>optional .ReadRevision current_group_revision = 3;</code>
     */
    public var currentGroupRevision: org.matrix.dma.gchat.proto.ReadRevision
      @JvmName("getCurrentGroupRevision")
      get() = _builder.getCurrentGroupRevision()
      @JvmName("setCurrentGroupRevision")
      set(value) {
        _builder.setCurrentGroupRevision(value)
      }
    /**
     * <code>optional .ReadRevision current_group_revision = 3;</code>
     */
    public fun clearCurrentGroupRevision() {
      _builder.clearCurrentGroupRevision()
    }
    /**
     * <code>optional .ReadRevision current_group_revision = 3;</code>
     * @return Whether the currentGroupRevision field is set.
     */
    public fun hasCurrentGroupRevision(): kotlin.Boolean {
      return _builder.hasCurrentGroupRevision()
    }
    public val CreateTopicResponseKt.Dsl.currentGroupRevisionOrNull: org.matrix.dma.gchat.proto.ReadRevision?
      get() = _builder.currentGroupRevisionOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.CreateTopicResponse.copy(block: org.matrix.dma.gchat.proto.CreateTopicResponseKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.CreateTopicResponse =
  org.matrix.dma.gchat.proto.CreateTopicResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.CreateTopicResponseOrBuilder.topicOrNull: org.matrix.dma.gchat.proto.Topic?
  get() = if (hasTopic()) getTopic() else null

public val org.matrix.dma.gchat.proto.CreateTopicResponseOrBuilder.groupRevisionOrNull: org.matrix.dma.gchat.proto.WriteRevision?
  get() = if (hasGroupRevision()) getGroupRevision() else null

public val org.matrix.dma.gchat.proto.CreateTopicResponseOrBuilder.currentGroupRevisionOrNull: org.matrix.dma.gchat.proto.ReadRevision?
  get() = if (hasCurrentGroupRevision()) getCurrentGroupRevision() else null

