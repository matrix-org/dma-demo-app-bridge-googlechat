//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializememberId")
public inline fun memberId(block: org.matrix.dma.gchat.proto.MemberIdKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.MemberId =
  org.matrix.dma.gchat.proto.MemberIdKt.Dsl._create(org.matrix.dma.gchat.proto.MemberId.newBuilder()).apply { block() }._build()
public object MemberIdKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.MemberId.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.MemberId.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.MemberId = _builder.build()

    /**
     * <pre>
     *oneof Id {
     * </pre>
     *
     * <code>optional .UserId user_id = 1;</code>
     */
    public var userId: org.matrix.dma.gchat.proto.UserId
      @JvmName("getUserId")
      get() = _builder.getUserId()
      @JvmName("setUserId")
      set(value) {
        _builder.setUserId(value)
      }
    /**
     * <pre>
     *oneof Id {
     * </pre>
     *
     * <code>optional .UserId user_id = 1;</code>
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }
    /**
     * <pre>
     *oneof Id {
     * </pre>
     *
     * <code>optional .UserId user_id = 1;</code>
     * @return Whether the userId field is set.
     */
    public fun hasUserId(): kotlin.Boolean {
      return _builder.hasUserId()
    }
    public val MemberIdKt.Dsl.userIdOrNull: org.matrix.dma.gchat.proto.UserId?
      get() = _builder.userIdOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.MemberId.copy(block: org.matrix.dma.gchat.proto.MemberIdKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.MemberId =
  org.matrix.dma.gchat.proto.MemberIdKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.MemberIdOrBuilder.userIdOrNull: org.matrix.dma.gchat.proto.UserId?
  get() = if (hasUserId()) getUserId() else null

