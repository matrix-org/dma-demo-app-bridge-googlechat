//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializeretentionSettings")
public inline fun retentionSettings(block: org.matrix.dma.gchat.proto.RetentionSettingsKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.RetentionSettings =
  org.matrix.dma.gchat.proto.RetentionSettingsKt.Dsl._create(org.matrix.dma.gchat.proto.RetentionSettings.newBuilder()).apply { block() }._build()
public object RetentionSettingsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.RetentionSettings.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.RetentionSettings.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.RetentionSettings = _builder.build()

    /**
     * <code>optional .RetentionSettings.RetentionState state = 1;</code>
     */
    public var state: org.matrix.dma.gchat.proto.RetentionSettings.RetentionState
      @JvmName("getState")
      get() = _builder.getState()
      @JvmName("setState")
      set(value) {
        _builder.setState(value)
      }
    /**
     * <code>optional .RetentionSettings.RetentionState state = 1;</code>
     */
    public fun clearState() {
      _builder.clearState()
    }
    /**
     * <code>optional .RetentionSettings.RetentionState state = 1;</code>
     * @return Whether the state field is set.
     */
    public fun hasState(): kotlin.Boolean {
      return _builder.hasState()
    }

    /**
     * <code>optional int64 expiry_timestamp = 2;</code>
     */
    public var expiryTimestamp: kotlin.Long
      @JvmName("getExpiryTimestamp")
      get() = _builder.getExpiryTimestamp()
      @JvmName("setExpiryTimestamp")
      set(value) {
        _builder.setExpiryTimestamp(value)
      }
    /**
     * <code>optional int64 expiry_timestamp = 2;</code>
     */
    public fun clearExpiryTimestamp() {
      _builder.clearExpiryTimestamp()
    }
    /**
     * <code>optional int64 expiry_timestamp = 2;</code>
     * @return Whether the expiryTimestamp field is set.
     */
    public fun hasExpiryTimestamp(): kotlin.Boolean {
      return _builder.hasExpiryTimestamp()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.RetentionSettings.copy(block: org.matrix.dma.gchat.proto.RetentionSettingsKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.RetentionSettings =
  org.matrix.dma.gchat.proto.RetentionSettingsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

