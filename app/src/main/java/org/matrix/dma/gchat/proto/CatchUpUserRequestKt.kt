//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializecatchUpUserRequest")
public inline fun catchUpUserRequest(block: org.matrix.dma.gchat.proto.CatchUpUserRequestKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.CatchUpUserRequest =
  org.matrix.dma.gchat.proto.CatchUpUserRequestKt.Dsl._create(org.matrix.dma.gchat.proto.CatchUpUserRequest.newBuilder()).apply { block() }._build()
public object CatchUpUserRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.CatchUpUserRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.CatchUpUserRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.CatchUpUserRequest = _builder.build()

    /**
     * <code>optional .RequestHeader request_header = 100;</code>
     */
    public var requestHeader: org.matrix.dma.gchat.proto.RequestHeader
      @JvmName("getRequestHeader")
      get() = _builder.getRequestHeader()
      @JvmName("setRequestHeader")
      set(value) {
        _builder.setRequestHeader(value)
      }
    /**
     * <code>optional .RequestHeader request_header = 100;</code>
     */
    public fun clearRequestHeader() {
      _builder.clearRequestHeader()
    }
    /**
     * <code>optional .RequestHeader request_header = 100;</code>
     * @return Whether the requestHeader field is set.
     */
    public fun hasRequestHeader(): kotlin.Boolean {
      return _builder.hasRequestHeader()
    }
    public val CatchUpUserRequestKt.Dsl.requestHeaderOrNull: org.matrix.dma.gchat.proto.RequestHeader?
      get() = _builder.requestHeaderOrNull

    /**
     * <code>optional .CatchUpRange range = 1;</code>
     */
    public var range: org.matrix.dma.gchat.proto.CatchUpRange
      @JvmName("getRange")
      get() = _builder.getRange()
      @JvmName("setRange")
      set(value) {
        _builder.setRange(value)
      }
    /**
     * <code>optional .CatchUpRange range = 1;</code>
     */
    public fun clearRange() {
      _builder.clearRange()
    }
    /**
     * <code>optional .CatchUpRange range = 1;</code>
     * @return Whether the range field is set.
     */
    public fun hasRange(): kotlin.Boolean {
      return _builder.hasRange()
    }
    public val CatchUpUserRequestKt.Dsl.rangeOrNull: org.matrix.dma.gchat.proto.CatchUpRange?
      get() = _builder.rangeOrNull

    /**
     * <code>optional int32 page_size = 2;</code>
     */
    public var pageSize: kotlin.Int
      @JvmName("getPageSize")
      get() = _builder.getPageSize()
      @JvmName("setPageSize")
      set(value) {
        _builder.setPageSize(value)
      }
    /**
     * <code>optional int32 page_size = 2;</code>
     */
    public fun clearPageSize() {
      _builder.clearPageSize()
    }
    /**
     * <code>optional int32 page_size = 2;</code>
     * @return Whether the pageSize field is set.
     */
    public fun hasPageSize(): kotlin.Boolean {
      return _builder.hasPageSize()
    }

    /**
     * <code>optional int32 cutoff_size = 3;</code>
     */
    public var cutoffSize: kotlin.Int
      @JvmName("getCutoffSize")
      get() = _builder.getCutoffSize()
      @JvmName("setCutoffSize")
      set(value) {
        _builder.setCutoffSize(value)
      }
    /**
     * <code>optional int32 cutoff_size = 3;</code>
     */
    public fun clearCutoffSize() {
      _builder.clearCutoffSize()
    }
    /**
     * <code>optional int32 cutoff_size = 3;</code>
     * @return Whether the cutoffSize field is set.
     */
    public fun hasCutoffSize(): kotlin.Boolean {
      return _builder.hasCutoffSize()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.CatchUpUserRequest.copy(block: org.matrix.dma.gchat.proto.CatchUpUserRequestKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.CatchUpUserRequest =
  org.matrix.dma.gchat.proto.CatchUpUserRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.CatchUpUserRequestOrBuilder.requestHeaderOrNull: org.matrix.dma.gchat.proto.RequestHeader?
  get() = if (hasRequestHeader()) getRequestHeader() else null

public val org.matrix.dma.gchat.proto.CatchUpUserRequestOrBuilder.rangeOrNull: org.matrix.dma.gchat.proto.CatchUpRange?
  get() = if (hasRange()) getRange() else null

