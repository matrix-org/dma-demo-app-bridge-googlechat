//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializegroupSubscriptionEvent")
public inline fun groupSubscriptionEvent(block: org.matrix.dma.gchat.proto.GroupSubscriptionEventKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.GroupSubscriptionEvent =
  org.matrix.dma.gchat.proto.GroupSubscriptionEventKt.Dsl._create(org.matrix.dma.gchat.proto.GroupSubscriptionEvent.newBuilder()).apply { block() }._build()
public object GroupSubscriptionEventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.GroupSubscriptionEvent.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.GroupSubscriptionEvent.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.GroupSubscriptionEvent = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class GroupIdsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .GroupId group_ids = 1;</code>
     */
     public val groupIds: com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.GroupId, GroupIdsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getGroupIdsList()
      )
    /**
     * <code>repeated .GroupId group_ids = 1;</code>
     * @param value The groupIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addGroupIds")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.GroupId, GroupIdsProxy>.add(value: org.matrix.dma.gchat.proto.GroupId) {
      _builder.addGroupIds(value)
    }
    /**
     * <code>repeated .GroupId group_ids = 1;</code>
     * @param value The groupIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignGroupIds")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.GroupId, GroupIdsProxy>.plusAssign(value: org.matrix.dma.gchat.proto.GroupId) {
      add(value)
    }
    /**
     * <code>repeated .GroupId group_ids = 1;</code>
     * @param values The groupIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllGroupIds")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.GroupId, GroupIdsProxy>.addAll(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.GroupId>) {
      _builder.addAllGroupIds(values)
    }
    /**
     * <code>repeated .GroupId group_ids = 1;</code>
     * @param values The groupIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllGroupIds")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.GroupId, GroupIdsProxy>.plusAssign(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.GroupId>) {
      addAll(values)
    }
    /**
     * <code>repeated .GroupId group_ids = 1;</code>
     * @param index The index to set the value at.
     * @param value The groupIds to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setGroupIds")
    public operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.GroupId, GroupIdsProxy>.set(index: kotlin.Int, value: org.matrix.dma.gchat.proto.GroupId) {
      _builder.setGroupIds(index, value)
    }
    /**
     * <code>repeated .GroupId group_ids = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearGroupIds")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.GroupId, GroupIdsProxy>.clear() {
      _builder.clearGroupIds()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.GroupSubscriptionEvent.copy(block: org.matrix.dma.gchat.proto.GroupSubscriptionEventKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.GroupSubscriptionEvent =
  org.matrix.dma.gchat.proto.GroupSubscriptionEventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

