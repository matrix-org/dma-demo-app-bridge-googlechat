// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

public interface PingEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:PingEvent)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional .PingEvent.State state = 1;</code>
   * @return Whether the state field is set.
   */
  boolean hasState();
  /**
   * <code>optional .PingEvent.State state = 1;</code>
   * @return The state.
   */
  org.matrix.dma.gchat.proto.PingEvent.State getState();

  /**
   * <code>optional .PingEvent.ApplicationFocusState application_focus_state = 3;</code>
   * @return Whether the applicationFocusState field is set.
   */
  boolean hasApplicationFocusState();
  /**
   * <code>optional .PingEvent.ApplicationFocusState application_focus_state = 3;</code>
   * @return The applicationFocusState.
   */
  org.matrix.dma.gchat.proto.PingEvent.ApplicationFocusState getApplicationFocusState();

  /**
   * <code>optional int64 last_interactive_time_ms = 4;</code>
   * @return Whether the lastInteractiveTimeMs field is set.
   */
  boolean hasLastInteractiveTimeMs();
  /**
   * <code>optional int64 last_interactive_time_ms = 4;</code>
   * @return The lastInteractiveTimeMs.
   */
  long getLastInteractiveTimeMs();

  /**
   * <code>optional .PingEvent.ClientInteractiveState client_interactive_state = 5;</code>
   * @return Whether the clientInteractiveState field is set.
   */
  boolean hasClientInteractiveState();
  /**
   * <code>optional .PingEvent.ClientInteractiveState client_interactive_state = 5;</code>
   * @return The clientInteractiveState.
   */
  org.matrix.dma.gchat.proto.PingEvent.ClientInteractiveState getClientInteractiveState();

  /**
   * <code>optional bool client_notifications_enabled = 6;</code>
   * @return Whether the clientNotificationsEnabled field is set.
   */
  boolean hasClientNotificationsEnabled();
  /**
   * <code>optional bool client_notifications_enabled = 6;</code>
   * @return The clientNotificationsEnabled.
   */
  boolean getClientNotificationsEnabled();

  /**
   * <code>optional .ClientNotificationsState notifications_state = 7;</code>
   * @return Whether the notificationsState field is set.
   */
  boolean hasNotificationsState();
  /**
   * <code>optional .ClientNotificationsState notifications_state = 7;</code>
   * @return The notificationsState.
   */
  org.matrix.dma.gchat.proto.ClientNotificationsState getNotificationsState();
  /**
   * <code>optional .ClientNotificationsState notifications_state = 7;</code>
   */
  org.matrix.dma.gchat.proto.ClientNotificationsStateOrBuilder getNotificationsStateOrBuilder();

  /**
   * <code>optional bool pwa_dedupe_enabled = 8;</code>
   * @return Whether the pwaDedupeEnabled field is set.
   */
  boolean hasPwaDedupeEnabled();
  /**
   * <code>optional bool pwa_dedupe_enabled = 8;</code>
   * @return The pwaDedupeEnabled.
   */
  boolean getPwaDedupeEnabled();

  /**
   * <code>optional .PingEvent.DeviceActiveState device_active_state = 9;</code>
   * @return Whether the deviceActiveState field is set.
   */
  boolean hasDeviceActiveState();
  /**
   * <code>optional .PingEvent.DeviceActiveState device_active_state = 9;</code>
   * @return The deviceActiveState.
   */
  org.matrix.dma.gchat.proto.PingEvent.DeviceActiveState getDeviceActiveState();
}
