//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializejAddOnsThemeColors")
public inline fun jAddOnsThemeColors(block: org.matrix.dma.gchat.proto.JAddOnsThemeColorsKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsThemeColors =
  org.matrix.dma.gchat.proto.JAddOnsThemeColorsKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsThemeColors.newBuilder()).apply { block() }._build()
public object JAddOnsThemeColorsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.JAddOnsThemeColors.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsThemeColors.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsThemeColors = _builder.build()

    /**
     * <code>optional int32 light_theme_color = 1;</code>
     */
    public var lightThemeColor: kotlin.Int
      @JvmName("getLightThemeColor")
      get() = _builder.getLightThemeColor()
      @JvmName("setLightThemeColor")
      set(value) {
        _builder.setLightThemeColor(value)
      }
    /**
     * <code>optional int32 light_theme_color = 1;</code>
     */
    public fun clearLightThemeColor() {
      _builder.clearLightThemeColor()
    }
    /**
     * <code>optional int32 light_theme_color = 1;</code>
     * @return Whether the lightThemeColor field is set.
     */
    public fun hasLightThemeColor(): kotlin.Boolean {
      return _builder.hasLightThemeColor()
    }

    /**
     * <code>optional int32 dark_theme_color = 2;</code>
     */
    public var darkThemeColor: kotlin.Int
      @JvmName("getDarkThemeColor")
      get() = _builder.getDarkThemeColor()
      @JvmName("setDarkThemeColor")
      set(value) {
        _builder.setDarkThemeColor(value)
      }
    /**
     * <code>optional int32 dark_theme_color = 2;</code>
     */
    public fun clearDarkThemeColor() {
      _builder.clearDarkThemeColor()
    }
    /**
     * <code>optional int32 dark_theme_color = 2;</code>
     * @return Whether the darkThemeColor field is set.
     */
    public fun hasDarkThemeColor(): kotlin.Boolean {
      return _builder.hasDarkThemeColor()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsThemeColors.copy(block: org.matrix.dma.gchat.proto.JAddOnsThemeColorsKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsThemeColors =
  org.matrix.dma.gchat.proto.JAddOnsThemeColorsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

