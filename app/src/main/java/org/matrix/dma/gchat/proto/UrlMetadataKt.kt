//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializeurlMetadata")
public inline fun urlMetadata(block: org.matrix.dma.gchat.proto.UrlMetadataKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.UrlMetadata =
  org.matrix.dma.gchat.proto.UrlMetadataKt.Dsl._create(org.matrix.dma.gchat.proto.UrlMetadata.newBuilder()).apply { block() }._build()
public object UrlMetadataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.UrlMetadata.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.UrlMetadata.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.UrlMetadata = _builder.build()

    /**
     * <code>optional string title = 1;</code>
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * <code>optional string title = 1;</code>
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }
    /**
     * <code>optional string title = 1;</code>
     * @return Whether the title field is set.
     */
    public fun hasTitle(): kotlin.Boolean {
      return _builder.hasTitle()
    }

    /**
     * <code>optional string snippet = 2;</code>
     */
    public var snippet: kotlin.String
      @JvmName("getSnippet")
      get() = _builder.getSnippet()
      @JvmName("setSnippet")
      set(value) {
        _builder.setSnippet(value)
      }
    /**
     * <code>optional string snippet = 2;</code>
     */
    public fun clearSnippet() {
      _builder.clearSnippet()
    }
    /**
     * <code>optional string snippet = 2;</code>
     * @return Whether the snippet field is set.
     */
    public fun hasSnippet(): kotlin.Boolean {
      return _builder.hasSnippet()
    }

    /**
     * <code>optional string image_url = 3;</code>
     */
    public var imageUrl: kotlin.String
      @JvmName("getImageUrl")
      get() = _builder.getImageUrl()
      @JvmName("setImageUrl")
      set(value) {
        _builder.setImageUrl(value)
      }
    /**
     * <code>optional string image_url = 3;</code>
     */
    public fun clearImageUrl() {
      _builder.clearImageUrl()
    }
    /**
     * <code>optional string image_url = 3;</code>
     * @return Whether the imageUrl field is set.
     */
    public fun hasImageUrl(): kotlin.Boolean {
      return _builder.hasImageUrl()
    }

    /**
     * <code>optional string image_height = 4;</code>
     */
    public var imageHeight: kotlin.String
      @JvmName("getImageHeight")
      get() = _builder.getImageHeight()
      @JvmName("setImageHeight")
      set(value) {
        _builder.setImageHeight(value)
      }
    /**
     * <code>optional string image_height = 4;</code>
     */
    public fun clearImageHeight() {
      _builder.clearImageHeight()
    }
    /**
     * <code>optional string image_height = 4;</code>
     * @return Whether the imageHeight field is set.
     */
    public fun hasImageHeight(): kotlin.Boolean {
      return _builder.hasImageHeight()
    }

    /**
     * <code>optional string image_width = 5;</code>
     */
    public var imageWidth: kotlin.String
      @JvmName("getImageWidth")
      get() = _builder.getImageWidth()
      @JvmName("setImageWidth")
      set(value) {
        _builder.setImageWidth(value)
      }
    /**
     * <code>optional string image_width = 5;</code>
     */
    public fun clearImageWidth() {
      _builder.clearImageWidth()
    }
    /**
     * <code>optional string image_width = 5;</code>
     * @return Whether the imageWidth field is set.
     */
    public fun hasImageWidth(): kotlin.Boolean {
      return _builder.hasImageWidth()
    }

    /**
     * <code>optional .Url url = 7;</code>
     */
    public var url: org.matrix.dma.gchat.proto.Url
      @JvmName("getUrl")
      get() = _builder.getUrl()
      @JvmName("setUrl")
      set(value) {
        _builder.setUrl(value)
      }
    /**
     * <code>optional .Url url = 7;</code>
     */
    public fun clearUrl() {
      _builder.clearUrl()
    }
    /**
     * <code>optional .Url url = 7;</code>
     * @return Whether the url field is set.
     */
    public fun hasUrl(): kotlin.Boolean {
      return _builder.hasUrl()
    }
    public val UrlMetadataKt.Dsl.urlOrNull: org.matrix.dma.gchat.proto.Url?
      get() = _builder.urlOrNull

    /**
     * <code>optional .Url gws_url = 13;</code>
     */
    public var gwsUrl: org.matrix.dma.gchat.proto.Url
      @JvmName("getGwsUrl")
      get() = _builder.getGwsUrl()
      @JvmName("setGwsUrl")
      set(value) {
        _builder.setGwsUrl(value)
      }
    /**
     * <code>optional .Url gws_url = 13;</code>
     */
    public fun clearGwsUrl() {
      _builder.clearGwsUrl()
    }
    /**
     * <code>optional .Url gws_url = 13;</code>
     * @return Whether the gwsUrl field is set.
     */
    public fun hasGwsUrl(): kotlin.Boolean {
      return _builder.hasGwsUrl()
    }
    public val UrlMetadataKt.Dsl.gwsUrlOrNull: org.matrix.dma.gchat.proto.Url?
      get() = _builder.gwsUrlOrNull

    /**
     * <code>optional .Url redirect_url = 14;</code>
     */
    public var redirectUrl: org.matrix.dma.gchat.proto.Url
      @JvmName("getRedirectUrl")
      get() = _builder.getRedirectUrl()
      @JvmName("setRedirectUrl")
      set(value) {
        _builder.setRedirectUrl(value)
      }
    /**
     * <code>optional .Url redirect_url = 14;</code>
     */
    public fun clearRedirectUrl() {
      _builder.clearRedirectUrl()
    }
    /**
     * <code>optional .Url redirect_url = 14;</code>
     * @return Whether the redirectUrl field is set.
     */
    public fun hasRedirectUrl(): kotlin.Boolean {
      return _builder.hasRedirectUrl()
    }
    public val UrlMetadataKt.Dsl.redirectUrlOrNull: org.matrix.dma.gchat.proto.Url?
      get() = _builder.redirectUrlOrNull

    /**
     * <code>optional int64 gws_url_expiration_timestamp = 15;</code>
     */
    public var gwsUrlExpirationTimestamp: kotlin.Long
      @JvmName("getGwsUrlExpirationTimestamp")
      get() = _builder.getGwsUrlExpirationTimestamp()
      @JvmName("setGwsUrlExpirationTimestamp")
      set(value) {
        _builder.setGwsUrlExpirationTimestamp(value)
      }
    /**
     * <code>optional int64 gws_url_expiration_timestamp = 15;</code>
     */
    public fun clearGwsUrlExpirationTimestamp() {
      _builder.clearGwsUrlExpirationTimestamp()
    }
    /**
     * <code>optional int64 gws_url_expiration_timestamp = 15;</code>
     * @return Whether the gwsUrlExpirationTimestamp field is set.
     */
    public fun hasGwsUrlExpirationTimestamp(): kotlin.Boolean {
      return _builder.hasGwsUrlExpirationTimestamp()
    }

    /**
     * <code>optional string domain = 8;</code>
     */
    public var domain: kotlin.String
      @JvmName("getDomain")
      get() = _builder.getDomain()
      @JvmName("setDomain")
      set(value) {
        _builder.setDomain(value)
      }
    /**
     * <code>optional string domain = 8;</code>
     */
    public fun clearDomain() {
      _builder.clearDomain()
    }
    /**
     * <code>optional string domain = 8;</code>
     * @return Whether the domain field is set.
     */
    public fun hasDomain(): kotlin.Boolean {
      return _builder.hasDomain()
    }

    /**
     * <code>optional bool should_not_render = 9;</code>
     */
    public var shouldNotRender: kotlin.Boolean
      @JvmName("getShouldNotRender")
      get() = _builder.getShouldNotRender()
      @JvmName("setShouldNotRender")
      set(value) {
        _builder.setShouldNotRender(value)
      }
    /**
     * <code>optional bool should_not_render = 9;</code>
     */
    public fun clearShouldNotRender() {
      _builder.clearShouldNotRender()
    }
    /**
     * <code>optional bool should_not_render = 9;</code>
     * @return Whether the shouldNotRender field is set.
     */
    public fun hasShouldNotRender(): kotlin.Boolean {
      return _builder.hasShouldNotRender()
    }

    /**
     * <code>optional int32 int_image_height = 10;</code>
     */
    public var intImageHeight: kotlin.Int
      @JvmName("getIntImageHeight")
      get() = _builder.getIntImageHeight()
      @JvmName("setIntImageHeight")
      set(value) {
        _builder.setIntImageHeight(value)
      }
    /**
     * <code>optional int32 int_image_height = 10;</code>
     */
    public fun clearIntImageHeight() {
      _builder.clearIntImageHeight()
    }
    /**
     * <code>optional int32 int_image_height = 10;</code>
     * @return Whether the intImageHeight field is set.
     */
    public fun hasIntImageHeight(): kotlin.Boolean {
      return _builder.hasIntImageHeight()
    }

    /**
     * <code>optional int32 int_image_width = 11;</code>
     */
    public var intImageWidth: kotlin.Int
      @JvmName("getIntImageWidth")
      get() = _builder.getIntImageWidth()
      @JvmName("setIntImageWidth")
      set(value) {
        _builder.setIntImageWidth(value)
      }
    /**
     * <code>optional int32 int_image_width = 11;</code>
     */
    public fun clearIntImageWidth() {
      _builder.clearIntImageWidth()
    }
    /**
     * <code>optional int32 int_image_width = 11;</code>
     * @return Whether the intImageWidth field is set.
     */
    public fun hasIntImageWidth(): kotlin.Boolean {
      return _builder.hasIntImageWidth()
    }

    /**
     * <code>optional string mime_type = 12;</code>
     */
    public var mimeType: kotlin.String
      @JvmName("getMimeType")
      get() = _builder.getMimeType()
      @JvmName("setMimeType")
      set(value) {
        _builder.setMimeType(value)
      }
    /**
     * <code>optional string mime_type = 12;</code>
     */
    public fun clearMimeType() {
      _builder.clearMimeType()
    }
    /**
     * <code>optional string mime_type = 12;</code>
     * @return Whether the mimeType field is set.
     */
    public fun hasMimeType(): kotlin.Boolean {
      return _builder.hasMimeType()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.UrlMetadata.copy(block: org.matrix.dma.gchat.proto.UrlMetadataKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.UrlMetadata =
  org.matrix.dma.gchat.proto.UrlMetadataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.UrlMetadataOrBuilder.urlOrNull: org.matrix.dma.gchat.proto.Url?
  get() = if (hasUrl()) getUrl() else null

public val org.matrix.dma.gchat.proto.UrlMetadataOrBuilder.gwsUrlOrNull: org.matrix.dma.gchat.proto.Url?
  get() = if (hasGwsUrl()) getGwsUrl() else null

public val org.matrix.dma.gchat.proto.UrlMetadataOrBuilder.redirectUrlOrNull: org.matrix.dma.gchat.proto.Url?
  get() = if (hasRedirectUrl()) getRedirectUrl() else null

