//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializelistTopicsRequest")
public inline fun listTopicsRequest(block: org.matrix.dma.gchat.proto.ListTopicsRequestKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.ListTopicsRequest =
  org.matrix.dma.gchat.proto.ListTopicsRequestKt.Dsl._create(org.matrix.dma.gchat.proto.ListTopicsRequest.newBuilder()).apply { block() }._build()
public object ListTopicsRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.ListTopicsRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.ListTopicsRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.ListTopicsRequest = _builder.build()

    /**
     * <code>optional .RequestHeader request_header = 100;</code>
     */
    public var requestHeader: org.matrix.dma.gchat.proto.RequestHeader
      @JvmName("getRequestHeader")
      get() = _builder.getRequestHeader()
      @JvmName("setRequestHeader")
      set(value) {
        _builder.setRequestHeader(value)
      }
    /**
     * <code>optional .RequestHeader request_header = 100;</code>
     */
    public fun clearRequestHeader() {
      _builder.clearRequestHeader()
    }
    /**
     * <code>optional .RequestHeader request_header = 100;</code>
     * @return Whether the requestHeader field is set.
     */
    public fun hasRequestHeader(): kotlin.Boolean {
      return _builder.hasRequestHeader()
    }
    public val ListTopicsRequestKt.Dsl.requestHeaderOrNull: org.matrix.dma.gchat.proto.RequestHeader?
      get() = _builder.requestHeaderOrNull

    /**
     * <code>optional .GroupId group_id = 8;</code>
     */
    public var groupId: org.matrix.dma.gchat.proto.GroupId
      @JvmName("getGroupId")
      get() = _builder.getGroupId()
      @JvmName("setGroupId")
      set(value) {
        _builder.setGroupId(value)
      }
    /**
     * <code>optional .GroupId group_id = 8;</code>
     */
    public fun clearGroupId() {
      _builder.clearGroupId()
    }
    /**
     * <code>optional .GroupId group_id = 8;</code>
     * @return Whether the groupId field is set.
     */
    public fun hasGroupId(): kotlin.Boolean {
      return _builder.hasGroupId()
    }
    public val ListTopicsRequestKt.Dsl.groupIdOrNull: org.matrix.dma.gchat.proto.GroupId?
      get() = _builder.groupIdOrNull

    /**
     * <code>optional int32 page_size_for_topics = 2;</code>
     */
    public var pageSizeForTopics: kotlin.Int
      @JvmName("getPageSizeForTopics")
      get() = _builder.getPageSizeForTopics()
      @JvmName("setPageSizeForTopics")
      set(value) {
        _builder.setPageSizeForTopics(value)
      }
    /**
     * <code>optional int32 page_size_for_topics = 2;</code>
     */
    public fun clearPageSizeForTopics() {
      _builder.clearPageSizeForTopics()
    }
    /**
     * <code>optional int32 page_size_for_topics = 2;</code>
     * @return Whether the pageSizeForTopics field is set.
     */
    public fun hasPageSizeForTopics(): kotlin.Boolean {
      return _builder.hasPageSizeForTopics()
    }

    /**
     * <code>optional int32 page_size_for_unread_replies = 6;</code>
     */
    public var pageSizeForUnreadReplies: kotlin.Int
      @JvmName("getPageSizeForUnreadReplies")
      get() = _builder.getPageSizeForUnreadReplies()
      @JvmName("setPageSizeForUnreadReplies")
      set(value) {
        _builder.setPageSizeForUnreadReplies(value)
      }
    /**
     * <code>optional int32 page_size_for_unread_replies = 6;</code>
     */
    public fun clearPageSizeForUnreadReplies() {
      _builder.clearPageSizeForUnreadReplies()
    }
    /**
     * <code>optional int32 page_size_for_unread_replies = 6;</code>
     * @return Whether the pageSizeForUnreadReplies field is set.
     */
    public fun hasPageSizeForUnreadReplies(): kotlin.Boolean {
      return _builder.hasPageSizeForUnreadReplies()
    }

    /**
     * <code>optional int32 page_size_for_read_replies = 7;</code>
     */
    public var pageSizeForReadReplies: kotlin.Int
      @JvmName("getPageSizeForReadReplies")
      get() = _builder.getPageSizeForReadReplies()
      @JvmName("setPageSizeForReadReplies")
      set(value) {
        _builder.setPageSizeForReadReplies(value)
      }
    /**
     * <code>optional int32 page_size_for_read_replies = 7;</code>
     */
    public fun clearPageSizeForReadReplies() {
      _builder.clearPageSizeForReadReplies()
    }
    /**
     * <code>optional int32 page_size_for_read_replies = 7;</code>
     * @return Whether the pageSizeForReadReplies field is set.
     */
    public fun hasPageSizeForReadReplies(): kotlin.Boolean {
      return _builder.hasPageSizeForReadReplies()
    }

    /**
     * <pre>
     *optional DYNProtoListTopicsRequest_Filter filter = 4;
     * </pre>
     *
     * <code>optional int32 page_size_for_replies = 3;</code>
     */
    public var pageSizeForReplies: kotlin.Int
      @JvmName("getPageSizeForReplies")
      get() = _builder.getPageSizeForReplies()
      @JvmName("setPageSizeForReplies")
      set(value) {
        _builder.setPageSizeForReplies(value)
      }
    /**
     * <pre>
     *optional DYNProtoListTopicsRequest_Filter filter = 4;
     * </pre>
     *
     * <code>optional int32 page_size_for_replies = 3;</code>
     */
    public fun clearPageSizeForReplies() {
      _builder.clearPageSizeForReplies()
    }
    /**
     * <pre>
     *optional DYNProtoListTopicsRequest_Filter filter = 4;
     * </pre>
     *
     * <code>optional int32 page_size_for_replies = 3;</code>
     * @return Whether the pageSizeForReplies field is set.
     */
    public fun hasPageSizeForReplies(): kotlin.Boolean {
      return _builder.hasPageSizeForReplies()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class FetchOptionsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .ListTopicsRequest.FetchOptions fetch_options = 5;</code>
     */
    public val fetchOptions: com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.ListTopicsRequest.FetchOptions, FetchOptionsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getFetchOptionsList()
      )
    /**
     * <code>repeated .ListTopicsRequest.FetchOptions fetch_options = 5;</code>
     * @param value The fetchOptions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addFetchOptions")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.ListTopicsRequest.FetchOptions, FetchOptionsProxy>.add(value: org.matrix.dma.gchat.proto.ListTopicsRequest.FetchOptions) {
      _builder.addFetchOptions(value)
    }/**
     * <code>repeated .ListTopicsRequest.FetchOptions fetch_options = 5;</code>
     * @param value The fetchOptions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignFetchOptions")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.ListTopicsRequest.FetchOptions, FetchOptionsProxy>.plusAssign(value: org.matrix.dma.gchat.proto.ListTopicsRequest.FetchOptions) {
      add(value)
    }/**
     * <code>repeated .ListTopicsRequest.FetchOptions fetch_options = 5;</code>
     * @param values The fetchOptions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllFetchOptions")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.ListTopicsRequest.FetchOptions, FetchOptionsProxy>.addAll(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.ListTopicsRequest.FetchOptions>) {
      _builder.addAllFetchOptions(values)
    }/**
     * <code>repeated .ListTopicsRequest.FetchOptions fetch_options = 5;</code>
     * @param values The fetchOptions to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllFetchOptions")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.ListTopicsRequest.FetchOptions, FetchOptionsProxy>.plusAssign(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.ListTopicsRequest.FetchOptions>) {
      addAll(values)
    }/**
     * <code>repeated .ListTopicsRequest.FetchOptions fetch_options = 5;</code>
     * @param index The index to set the value at.
     * @param value The fetchOptions to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setFetchOptions")
    public operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.ListTopicsRequest.FetchOptions, FetchOptionsProxy>.set(index: kotlin.Int, value: org.matrix.dma.gchat.proto.ListTopicsRequest.FetchOptions) {
      _builder.setFetchOptions(index, value)
    }/**
     * <code>repeated .ListTopicsRequest.FetchOptions fetch_options = 5;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearFetchOptions")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.ListTopicsRequest.FetchOptions, FetchOptionsProxy>.clear() {
      _builder.clearFetchOptions()
    }
    /**
     * <code>optional .ReferenceRevision user_not_older_than = 9;</code>
     */
    public var userNotOlderThan: org.matrix.dma.gchat.proto.ReferenceRevision
      @JvmName("getUserNotOlderThan")
      get() = _builder.getUserNotOlderThan()
      @JvmName("setUserNotOlderThan")
      set(value) {
        _builder.setUserNotOlderThan(value)
      }
    /**
     * <code>optional .ReferenceRevision user_not_older_than = 9;</code>
     */
    public fun clearUserNotOlderThan() {
      _builder.clearUserNotOlderThan()
    }
    /**
     * <code>optional .ReferenceRevision user_not_older_than = 9;</code>
     * @return Whether the userNotOlderThan field is set.
     */
    public fun hasUserNotOlderThan(): kotlin.Boolean {
      return _builder.hasUserNotOlderThan()
    }
    public val ListTopicsRequestKt.Dsl.userNotOlderThanOrNull: org.matrix.dma.gchat.proto.ReferenceRevision?
      get() = _builder.userNotOlderThanOrNull

    /**
     * <pre>
     *optional DYNProtoListTopicsRequest_SortOption sort_option = 11;
     * </pre>
     *
     * <code>optional .ReferenceRevision group_not_older_than = 10;</code>
     */
    public var groupNotOlderThan: org.matrix.dma.gchat.proto.ReferenceRevision
      @JvmName("getGroupNotOlderThan")
      get() = _builder.getGroupNotOlderThan()
      @JvmName("setGroupNotOlderThan")
      set(value) {
        _builder.setGroupNotOlderThan(value)
      }
    /**
     * <pre>
     *optional DYNProtoListTopicsRequest_SortOption sort_option = 11;
     * </pre>
     *
     * <code>optional .ReferenceRevision group_not_older_than = 10;</code>
     */
    public fun clearGroupNotOlderThan() {
      _builder.clearGroupNotOlderThan()
    }
    /**
     * <pre>
     *optional DYNProtoListTopicsRequest_SortOption sort_option = 11;
     * </pre>
     *
     * <code>optional .ReferenceRevision group_not_older_than = 10;</code>
     * @return Whether the groupNotOlderThan field is set.
     */
    public fun hasGroupNotOlderThan(): kotlin.Boolean {
      return _builder.hasGroupNotOlderThan()
    }
    public val ListTopicsRequestKt.Dsl.groupNotOlderThanOrNull: org.matrix.dma.gchat.proto.ReferenceRevision?
      get() = _builder.groupNotOlderThanOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.ListTopicsRequest.copy(block: org.matrix.dma.gchat.proto.ListTopicsRequestKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.ListTopicsRequest =
  org.matrix.dma.gchat.proto.ListTopicsRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.ListTopicsRequestOrBuilder.requestHeaderOrNull: org.matrix.dma.gchat.proto.RequestHeader?
  get() = if (hasRequestHeader()) getRequestHeader() else null

public val org.matrix.dma.gchat.proto.ListTopicsRequestOrBuilder.groupIdOrNull: org.matrix.dma.gchat.proto.GroupId?
  get() = if (hasGroupId()) getGroupId() else null

public val org.matrix.dma.gchat.proto.ListTopicsRequestOrBuilder.userNotOlderThanOrNull: org.matrix.dma.gchat.proto.ReferenceRevision?
  get() = if (hasUserNotOlderThan()) getUserNotOlderThan() else null

public val org.matrix.dma.gchat.proto.ListTopicsRequestOrBuilder.groupNotOlderThanOrNull: org.matrix.dma.gchat.proto.ReferenceRevision?
  get() = if (hasGroupNotOlderThan()) getGroupNotOlderThan() else null

