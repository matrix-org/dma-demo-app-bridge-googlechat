//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializegroupNotificationSettings")
public inline fun groupNotificationSettings(block: org.matrix.dma.gchat.proto.GroupNotificationSettingsKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.GroupNotificationSettings =
  org.matrix.dma.gchat.proto.GroupNotificationSettingsKt.Dsl._create(org.matrix.dma.gchat.proto.GroupNotificationSettings.newBuilder()).apply { block() }._build()
public object GroupNotificationSettingsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.GroupNotificationSettings.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.GroupNotificationSettings.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.GroupNotificationSettings = _builder.build()

    /**
     * <code>optional .GroupNotificationSettings.GroupNotificationState state = 1;</code>
     */
    public var state: org.matrix.dma.gchat.proto.GroupNotificationSettings.GroupNotificationState
      @JvmName("getState")
      get() = _builder.getState()
      @JvmName("setState")
      set(value) {
        _builder.setState(value)
      }
    /**
     * <code>optional .GroupNotificationSettings.GroupNotificationState state = 1;</code>
     */
    public fun clearState() {
      _builder.clearState()
    }
    /**
     * <code>optional .GroupNotificationSettings.GroupNotificationState state = 1;</code>
     * @return Whether the state field is set.
     */
    public fun hasState(): kotlin.Boolean {
      return _builder.hasState()
    }

    /**
     * <code>optional .GroupNotificationSettings.RoomNotificationState room_state = 2;</code>
     */
    public var roomState: org.matrix.dma.gchat.proto.GroupNotificationSettings.RoomNotificationState
      @JvmName("getRoomState")
      get() = _builder.getRoomState()
      @JvmName("setRoomState")
      set(value) {
        _builder.setRoomState(value)
      }
    /**
     * <code>optional .GroupNotificationSettings.RoomNotificationState room_state = 2;</code>
     */
    public fun clearRoomState() {
      _builder.clearRoomState()
    }
    /**
     * <code>optional .GroupNotificationSettings.RoomNotificationState room_state = 2;</code>
     * @return Whether the roomState field is set.
     */
    public fun hasRoomState(): kotlin.Boolean {
      return _builder.hasRoomState()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.GroupNotificationSettings.copy(block: org.matrix.dma.gchat.proto.GroupNotificationSettingsKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.GroupNotificationSettings =
  org.matrix.dma.gchat.proto.GroupNotificationSettingsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

