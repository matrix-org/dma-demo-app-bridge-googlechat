//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializehideGroupRequest")
public inline fun hideGroupRequest(block: org.matrix.dma.gchat.proto.HideGroupRequestKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.HideGroupRequest =
  org.matrix.dma.gchat.proto.HideGroupRequestKt.Dsl._create(org.matrix.dma.gchat.proto.HideGroupRequest.newBuilder()).apply { block() }._build()
public object HideGroupRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.HideGroupRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.HideGroupRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.HideGroupRequest = _builder.build()

    /**
     * <code>optional .RequestHeader request_header = 100;</code>
     */
    public var requestHeader: org.matrix.dma.gchat.proto.RequestHeader
      @JvmName("getRequestHeader")
      get() = _builder.getRequestHeader()
      @JvmName("setRequestHeader")
      set(value) {
        _builder.setRequestHeader(value)
      }
    /**
     * <code>optional .RequestHeader request_header = 100;</code>
     */
    public fun clearRequestHeader() {
      _builder.clearRequestHeader()
    }
    /**
     * <code>optional .RequestHeader request_header = 100;</code>
     * @return Whether the requestHeader field is set.
     */
    public fun hasRequestHeader(): kotlin.Boolean {
      return _builder.hasRequestHeader()
    }
    public val HideGroupRequestKt.Dsl.requestHeaderOrNull: org.matrix.dma.gchat.proto.RequestHeader?
      get() = _builder.requestHeaderOrNull

    /**
     * <code>optional .GroupId id = 1;</code>
     */
    public var id: org.matrix.dma.gchat.proto.GroupId
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <code>optional .GroupId id = 1;</code>
     */
    public fun clearId() {
      _builder.clearId()
    }
    /**
     * <code>optional .GroupId id = 1;</code>
     * @return Whether the id field is set.
     */
    public fun hasId(): kotlin.Boolean {
      return _builder.hasId()
    }
    public val HideGroupRequestKt.Dsl.idOrNull: org.matrix.dma.gchat.proto.GroupId?
      get() = _builder.idOrNull

    /**
     * <code>optional bool hide = 2;</code>
     */
    public var hide: kotlin.Boolean
      @JvmName("getHide")
      get() = _builder.getHide()
      @JvmName("setHide")
      set(value) {
        _builder.setHide(value)
      }
    /**
     * <code>optional bool hide = 2;</code>
     */
    public fun clearHide() {
      _builder.clearHide()
    }
    /**
     * <code>optional bool hide = 2;</code>
     * @return Whether the hide field is set.
     */
    public fun hasHide(): kotlin.Boolean {
      return _builder.hasHide()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.HideGroupRequest.copy(block: org.matrix.dma.gchat.proto.HideGroupRequestKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.HideGroupRequest =
  org.matrix.dma.gchat.proto.HideGroupRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.HideGroupRequestOrBuilder.requestHeaderOrNull: org.matrix.dma.gchat.proto.RequestHeader?
  get() = if (hasRequestHeader()) getRequestHeader() else null

public val org.matrix.dma.gchat.proto.HideGroupRequestOrBuilder.idOrNull: org.matrix.dma.gchat.proto.GroupId?
  get() = if (hasId()) getId() else null

