//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializeupdateGroupResponse")
public inline fun updateGroupResponse(block: org.matrix.dma.gchat.proto.UpdateGroupResponseKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.UpdateGroupResponse =
  org.matrix.dma.gchat.proto.UpdateGroupResponseKt.Dsl._create(org.matrix.dma.gchat.proto.UpdateGroupResponse.newBuilder()).apply { block() }._build()
public object UpdateGroupResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.UpdateGroupResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.UpdateGroupResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.UpdateGroupResponse = _builder.build()

    /**
     * <code>optional .Group group = 1;</code>
     */
    public var group: org.matrix.dma.gchat.proto.Group
      @JvmName("getGroup")
      get() = _builder.getGroup()
      @JvmName("setGroup")
      set(value) {
        _builder.setGroup(value)
      }
    /**
     * <code>optional .Group group = 1;</code>
     */
    public fun clearGroup() {
      _builder.clearGroup()
    }
    /**
     * <code>optional .Group group = 1;</code>
     * @return Whether the group field is set.
     */
    public fun hasGroup(): kotlin.Boolean {
      return _builder.hasGroup()
    }
    public val UpdateGroupResponseKt.Dsl.groupOrNull: org.matrix.dma.gchat.proto.Group?
      get() = _builder.groupOrNull

    /**
     * <code>optional .WriteRevision group_revision = 2;</code>
     */
    public var groupRevision: org.matrix.dma.gchat.proto.WriteRevision
      @JvmName("getGroupRevision")
      get() = _builder.getGroupRevision()
      @JvmName("setGroupRevision")
      set(value) {
        _builder.setGroupRevision(value)
      }
    /**
     * <code>optional .WriteRevision group_revision = 2;</code>
     */
    public fun clearGroupRevision() {
      _builder.clearGroupRevision()
    }
    /**
     * <code>optional .WriteRevision group_revision = 2;</code>
     * @return Whether the groupRevision field is set.
     */
    public fun hasGroupRevision(): kotlin.Boolean {
      return _builder.hasGroupRevision()
    }
    public val UpdateGroupResponseKt.Dsl.groupRevisionOrNull: org.matrix.dma.gchat.proto.WriteRevision?
      get() = _builder.groupRevisionOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.UpdateGroupResponse.copy(block: org.matrix.dma.gchat.proto.UpdateGroupResponseKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.UpdateGroupResponse =
  org.matrix.dma.gchat.proto.UpdateGroupResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.UpdateGroupResponseOrBuilder.groupOrNull: org.matrix.dma.gchat.proto.Group?
  get() = if (hasGroup()) getGroup() else null

public val org.matrix.dma.gchat.proto.UpdateGroupResponseOrBuilder.groupRevisionOrNull: org.matrix.dma.gchat.proto.WriteRevision?
  get() = if (hasGroupRevision()) getGroupRevision() else null

