//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializerequestHeader")
public inline fun requestHeader(block: org.matrix.dma.gchat.proto.RequestHeaderKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.RequestHeader =
  org.matrix.dma.gchat.proto.RequestHeaderKt.Dsl._create(org.matrix.dma.gchat.proto.RequestHeader.newBuilder()).apply { block() }._build()
public object RequestHeaderKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.RequestHeader.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.RequestHeader.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.RequestHeader = _builder.build()

    /**
     * <code>optional int64 trace_id = 1;</code>
     */
    public var traceId: kotlin.Long
      @JvmName("getTraceId")
      get() = _builder.getTraceId()
      @JvmName("setTraceId")
      set(value) {
        _builder.setTraceId(value)
      }
    /**
     * <code>optional int64 trace_id = 1;</code>
     */
    public fun clearTraceId() {
      _builder.clearTraceId()
    }
    /**
     * <code>optional int64 trace_id = 1;</code>
     * @return Whether the traceId field is set.
     */
    public fun hasTraceId(): kotlin.Boolean {
      return _builder.hasTraceId()
    }

    /**
     * <code>optional .RequestHeader.ClientType client_type = 2;</code>
     */
    public var clientType: org.matrix.dma.gchat.proto.RequestHeader.ClientType
      @JvmName("getClientType")
      get() = _builder.getClientType()
      @JvmName("setClientType")
      set(value) {
        _builder.setClientType(value)
      }
    /**
     * <code>optional .RequestHeader.ClientType client_type = 2;</code>
     */
    public fun clearClientType() {
      _builder.clearClientType()
    }
    /**
     * <code>optional .RequestHeader.ClientType client_type = 2;</code>
     * @return Whether the clientType field is set.
     */
    public fun hasClientType(): kotlin.Boolean {
      return _builder.hasClientType()
    }

    /**
     * <code>optional int64 client_version = 3;</code>
     */
    public var clientVersion: kotlin.Long
      @JvmName("getClientVersion")
      get() = _builder.getClientVersion()
      @JvmName("setClientVersion")
      set(value) {
        _builder.setClientVersion(value)
      }
    /**
     * <code>optional int64 client_version = 3;</code>
     */
    public fun clearClientVersion() {
      _builder.clearClientVersion()
    }
    /**
     * <code>optional int64 client_version = 3;</code>
     * @return Whether the clientVersion field is set.
     */
    public fun hasClientVersion(): kotlin.Boolean {
      return _builder.hasClientVersion()
    }

    /**
     * <code>optional string locale = 4;</code>
     */
    public var locale: kotlin.String
      @JvmName("getLocale")
      get() = _builder.getLocale()
      @JvmName("setLocale")
      set(value) {
        _builder.setLocale(value)
      }
    /**
     * <code>optional string locale = 4;</code>
     */
    public fun clearLocale() {
      _builder.clearLocale()
    }
    /**
     * <code>optional string locale = 4;</code>
     * @return Whether the locale field is set.
     */
    public fun hasLocale(): kotlin.Boolean {
      return _builder.hasLocale()
    }

    /**
     * <code>optional .ClientFeatureCapabilities client_feature_capabilities = 5;</code>
     */
    public var clientFeatureCapabilities: org.matrix.dma.gchat.proto.ClientFeatureCapabilities
      @JvmName("getClientFeatureCapabilities")
      get() = _builder.getClientFeatureCapabilities()
      @JvmName("setClientFeatureCapabilities")
      set(value) {
        _builder.setClientFeatureCapabilities(value)
      }
    /**
     * <code>optional .ClientFeatureCapabilities client_feature_capabilities = 5;</code>
     */
    public fun clearClientFeatureCapabilities() {
      _builder.clearClientFeatureCapabilities()
    }
    /**
     * <code>optional .ClientFeatureCapabilities client_feature_capabilities = 5;</code>
     * @return Whether the clientFeatureCapabilities field is set.
     */
    public fun hasClientFeatureCapabilities(): kotlin.Boolean {
      return _builder.hasClientFeatureCapabilities()
    }
    public val RequestHeaderKt.Dsl.clientFeatureCapabilitiesOrNull: org.matrix.dma.gchat.proto.ClientFeatureCapabilities?
      get() = _builder.clientFeatureCapabilitiesOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.RequestHeader.copy(block: org.matrix.dma.gchat.proto.RequestHeaderKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.RequestHeader =
  org.matrix.dma.gchat.proto.RequestHeaderKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.RequestHeaderOrBuilder.clientFeatureCapabilitiesOrNull: org.matrix.dma.gchat.proto.ClientFeatureCapabilities?
  get() = if (hasClientFeatureCapabilities()) getClientFeatureCapabilities() else null

