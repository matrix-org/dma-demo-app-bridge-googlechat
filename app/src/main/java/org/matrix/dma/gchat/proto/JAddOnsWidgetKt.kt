//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializejAddOnsWidget")
public inline fun jAddOnsWidget(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.newBuilder()).apply { block() }._build()
public object JAddOnsWidgetKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget = _builder.build()

    /**
     * <pre>
     *oneof Data {
     * </pre>
     *
     * <code>optional .JAddOnsTextWidget text_widget = 1;</code>
     */
    public var textWidget: org.matrix.dma.gchat.proto.JAddOnsTextWidget
      @JvmName("getTextWidget")
      get() = _builder.getTextWidget()
      @JvmName("setTextWidget")
      set(value) {
        _builder.setTextWidget(value)
      }
    /**
     * <pre>
     *oneof Data {
     * </pre>
     *
     * <code>optional .JAddOnsTextWidget text_widget = 1;</code>
     */
    public fun clearTextWidget() {
      _builder.clearTextWidget()
    }
    /**
     * <pre>
     *oneof Data {
     * </pre>
     *
     * <code>optional .JAddOnsTextWidget text_widget = 1;</code>
     * @return Whether the textWidget field is set.
     */
    public fun hasTextWidget(): kotlin.Boolean {
      return _builder.hasTextWidget()
    }
    public val JAddOnsWidgetKt.Dsl.textWidgetOrNull: org.matrix.dma.gchat.proto.JAddOnsTextWidget?
      get() = _builder.textWidgetOrNull

    /**
     * <code>optional .JAddOnsLabelContentPairWidget label_content_pair_widget = 2;</code>
     */
    public var labelContentPairWidget: org.matrix.dma.gchat.proto.JAddOnsLabelContentPairWidget
      @JvmName("getLabelContentPairWidget")
      get() = _builder.getLabelContentPairWidget()
      @JvmName("setLabelContentPairWidget")
      set(value) {
        _builder.setLabelContentPairWidget(value)
      }
    /**
     * <code>optional .JAddOnsLabelContentPairWidget label_content_pair_widget = 2;</code>
     */
    public fun clearLabelContentPairWidget() {
      _builder.clearLabelContentPairWidget()
    }
    /**
     * <code>optional .JAddOnsLabelContentPairWidget label_content_pair_widget = 2;</code>
     * @return Whether the labelContentPairWidget field is set.
     */
    public fun hasLabelContentPairWidget(): kotlin.Boolean {
      return _builder.hasLabelContentPairWidget()
    }
    public val JAddOnsWidgetKt.Dsl.labelContentPairWidgetOrNull: org.matrix.dma.gchat.proto.JAddOnsLabelContentPairWidget?
      get() = _builder.labelContentPairWidgetOrNull

    /**
     * <code>optional .JAddOnsWidget.TextParagraph text_paragraph = 3;</code>
     */
    public var textParagraph: org.matrix.dma.gchat.proto.JAddOnsWidget.TextParagraph
      @JvmName("getTextParagraph")
      get() = _builder.getTextParagraph()
      @JvmName("setTextParagraph")
      set(value) {
        _builder.setTextParagraph(value)
      }
    /**
     * <code>optional .JAddOnsWidget.TextParagraph text_paragraph = 3;</code>
     */
    public fun clearTextParagraph() {
      _builder.clearTextParagraph()
    }
    /**
     * <code>optional .JAddOnsWidget.TextParagraph text_paragraph = 3;</code>
     * @return Whether the textParagraph field is set.
     */
    public fun hasTextParagraph(): kotlin.Boolean {
      return _builder.hasTextParagraph()
    }
    public val JAddOnsWidgetKt.Dsl.textParagraphOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.TextParagraph?
      get() = _builder.textParagraphOrNull

    /**
     * <code>optional .JAddOnsWidget.TextKeyValue text_key_value = 4;</code>
     */
    public var textKeyValue: org.matrix.dma.gchat.proto.JAddOnsWidget.TextKeyValue
      @JvmName("getTextKeyValue")
      get() = _builder.getTextKeyValue()
      @JvmName("setTextKeyValue")
      set(value) {
        _builder.setTextKeyValue(value)
      }
    /**
     * <code>optional .JAddOnsWidget.TextKeyValue text_key_value = 4;</code>
     */
    public fun clearTextKeyValue() {
      _builder.clearTextKeyValue()
    }
    /**
     * <code>optional .JAddOnsWidget.TextKeyValue text_key_value = 4;</code>
     * @return Whether the textKeyValue field is set.
     */
    public fun hasTextKeyValue(): kotlin.Boolean {
      return _builder.hasTextKeyValue()
    }
    public val JAddOnsWidgetKt.Dsl.textKeyValueOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.TextKeyValue?
      get() = _builder.textKeyValueOrNull

    /**
     * <code>optional .JAddOnsWidget.ImageKeyValue image_key_value = 5;</code>
     */
    public var imageKeyValue: org.matrix.dma.gchat.proto.JAddOnsWidget.ImageKeyValue
      @JvmName("getImageKeyValue")
      get() = _builder.getImageKeyValue()
      @JvmName("setImageKeyValue")
      set(value) {
        _builder.setImageKeyValue(value)
      }
    /**
     * <code>optional .JAddOnsWidget.ImageKeyValue image_key_value = 5;</code>
     */
    public fun clearImageKeyValue() {
      _builder.clearImageKeyValue()
    }
    /**
     * <code>optional .JAddOnsWidget.ImageKeyValue image_key_value = 5;</code>
     * @return Whether the imageKeyValue field is set.
     */
    public fun hasImageKeyValue(): kotlin.Boolean {
      return _builder.hasImageKeyValue()
    }
    public val JAddOnsWidgetKt.Dsl.imageKeyValueOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.ImageKeyValue?
      get() = _builder.imageKeyValueOrNull

    /**
     * <code>optional .JAddOnsWidget.Image image = 9;</code>
     */
    public var image: org.matrix.dma.gchat.proto.JAddOnsWidget.Image
      @JvmName("getImage")
      get() = _builder.getImage()
      @JvmName("setImage")
      set(value) {
        _builder.setImage(value)
      }
    /**
     * <code>optional .JAddOnsWidget.Image image = 9;</code>
     */
    public fun clearImage() {
      _builder.clearImage()
    }
    /**
     * <code>optional .JAddOnsWidget.Image image = 9;</code>
     * @return Whether the image field is set.
     */
    public fun hasImage(): kotlin.Boolean {
      return _builder.hasImage()
    }
    public val JAddOnsWidgetKt.Dsl.imageOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.Image?
      get() = _builder.imageOrNull

    /**
     * <code>optional .JAddOnsWidget.KeyValue key_value = 13;</code>
     */
    public var keyValue: org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue
      @JvmName("getKeyValue")
      get() = _builder.getKeyValue()
      @JvmName("setKeyValue")
      set(value) {
        _builder.setKeyValue(value)
      }
    /**
     * <code>optional .JAddOnsWidget.KeyValue key_value = 13;</code>
     */
    public fun clearKeyValue() {
      _builder.clearKeyValue()
    }
    /**
     * <code>optional .JAddOnsWidget.KeyValue key_value = 13;</code>
     * @return Whether the keyValue field is set.
     */
    public fun hasKeyValue(): kotlin.Boolean {
      return _builder.hasKeyValue()
    }
    public val JAddOnsWidgetKt.Dsl.keyValueOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue?
      get() = _builder.keyValueOrNull

    /**
     * <code>optional .JAddOnsWidget.Divider divider = 16;</code>
     */
    public var divider: org.matrix.dma.gchat.proto.JAddOnsWidget.Divider
      @JvmName("getDivider")
      get() = _builder.getDivider()
      @JvmName("setDivider")
      set(value) {
        _builder.setDivider(value)
      }
    /**
     * <code>optional .JAddOnsWidget.Divider divider = 16;</code>
     */
    public fun clearDivider() {
      _builder.clearDivider()
    }
    /**
     * <code>optional .JAddOnsWidget.Divider divider = 16;</code>
     * @return Whether the divider field is set.
     */
    public fun hasDivider(): kotlin.Boolean {
      return _builder.hasDivider()
    }
    public val JAddOnsWidgetKt.Dsl.dividerOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.Divider?
      get() = _builder.dividerOrNull

    /**
     * <code>optional .JAddOnsGrid grid = 17;</code>
     */
    public var grid: org.matrix.dma.gchat.proto.JAddOnsGrid
      @JvmName("getGrid")
      get() = _builder.getGrid()
      @JvmName("setGrid")
      set(value) {
        _builder.setGrid(value)
      }
    /**
     * <code>optional .JAddOnsGrid grid = 17;</code>
     */
    public fun clearGrid() {
      _builder.clearGrid()
    }
    /**
     * <code>optional .JAddOnsGrid grid = 17;</code>
     * @return Whether the grid field is set.
     */
    public fun hasGrid(): kotlin.Boolean {
      return _builder.hasGrid()
    }
    public val JAddOnsWidgetKt.Dsl.gridOrNull: org.matrix.dma.gchat.proto.JAddOnsGrid?
      get() = _builder.gridOrNull

    /**
     * <code>optional .JAddOnsWidget.Menu menu = 10;</code>
     */
    public var menu: org.matrix.dma.gchat.proto.JAddOnsWidget.Menu
      @JvmName("getMenu")
      get() = _builder.getMenu()
      @JvmName("setMenu")
      set(value) {
        _builder.setMenu(value)
      }
    /**
     * <code>optional .JAddOnsWidget.Menu menu = 10;</code>
     */
    public fun clearMenu() {
      _builder.clearMenu()
    }
    /**
     * <code>optional .JAddOnsWidget.Menu menu = 10;</code>
     * @return Whether the menu field is set.
     */
    public fun hasMenu(): kotlin.Boolean {
      return _builder.hasMenu()
    }
    public val JAddOnsWidgetKt.Dsl.menuOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.Menu?
      get() = _builder.menuOrNull

    /**
     * <code>optional .JAddOnsWidget.TextField text_field = 11;</code>
     */
    public var textField: org.matrix.dma.gchat.proto.JAddOnsWidget.TextField
      @JvmName("getTextField")
      get() = _builder.getTextField()
      @JvmName("setTextField")
      set(value) {
        _builder.setTextField(value)
      }
    /**
     * <code>optional .JAddOnsWidget.TextField text_field = 11;</code>
     */
    public fun clearTextField() {
      _builder.clearTextField()
    }
    /**
     * <code>optional .JAddOnsWidget.TextField text_field = 11;</code>
     * @return Whether the textField field is set.
     */
    public fun hasTextField(): kotlin.Boolean {
      return _builder.hasTextField()
    }
    public val JAddOnsWidgetKt.Dsl.textFieldOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.TextField?
      get() = _builder.textFieldOrNull

    /**
     * <code>optional .JAddOnsWidget.SelectionControl selection_control = 12;</code>
     */
    public var selectionControl: org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl
      @JvmName("getSelectionControl")
      get() = _builder.getSelectionControl()
      @JvmName("setSelectionControl")
      set(value) {
        _builder.setSelectionControl(value)
      }
    /**
     * <code>optional .JAddOnsWidget.SelectionControl selection_control = 12;</code>
     */
    public fun clearSelectionControl() {
      _builder.clearSelectionControl()
    }
    /**
     * <code>optional .JAddOnsWidget.SelectionControl selection_control = 12;</code>
     * @return Whether the selectionControl field is set.
     */
    public fun hasSelectionControl(): kotlin.Boolean {
      return _builder.hasSelectionControl()
    }
    public val JAddOnsWidgetKt.Dsl.selectionControlOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl?
      get() = _builder.selectionControlOrNull

    /**
     * <code>optional .JAddOnsWidget.DateTimePicker date_time_picker = 14;</code>
     */
    public var dateTimePicker: org.matrix.dma.gchat.proto.JAddOnsWidget.DateTimePicker
      @JvmName("getDateTimePicker")
      get() = _builder.getDateTimePicker()
      @JvmName("setDateTimePicker")
      set(value) {
        _builder.setDateTimePicker(value)
      }
    /**
     * <code>optional .JAddOnsWidget.DateTimePicker date_time_picker = 14;</code>
     */
    public fun clearDateTimePicker() {
      _builder.clearDateTimePicker()
    }
    /**
     * <code>optional .JAddOnsWidget.DateTimePicker date_time_picker = 14;</code>
     * @return Whether the dateTimePicker field is set.
     */
    public fun hasDateTimePicker(): kotlin.Boolean {
      return _builder.hasDateTimePicker()
    }
    public val JAddOnsWidgetKt.Dsl.dateTimePickerOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.DateTimePicker?
      get() = _builder.dateTimePickerOrNull

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ButtonsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     *}
     * </pre>
     *
     * <code>repeated .JAddOnsWidget.Button buttons = 8;</code>
     */
     public val buttons: com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.Button, ButtonsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getButtonsList()
      )
    /**
     * <pre>
     *}
     * </pre>
     *
     * <code>repeated .JAddOnsWidget.Button buttons = 8;</code>
     * @param value The buttons to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addButtons")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.Button, ButtonsProxy>.add(value: org.matrix.dma.gchat.proto.JAddOnsWidget.Button) {
      _builder.addButtons(value)
    }
    /**
     * <pre>
     *}
     * </pre>
     *
     * <code>repeated .JAddOnsWidget.Button buttons = 8;</code>
     * @param value The buttons to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignButtons")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.Button, ButtonsProxy>.plusAssign(value: org.matrix.dma.gchat.proto.JAddOnsWidget.Button) {
      add(value)
    }
    /**
     * <pre>
     *}
     * </pre>
     *
     * <code>repeated .JAddOnsWidget.Button buttons = 8;</code>
     * @param values The buttons to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllButtons")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.Button, ButtonsProxy>.addAll(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.JAddOnsWidget.Button>) {
      _builder.addAllButtons(values)
    }
    /**
     * <pre>
     *}
     * </pre>
     *
     * <code>repeated .JAddOnsWidget.Button buttons = 8;</code>
     * @param values The buttons to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllButtons")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.Button, ButtonsProxy>.plusAssign(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.JAddOnsWidget.Button>) {
      addAll(values)
    }
    /**
     * <pre>
     *}
     * </pre>
     *
     * <code>repeated .JAddOnsWidget.Button buttons = 8;</code>
     * @param index The index to set the value at.
     * @param value The buttons to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setButtons")
    public operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.Button, ButtonsProxy>.set(index: kotlin.Int, value: org.matrix.dma.gchat.proto.JAddOnsWidget.Button) {
      _builder.setButtons(index, value)
    }
    /**
     * <pre>
     *}
     * </pre>
     *
     * <code>repeated .JAddOnsWidget.Button buttons = 8;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearButtons")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.Button, ButtonsProxy>.clear() {
      _builder.clearButtons()
    }


    /**
     * <code>optional .JAddOnsWidget.HorizontalAlign horizontal_align = 15;</code>
     */
    public var horizontalAlign: org.matrix.dma.gchat.proto.JAddOnsWidget.HorizontalAlign
      @JvmName("getHorizontalAlign")
      get() = _builder.getHorizontalAlign()
      @JvmName("setHorizontalAlign")
      set(value) {
        _builder.setHorizontalAlign(value)
      }
    /**
     * <code>optional .JAddOnsWidget.HorizontalAlign horizontal_align = 15;</code>
     */
    public fun clearHorizontalAlign() {
      _builder.clearHorizontalAlign()
    }
    /**
     * <code>optional .JAddOnsWidget.HorizontalAlign horizontal_align = 15;</code>
     * @return Whether the horizontalAlign field is set.
     */
    public fun hasHorizontalAlign(): kotlin.Boolean {
      return _builder.hasHorizontalAlign()
    }
  }
  @kotlin.jvm.JvmName("-initializetextParagraph")
  public inline fun textParagraph(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.TextParagraphKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.TextParagraph =
    org.matrix.dma.gchat.proto.JAddOnsWidgetKt.TextParagraphKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.TextParagraph.newBuilder()).apply { block() }._build()
  public object TextParagraphKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.TextParagraph.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.TextParagraph.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget.TextParagraph = _builder.build()

      /**
       * <code>optional .JAddOnsFormattedText text = 1;</code>
       */
      public var text: org.matrix.dma.gchat.proto.JAddOnsFormattedText
        @JvmName("getText")
        get() = _builder.getText()
        @JvmName("setText")
        set(value) {
          _builder.setText(value)
        }
      /**
       * <code>optional .JAddOnsFormattedText text = 1;</code>
       */
      public fun clearText() {
        _builder.clearText()
      }
      /**
       * <code>optional .JAddOnsFormattedText text = 1;</code>
       * @return Whether the text field is set.
       */
      public fun hasText(): kotlin.Boolean {
        return _builder.hasText()
      }
      public val TextParagraphKt.Dsl.textOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText?
        get() = _builder.textOrNull
    }
  }
  @kotlin.jvm.JvmName("-initializetextKeyValue")
  public inline fun textKeyValue(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.TextKeyValueKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.TextKeyValue =
    org.matrix.dma.gchat.proto.JAddOnsWidgetKt.TextKeyValueKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.TextKeyValue.newBuilder()).apply { block() }._build()
  public object TextKeyValueKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.TextKeyValue.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.TextKeyValue.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget.TextKeyValue = _builder.build()

      /**
       * <code>optional .JAddOnsFormattedText key = 1;</code>
       */
      public var key: org.matrix.dma.gchat.proto.JAddOnsFormattedText
        @JvmName("getKey")
        get() = _builder.getKey()
        @JvmName("setKey")
        set(value) {
          _builder.setKey(value)
        }
      /**
       * <code>optional .JAddOnsFormattedText key = 1;</code>
       */
      public fun clearKey() {
        _builder.clearKey()
      }
      /**
       * <code>optional .JAddOnsFormattedText key = 1;</code>
       * @return Whether the key field is set.
       */
      public fun hasKey(): kotlin.Boolean {
        return _builder.hasKey()
      }
      public val TextKeyValueKt.Dsl.keyOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText?
        get() = _builder.keyOrNull

      /**
       * <code>optional .JAddOnsFormattedText text = 2;</code>
       */
      public var text: org.matrix.dma.gchat.proto.JAddOnsFormattedText
        @JvmName("getText")
        get() = _builder.getText()
        @JvmName("setText")
        set(value) {
          _builder.setText(value)
        }
      /**
       * <code>optional .JAddOnsFormattedText text = 2;</code>
       */
      public fun clearText() {
        _builder.clearText()
      }
      /**
       * <code>optional .JAddOnsFormattedText text = 2;</code>
       * @return Whether the text field is set.
       */
      public fun hasText(): kotlin.Boolean {
        return _builder.hasText()
      }
      public val TextKeyValueKt.Dsl.textOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText?
        get() = _builder.textOrNull

      /**
       * <code>optional .JAddOnsOnClick on_click = 3;</code>
       */
      public var onClick: org.matrix.dma.gchat.proto.JAddOnsOnClick
        @JvmName("getOnClick")
        get() = _builder.getOnClick()
        @JvmName("setOnClick")
        set(value) {
          _builder.setOnClick(value)
        }
      /**
       * <code>optional .JAddOnsOnClick on_click = 3;</code>
       */
      public fun clearOnClick() {
        _builder.clearOnClick()
      }
      /**
       * <code>optional .JAddOnsOnClick on_click = 3;</code>
       * @return Whether the onClick field is set.
       */
      public fun hasOnClick(): kotlin.Boolean {
        return _builder.hasOnClick()
      }
      public val TextKeyValueKt.Dsl.onClickOrNull: org.matrix.dma.gchat.proto.JAddOnsOnClick?
        get() = _builder.onClickOrNull
    }
  }
  @kotlin.jvm.JvmName("-initializeimageKeyValue")
  public inline fun imageKeyValue(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.ImageKeyValueKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.ImageKeyValue =
    org.matrix.dma.gchat.proto.JAddOnsWidgetKt.ImageKeyValueKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.ImageKeyValue.newBuilder()).apply { block() }._build()
  public object ImageKeyValueKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.ImageKeyValue.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.ImageKeyValue.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget.ImageKeyValue = _builder.build()

      /**
       * <code>optional string icon_url = 1;</code>
       */
      public var iconUrl: kotlin.String
        @JvmName("getIconUrl")
        get() = _builder.getIconUrl()
        @JvmName("setIconUrl")
        set(value) {
          _builder.setIconUrl(value)
        }
      /**
       * <code>optional string icon_url = 1;</code>
       */
      public fun clearIconUrl() {
        _builder.clearIconUrl()
      }
      /**
       * <code>optional string icon_url = 1;</code>
       * @return Whether the iconUrl field is set.
       */
      public fun hasIconUrl(): kotlin.Boolean {
        return _builder.hasIconUrl()
      }

      /**
       * <code>optional .JAddOnsFormattedText text = 2;</code>
       */
      public var text: org.matrix.dma.gchat.proto.JAddOnsFormattedText
        @JvmName("getText")
        get() = _builder.getText()
        @JvmName("setText")
        set(value) {
          _builder.setText(value)
        }
      /**
       * <code>optional .JAddOnsFormattedText text = 2;</code>
       */
      public fun clearText() {
        _builder.clearText()
      }
      /**
       * <code>optional .JAddOnsFormattedText text = 2;</code>
       * @return Whether the text field is set.
       */
      public fun hasText(): kotlin.Boolean {
        return _builder.hasText()
      }
      public val ImageKeyValueKt.Dsl.textOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText?
        get() = _builder.textOrNull

      /**
       * <code>optional .JAddOnsOnClick on_click = 3;</code>
       */
      public var onClick: org.matrix.dma.gchat.proto.JAddOnsOnClick
        @JvmName("getOnClick")
        get() = _builder.getOnClick()
        @JvmName("setOnClick")
        set(value) {
          _builder.setOnClick(value)
        }
      /**
       * <code>optional .JAddOnsOnClick on_click = 3;</code>
       */
      public fun clearOnClick() {
        _builder.clearOnClick()
      }
      /**
       * <code>optional .JAddOnsOnClick on_click = 3;</code>
       * @return Whether the onClick field is set.
       */
      public fun hasOnClick(): kotlin.Boolean {
        return _builder.hasOnClick()
      }
      public val ImageKeyValueKt.Dsl.onClickOrNull: org.matrix.dma.gchat.proto.JAddOnsOnClick?
        get() = _builder.onClickOrNull
    }
  }
  @kotlin.jvm.JvmName("-initializeimage")
  public inline fun image(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.ImageKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.Image =
    org.matrix.dma.gchat.proto.JAddOnsWidgetKt.ImageKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.Image.newBuilder()).apply { block() }._build()
  public object ImageKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.Image.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.Image.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget.Image = _builder.build()

      /**
       * <code>optional .JAddOnsIdentifier id = 5;</code>
       */
      public var id: org.matrix.dma.gchat.proto.JAddOnsIdentifier
        @JvmName("getId")
        get() = _builder.getId()
        @JvmName("setId")
        set(value) {
          _builder.setId(value)
        }
      /**
       * <code>optional .JAddOnsIdentifier id = 5;</code>
       */
      public fun clearId() {
        _builder.clearId()
      }
      /**
       * <code>optional .JAddOnsIdentifier id = 5;</code>
       * @return Whether the id field is set.
       */
      public fun hasId(): kotlin.Boolean {
        return _builder.hasId()
      }
      public val ImageKt.Dsl.idOrNull: org.matrix.dma.gchat.proto.JAddOnsIdentifier?
        get() = _builder.idOrNull

      /**
       * <code>optional string fife_image_url = 1;</code>
       */
      public var fifeImageUrl: kotlin.String
        @JvmName("getFifeImageUrl")
        get() = _builder.getFifeImageUrl()
        @JvmName("setFifeImageUrl")
        set(value) {
          _builder.setFifeImageUrl(value)
        }
      /**
       * <code>optional string fife_image_url = 1;</code>
       */
      public fun clearFifeImageUrl() {
        _builder.clearFifeImageUrl()
      }
      /**
       * <code>optional string fife_image_url = 1;</code>
       * @return Whether the fifeImageUrl field is set.
       */
      public fun hasFifeImageUrl(): kotlin.Boolean {
        return _builder.hasFifeImageUrl()
      }

      /**
       * <code>optional .JAddOnsOnClick on_click = 2;</code>
       */
      public var onClick: org.matrix.dma.gchat.proto.JAddOnsOnClick
        @JvmName("getOnClick")
        get() = _builder.getOnClick()
        @JvmName("setOnClick")
        set(value) {
          _builder.setOnClick(value)
        }
      /**
       * <code>optional .JAddOnsOnClick on_click = 2;</code>
       */
      public fun clearOnClick() {
        _builder.clearOnClick()
      }
      /**
       * <code>optional .JAddOnsOnClick on_click = 2;</code>
       * @return Whether the onClick field is set.
       */
      public fun hasOnClick(): kotlin.Boolean {
        return _builder.hasOnClick()
      }
      public val ImageKt.Dsl.onClickOrNull: org.matrix.dma.gchat.proto.JAddOnsOnClick?
        get() = _builder.onClickOrNull

      /**
       * <code>optional double aspect_ratio = 3;</code>
       */
      public var aspectRatio: kotlin.Double
        @JvmName("getAspectRatio")
        get() = _builder.getAspectRatio()
        @JvmName("setAspectRatio")
        set(value) {
          _builder.setAspectRatio(value)
        }
      /**
       * <code>optional double aspect_ratio = 3;</code>
       */
      public fun clearAspectRatio() {
        _builder.clearAspectRatio()
      }
      /**
       * <code>optional double aspect_ratio = 3;</code>
       * @return Whether the aspectRatio field is set.
       */
      public fun hasAspectRatio(): kotlin.Boolean {
        return _builder.hasAspectRatio()
      }

      /**
       * <code>optional string alt_text = 4;</code>
       */
      public var altText: kotlin.String
        @JvmName("getAltText")
        get() = _builder.getAltText()
        @JvmName("setAltText")
        set(value) {
          _builder.setAltText(value)
        }
      /**
       * <code>optional string alt_text = 4;</code>
       */
      public fun clearAltText() {
        _builder.clearAltText()
      }
      /**
       * <code>optional string alt_text = 4;</code>
       * @return Whether the altText field is set.
       */
      public fun hasAltText(): kotlin.Boolean {
        return _builder.hasAltText()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializeicon")
  public inline fun icon(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.IconKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.Icon =
    org.matrix.dma.gchat.proto.JAddOnsWidgetKt.IconKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.Icon.newBuilder()).apply { block() }._build()
  public object IconKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.Icon.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.Icon.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget.Icon = _builder.build()

      /**
       * <code>optional string icon_url = 1;</code>
       */
      public var iconUrl: kotlin.String
        @JvmName("getIconUrl")
        get() = _builder.getIconUrl()
        @JvmName("setIconUrl")
        set(value) {
          _builder.setIconUrl(value)
        }
      /**
       * <code>optional string icon_url = 1;</code>
       */
      public fun clearIconUrl() {
        _builder.clearIconUrl()
      }
      /**
       * <code>optional string icon_url = 1;</code>
       * @return Whether the iconUrl field is set.
       */
      public fun hasIconUrl(): kotlin.Boolean {
        return _builder.hasIconUrl()
      }

      /**
       * <code>optional string alt_text = 2;</code>
       */
      public var altText: kotlin.String
        @JvmName("getAltText")
        get() = _builder.getAltText()
        @JvmName("setAltText")
        set(value) {
          _builder.setAltText(value)
        }
      /**
       * <code>optional string alt_text = 2;</code>
       */
      public fun clearAltText() {
        _builder.clearAltText()
      }
      /**
       * <code>optional string alt_text = 2;</code>
       * @return Whether the altText field is set.
       */
      public fun hasAltText(): kotlin.Boolean {
        return _builder.hasAltText()
      }

      /**
       * <code>optional .JAddOnsImageCropStyle.ImageCropType image_style = 3;</code>
       */
      public var imageStyle: org.matrix.dma.gchat.proto.JAddOnsImageCropStyle.ImageCropType
        @JvmName("getImageStyle")
        get() = _builder.getImageStyle()
        @JvmName("setImageStyle")
        set(value) {
          _builder.setImageStyle(value)
        }
      /**
       * <code>optional .JAddOnsImageCropStyle.ImageCropType image_style = 3;</code>
       */
      public fun clearImageStyle() {
        _builder.clearImageStyle()
      }
      /**
       * <code>optional .JAddOnsImageCropStyle.ImageCropType image_style = 3;</code>
       * @return Whether the imageStyle field is set.
       */
      public fun hasImageStyle(): kotlin.Boolean {
        return _builder.hasImageStyle()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializekeyValue")
  public inline fun keyValue(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.KeyValueKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue =
    org.matrix.dma.gchat.proto.JAddOnsWidgetKt.KeyValueKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue.newBuilder()).apply { block() }._build()
  public object KeyValueKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue = _builder.build()

      /**
       * <code>optional string icon_url = 1;</code>
       */
      public var iconUrl: kotlin.String
        @JvmName("getIconUrl")
        get() = _builder.getIconUrl()
        @JvmName("setIconUrl")
        set(value) {
          _builder.setIconUrl(value)
        }
      /**
       * <code>optional string icon_url = 1;</code>
       */
      public fun clearIconUrl() {
        _builder.clearIconUrl()
      }
      /**
       * <code>optional string icon_url = 1;</code>
       * @return Whether the iconUrl field is set.
       */
      public fun hasIconUrl(): kotlin.Boolean {
        return _builder.hasIconUrl()
      }

      /**
       * <code>optional string icon_alt_text = 9;</code>
       */
      public var iconAltText: kotlin.String
        @JvmName("getIconAltText")
        get() = _builder.getIconAltText()
        @JvmName("setIconAltText")
        set(value) {
          _builder.setIconAltText(value)
        }
      /**
       * <code>optional string icon_alt_text = 9;</code>
       */
      public fun clearIconAltText() {
        _builder.clearIconAltText()
      }
      /**
       * <code>optional string icon_alt_text = 9;</code>
       * @return Whether the iconAltText field is set.
       */
      public fun hasIconAltText(): kotlin.Boolean {
        return _builder.hasIconAltText()
      }

      /**
       * <code>optional .JAddOnsImageCropStyle.ImageCropType image_style = 10;</code>
       */
      public var imageStyle: org.matrix.dma.gchat.proto.JAddOnsImageCropStyle.ImageCropType
        @JvmName("getImageStyle")
        get() = _builder.getImageStyle()
        @JvmName("setImageStyle")
        set(value) {
          _builder.setImageStyle(value)
        }
      /**
       * <code>optional .JAddOnsImageCropStyle.ImageCropType image_style = 10;</code>
       */
      public fun clearImageStyle() {
        _builder.clearImageStyle()
      }
      /**
       * <code>optional .JAddOnsImageCropStyle.ImageCropType image_style = 10;</code>
       * @return Whether the imageStyle field is set.
       */
      public fun hasImageStyle(): kotlin.Boolean {
        return _builder.hasImageStyle()
      }

      /**
       * <code>optional .JAddOnsWidget.Icon start_icon = 11;</code>
       */
      public var startIcon: org.matrix.dma.gchat.proto.JAddOnsWidget.Icon
        @JvmName("getStartIcon")
        get() = _builder.getStartIcon()
        @JvmName("setStartIcon")
        set(value) {
          _builder.setStartIcon(value)
        }
      /**
       * <code>optional .JAddOnsWidget.Icon start_icon = 11;</code>
       */
      public fun clearStartIcon() {
        _builder.clearStartIcon()
      }
      /**
       * <code>optional .JAddOnsWidget.Icon start_icon = 11;</code>
       * @return Whether the startIcon field is set.
       */
      public fun hasStartIcon(): kotlin.Boolean {
        return _builder.hasStartIcon()
      }
      public val KeyValueKt.Dsl.startIconOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.Icon?
        get() = _builder.startIconOrNull

      /**
       * <code>optional .JAddOnsFormattedText top_label = 2;</code>
       */
      public var topLabel: org.matrix.dma.gchat.proto.JAddOnsFormattedText
        @JvmName("getTopLabel")
        get() = _builder.getTopLabel()
        @JvmName("setTopLabel")
        set(value) {
          _builder.setTopLabel(value)
        }
      /**
       * <code>optional .JAddOnsFormattedText top_label = 2;</code>
       */
      public fun clearTopLabel() {
        _builder.clearTopLabel()
      }
      /**
       * <code>optional .JAddOnsFormattedText top_label = 2;</code>
       * @return Whether the topLabel field is set.
       */
      public fun hasTopLabel(): kotlin.Boolean {
        return _builder.hasTopLabel()
      }
      public val KeyValueKt.Dsl.topLabelOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText?
        get() = _builder.topLabelOrNull

      /**
       * <code>optional .JAddOnsFormattedText content = 3;</code>
       */
      public var content: org.matrix.dma.gchat.proto.JAddOnsFormattedText
        @JvmName("getContent")
        get() = _builder.getContent()
        @JvmName("setContent")
        set(value) {
          _builder.setContent(value)
        }
      /**
       * <code>optional .JAddOnsFormattedText content = 3;</code>
       */
      public fun clearContent() {
        _builder.clearContent()
      }
      /**
       * <code>optional .JAddOnsFormattedText content = 3;</code>
       * @return Whether the content field is set.
       */
      public fun hasContent(): kotlin.Boolean {
        return _builder.hasContent()
      }
      public val KeyValueKt.Dsl.contentOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText?
        get() = _builder.contentOrNull

      /**
       * <code>optional bool content_multiline = 8;</code>
       */
      public var contentMultiline: kotlin.Boolean
        @JvmName("getContentMultiline")
        get() = _builder.getContentMultiline()
        @JvmName("setContentMultiline")
        set(value) {
          _builder.setContentMultiline(value)
        }
      /**
       * <code>optional bool content_multiline = 8;</code>
       */
      public fun clearContentMultiline() {
        _builder.clearContentMultiline()
      }
      /**
       * <code>optional bool content_multiline = 8;</code>
       * @return Whether the contentMultiline field is set.
       */
      public fun hasContentMultiline(): kotlin.Boolean {
        return _builder.hasContentMultiline()
      }

      /**
       * <code>optional .JAddOnsFormattedText bottom_label = 4;</code>
       */
      public var bottomLabel: org.matrix.dma.gchat.proto.JAddOnsFormattedText
        @JvmName("getBottomLabel")
        get() = _builder.getBottomLabel()
        @JvmName("setBottomLabel")
        set(value) {
          _builder.setBottomLabel(value)
        }
      /**
       * <code>optional .JAddOnsFormattedText bottom_label = 4;</code>
       */
      public fun clearBottomLabel() {
        _builder.clearBottomLabel()
      }
      /**
       * <code>optional .JAddOnsFormattedText bottom_label = 4;</code>
       * @return Whether the bottomLabel field is set.
       */
      public fun hasBottomLabel(): kotlin.Boolean {
        return _builder.hasBottomLabel()
      }
      public val KeyValueKt.Dsl.bottomLabelOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText?
        get() = _builder.bottomLabelOrNull

      /**
       * <code>optional .JAddOnsOnClick on_click = 5;</code>
       */
      public var onClick: org.matrix.dma.gchat.proto.JAddOnsOnClick
        @JvmName("getOnClick")
        get() = _builder.getOnClick()
        @JvmName("setOnClick")
        set(value) {
          _builder.setOnClick(value)
        }
      /**
       * <code>optional .JAddOnsOnClick on_click = 5;</code>
       */
      public fun clearOnClick() {
        _builder.clearOnClick()
      }
      /**
       * <code>optional .JAddOnsOnClick on_click = 5;</code>
       * @return Whether the onClick field is set.
       */
      public fun hasOnClick(): kotlin.Boolean {
        return _builder.hasOnClick()
      }
      public val KeyValueKt.Dsl.onClickOrNull: org.matrix.dma.gchat.proto.JAddOnsOnClick?
        get() = _builder.onClickOrNull

      /**
       * <pre>
       *oneof Control {
       * </pre>
       *
       * <code>optional .JAddOnsWidget.Button button = 6;</code>
       */
      public var button: org.matrix.dma.gchat.proto.JAddOnsWidget.Button
        @JvmName("getButton")
        get() = _builder.getButton()
        @JvmName("setButton")
        set(value) {
          _builder.setButton(value)
        }
      /**
       * <pre>
       *oneof Control {
       * </pre>
       *
       * <code>optional .JAddOnsWidget.Button button = 6;</code>
       */
      public fun clearButton() {
        _builder.clearButton()
      }
      /**
       * <pre>
       *oneof Control {
       * </pre>
       *
       * <code>optional .JAddOnsWidget.Button button = 6;</code>
       * @return Whether the button field is set.
       */
      public fun hasButton(): kotlin.Boolean {
        return _builder.hasButton()
      }
      public val KeyValueKt.Dsl.buttonOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.Button?
        get() = _builder.buttonOrNull

      /**
       * <code>optional .JAddOnsWidget.KeyValue.SwitchWidget switch_widget = 7;</code>
       */
      public var switchWidget: org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue.SwitchWidget
        @JvmName("getSwitchWidget")
        get() = _builder.getSwitchWidget()
        @JvmName("setSwitchWidget")
        set(value) {
          _builder.setSwitchWidget(value)
        }
      /**
       * <code>optional .JAddOnsWidget.KeyValue.SwitchWidget switch_widget = 7;</code>
       */
      public fun clearSwitchWidget() {
        _builder.clearSwitchWidget()
      }
      /**
       * <code>optional .JAddOnsWidget.KeyValue.SwitchWidget switch_widget = 7;</code>
       * @return Whether the switchWidget field is set.
       */
      public fun hasSwitchWidget(): kotlin.Boolean {
        return _builder.hasSwitchWidget()
      }
      public val KeyValueKt.Dsl.switchWidgetOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue.SwitchWidget?
        get() = _builder.switchWidgetOrNull

      /**
       * <pre>
       *}
       * </pre>
       *
       * <code>optional .JAddOnsWidget.Icon end_icon = 12;</code>
       */
      public var endIcon: org.matrix.dma.gchat.proto.JAddOnsWidget.Icon
        @JvmName("getEndIcon")
        get() = _builder.getEndIcon()
        @JvmName("setEndIcon")
        set(value) {
          _builder.setEndIcon(value)
        }
      /**
       * <pre>
       *}
       * </pre>
       *
       * <code>optional .JAddOnsWidget.Icon end_icon = 12;</code>
       */
      public fun clearEndIcon() {
        _builder.clearEndIcon()
      }
      /**
       * <pre>
       *}
       * </pre>
       *
       * <code>optional .JAddOnsWidget.Icon end_icon = 12;</code>
       * @return Whether the endIcon field is set.
       */
      public fun hasEndIcon(): kotlin.Boolean {
        return _builder.hasEndIcon()
      }
      public val KeyValueKt.Dsl.endIconOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.Icon?
        get() = _builder.endIconOrNull
    }
    @kotlin.jvm.JvmName("-initializeswitchWidget")
    public inline fun switchWidget(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.KeyValueKt.SwitchWidgetKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue.SwitchWidget =
      org.matrix.dma.gchat.proto.JAddOnsWidgetKt.KeyValueKt.SwitchWidgetKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue.SwitchWidget.newBuilder()).apply { block() }._build()
    public object SwitchWidgetKt {
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      @com.google.protobuf.kotlin.ProtoDslMarker
      public class Dsl private constructor(
        private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue.SwitchWidget.Builder
      ) {
        public companion object {
          @kotlin.jvm.JvmSynthetic
          @kotlin.PublishedApi
          internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue.SwitchWidget.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue.SwitchWidget = _builder.build()

        /**
         * <code>optional .JAddOnsIdentifier id = 5;</code>
         */
        public var id: org.matrix.dma.gchat.proto.JAddOnsIdentifier
          @JvmName("getId")
          get() = _builder.getId()
          @JvmName("setId")
          set(value) {
            _builder.setId(value)
          }
        /**
         * <code>optional .JAddOnsIdentifier id = 5;</code>
         */
        public fun clearId() {
          _builder.clearId()
        }
        /**
         * <code>optional .JAddOnsIdentifier id = 5;</code>
         * @return Whether the id field is set.
         */
        public fun hasId(): kotlin.Boolean {
          return _builder.hasId()
        }
        public val SwitchWidgetKt.Dsl.idOrNull: org.matrix.dma.gchat.proto.JAddOnsIdentifier?
          get() = _builder.idOrNull

        /**
         * <code>optional string name = 1;</code>
         */
        public var name: kotlin.String
          @JvmName("getName")
          get() = _builder.getName()
          @JvmName("setName")
          set(value) {
            _builder.setName(value)
          }
        /**
         * <code>optional string name = 1;</code>
         */
        public fun clearName() {
          _builder.clearName()
        }
        /**
         * <code>optional string name = 1;</code>
         * @return Whether the name field is set.
         */
        public fun hasName(): kotlin.Boolean {
          return _builder.hasName()
        }

        /**
         * <code>optional string value = 2;</code>
         */
        public var value: kotlin.String
          @JvmName("getValue")
          get() = _builder.getValue()
          @JvmName("setValue")
          set(value) {
            _builder.setValue(value)
          }
        /**
         * <code>optional string value = 2;</code>
         */
        public fun clearValue() {
          _builder.clearValue()
        }
        /**
         * <code>optional string value = 2;</code>
         * @return Whether the value field is set.
         */
        public fun hasValue(): kotlin.Boolean {
          return _builder.hasValue()
        }

        /**
         * <code>optional bool selected = 3;</code>
         */
        public var selected: kotlin.Boolean
          @JvmName("getSelected")
          get() = _builder.getSelected()
          @JvmName("setSelected")
          set(value) {
            _builder.setSelected(value)
          }
        /**
         * <code>optional bool selected = 3;</code>
         */
        public fun clearSelected() {
          _builder.clearSelected()
        }
        /**
         * <code>optional bool selected = 3;</code>
         * @return Whether the selected field is set.
         */
        public fun hasSelected(): kotlin.Boolean {
          return _builder.hasSelected()
        }

        /**
         * <code>optional .JAddOnsFormAction on_change = 4;</code>
         */
        public var onChange: org.matrix.dma.gchat.proto.JAddOnsFormAction
          @JvmName("getOnChange")
          get() = _builder.getOnChange()
          @JvmName("setOnChange")
          set(value) {
            _builder.setOnChange(value)
          }
        /**
         * <code>optional .JAddOnsFormAction on_change = 4;</code>
         */
        public fun clearOnChange() {
          _builder.clearOnChange()
        }
        /**
         * <code>optional .JAddOnsFormAction on_change = 4;</code>
         * @return Whether the onChange field is set.
         */
        public fun hasOnChange(): kotlin.Boolean {
          return _builder.hasOnChange()
        }
        public val SwitchWidgetKt.Dsl.onChangeOrNull: org.matrix.dma.gchat.proto.JAddOnsFormAction?
          get() = _builder.onChangeOrNull

        /**
         * <code>optional .JAddOnsWidget.KeyValue.SwitchWidget.ControlType control_type = 6;</code>
         */
        public var controlType: org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue.SwitchWidget.ControlType
          @JvmName("getControlType")
          get() = _builder.getControlType()
          @JvmName("setControlType")
          set(value) {
            _builder.setControlType(value)
          }
        /**
         * <code>optional .JAddOnsWidget.KeyValue.SwitchWidget.ControlType control_type = 6;</code>
         */
        public fun clearControlType() {
          _builder.clearControlType()
        }
        /**
         * <code>optional .JAddOnsWidget.KeyValue.SwitchWidget.ControlType control_type = 6;</code>
         * @return Whether the controlType field is set.
         */
        public fun hasControlType(): kotlin.Boolean {
          return _builder.hasControlType()
        }
      }
    }
  }
  @kotlin.jvm.JvmName("-initializedivider")
  public inline fun divider(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.DividerKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.Divider =
    org.matrix.dma.gchat.proto.JAddOnsWidgetKt.DividerKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.Divider.newBuilder()).apply { block() }._build()
  public object DividerKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.Divider.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.Divider.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget.Divider = _builder.build()
    }
  }
  @kotlin.jvm.JvmName("-initializemenu")
  public inline fun menu(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.MenuKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.Menu =
    org.matrix.dma.gchat.proto.JAddOnsWidgetKt.MenuKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.newBuilder()).apply { block() }._build()
  public object MenuKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget.Menu = _builder.build()

      /**
       * <code>optional string name = 1;</code>
       */
      public var name: kotlin.String
        @JvmName("getName")
        get() = _builder.getName()
        @JvmName("setName")
        set(value) {
          _builder.setName(value)
        }
      /**
       * <code>optional string name = 1;</code>
       */
      public fun clearName() {
        _builder.clearName()
      }
      /**
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      public fun hasName(): kotlin.Boolean {
        return _builder.hasName()
      }

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class ItemsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated .JAddOnsWidget.Menu.MenuItem items = 2;</code>
       */
       public val items: com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.MenuItem, ItemsProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getItemsList()
        )
      /**
       * <code>repeated .JAddOnsWidget.Menu.MenuItem items = 2;</code>
       * @param value The items to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addItems")
      public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.MenuItem, ItemsProxy>.add(value: org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.MenuItem) {
        _builder.addItems(value)
      }
      /**
       * <code>repeated .JAddOnsWidget.Menu.MenuItem items = 2;</code>
       * @param value The items to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignItems")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.MenuItem, ItemsProxy>.plusAssign(value: org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.MenuItem) {
        add(value)
      }
      /**
       * <code>repeated .JAddOnsWidget.Menu.MenuItem items = 2;</code>
       * @param values The items to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllItems")
      public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.MenuItem, ItemsProxy>.addAll(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.MenuItem>) {
        _builder.addAllItems(values)
      }
      /**
       * <code>repeated .JAddOnsWidget.Menu.MenuItem items = 2;</code>
       * @param values The items to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllItems")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.MenuItem, ItemsProxy>.plusAssign(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.MenuItem>) {
        addAll(values)
      }
      /**
       * <code>repeated .JAddOnsWidget.Menu.MenuItem items = 2;</code>
       * @param index The index to set the value at.
       * @param value The items to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setItems")
      public operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.MenuItem, ItemsProxy>.set(index: kotlin.Int, value: org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.MenuItem) {
        _builder.setItems(index, value)
      }
      /**
       * <code>repeated .JAddOnsWidget.Menu.MenuItem items = 2;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearItems")
      public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.MenuItem, ItemsProxy>.clear() {
        _builder.clearItems()
      }


      /**
       * <code>optional .JAddOnsFormAction on_change = 4;</code>
       */
      public var onChange: org.matrix.dma.gchat.proto.JAddOnsFormAction
        @JvmName("getOnChange")
        get() = _builder.getOnChange()
        @JvmName("setOnChange")
        set(value) {
          _builder.setOnChange(value)
        }
      /**
       * <code>optional .JAddOnsFormAction on_change = 4;</code>
       */
      public fun clearOnChange() {
        _builder.clearOnChange()
      }
      /**
       * <code>optional .JAddOnsFormAction on_change = 4;</code>
       * @return Whether the onChange field is set.
       */
      public fun hasOnChange(): kotlin.Boolean {
        return _builder.hasOnChange()
      }
      public val MenuKt.Dsl.onChangeOrNull: org.matrix.dma.gchat.proto.JAddOnsFormAction?
        get() = _builder.onChangeOrNull

      /**
       * <code>optional string label = 5;</code>
       */
      public var label: kotlin.String
        @JvmName("getLabel")
        get() = _builder.getLabel()
        @JvmName("setLabel")
        set(value) {
          _builder.setLabel(value)
        }
      /**
       * <code>optional string label = 5;</code>
       */
      public fun clearLabel() {
        _builder.clearLabel()
      }
      /**
       * <code>optional string label = 5;</code>
       * @return Whether the label field is set.
       */
      public fun hasLabel(): kotlin.Boolean {
        return _builder.hasLabel()
      }
    }
    @kotlin.jvm.JvmName("-initializemenuItem")
    public inline fun menuItem(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.MenuKt.MenuItemKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.MenuItem =
      org.matrix.dma.gchat.proto.JAddOnsWidgetKt.MenuKt.MenuItemKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.MenuItem.newBuilder()).apply { block() }._build()
    public object MenuItemKt {
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      @com.google.protobuf.kotlin.ProtoDslMarker
      public class Dsl private constructor(
        private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.MenuItem.Builder
      ) {
        public companion object {
          @kotlin.jvm.JvmSynthetic
          @kotlin.PublishedApi
          internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.MenuItem.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.MenuItem = _builder.build()

        /**
         * <code>optional string text = 1;</code>
         */
        public var text: kotlin.String
          @JvmName("getText")
          get() = _builder.getText()
          @JvmName("setText")
          set(value) {
            _builder.setText(value)
          }
        /**
         * <code>optional string text = 1;</code>
         */
        public fun clearText() {
          _builder.clearText()
        }
        /**
         * <code>optional string text = 1;</code>
         * @return Whether the text field is set.
         */
        public fun hasText(): kotlin.Boolean {
          return _builder.hasText()
        }

        /**
         * <code>optional string value = 4;</code>
         */
        public var value: kotlin.String
          @JvmName("getValue")
          get() = _builder.getValue()
          @JvmName("setValue")
          set(value) {
            _builder.setValue(value)
          }
        /**
         * <code>optional string value = 4;</code>
         */
        public fun clearValue() {
          _builder.clearValue()
        }
        /**
         * <code>optional string value = 4;</code>
         * @return Whether the value field is set.
         */
        public fun hasValue(): kotlin.Boolean {
          return _builder.hasValue()
        }

        /**
         * <code>optional bool selected = 3;</code>
         */
        public var selected: kotlin.Boolean
          @JvmName("getSelected")
          get() = _builder.getSelected()
          @JvmName("setSelected")
          set(value) {
            _builder.setSelected(value)
          }
        /**
         * <code>optional bool selected = 3;</code>
         */
        public fun clearSelected() {
          _builder.clearSelected()
        }
        /**
         * <code>optional bool selected = 3;</code>
         * @return Whether the selected field is set.
         */
        public fun hasSelected(): kotlin.Boolean {
          return _builder.hasSelected()
        }
      }
    }
  }
  @kotlin.jvm.JvmName("-initializeautoComplete")
  public inline fun autoComplete(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.AutoCompleteKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete =
    org.matrix.dma.gchat.proto.JAddOnsWidgetKt.AutoCompleteKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.newBuilder()).apply { block() }._build()
  public object AutoCompleteKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete = _builder.build()

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class ItemsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated .JAddOnsWidget.AutoComplete.AutoCompleteItem items = 1;</code>
       */
       public val items: com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.AutoCompleteItem, ItemsProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getItemsList()
        )
      /**
       * <code>repeated .JAddOnsWidget.AutoComplete.AutoCompleteItem items = 1;</code>
       * @param value The items to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addItems")
      public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.AutoCompleteItem, ItemsProxy>.add(value: org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.AutoCompleteItem) {
        _builder.addItems(value)
      }
      /**
       * <code>repeated .JAddOnsWidget.AutoComplete.AutoCompleteItem items = 1;</code>
       * @param value The items to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignItems")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.AutoCompleteItem, ItemsProxy>.plusAssign(value: org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.AutoCompleteItem) {
        add(value)
      }
      /**
       * <code>repeated .JAddOnsWidget.AutoComplete.AutoCompleteItem items = 1;</code>
       * @param values The items to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllItems")
      public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.AutoCompleteItem, ItemsProxy>.addAll(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.AutoCompleteItem>) {
        _builder.addAllItems(values)
      }
      /**
       * <code>repeated .JAddOnsWidget.AutoComplete.AutoCompleteItem items = 1;</code>
       * @param values The items to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllItems")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.AutoCompleteItem, ItemsProxy>.plusAssign(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.AutoCompleteItem>) {
        addAll(values)
      }
      /**
       * <code>repeated .JAddOnsWidget.AutoComplete.AutoCompleteItem items = 1;</code>
       * @param index The index to set the value at.
       * @param value The items to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setItems")
      public operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.AutoCompleteItem, ItemsProxy>.set(index: kotlin.Int, value: org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.AutoCompleteItem) {
        _builder.setItems(index, value)
      }
      /**
       * <code>repeated .JAddOnsWidget.AutoComplete.AutoCompleteItem items = 1;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearItems")
      public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.AutoCompleteItem, ItemsProxy>.clear() {
        _builder.clearItems()
      }

    }
    @kotlin.jvm.JvmName("-initializeautoCompleteItem")
    public inline fun autoCompleteItem(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.AutoCompleteKt.AutoCompleteItemKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.AutoCompleteItem =
      org.matrix.dma.gchat.proto.JAddOnsWidgetKt.AutoCompleteKt.AutoCompleteItemKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.AutoCompleteItem.newBuilder()).apply { block() }._build()
    public object AutoCompleteItemKt {
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      @com.google.protobuf.kotlin.ProtoDslMarker
      public class Dsl private constructor(
        private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.AutoCompleteItem.Builder
      ) {
        public companion object {
          @kotlin.jvm.JvmSynthetic
          @kotlin.PublishedApi
          internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.AutoCompleteItem.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.AutoCompleteItem = _builder.build()

        /**
         * <code>optional string text = 1;</code>
         */
        public var text: kotlin.String
          @JvmName("getText")
          get() = _builder.getText()
          @JvmName("setText")
          set(value) {
            _builder.setText(value)
          }
        /**
         * <code>optional string text = 1;</code>
         */
        public fun clearText() {
          _builder.clearText()
        }
        /**
         * <code>optional string text = 1;</code>
         * @return Whether the text field is set.
         */
        public fun hasText(): kotlin.Boolean {
          return _builder.hasText()
        }
      }
    }
  }
  @kotlin.jvm.JvmName("-initializetextField")
  public inline fun textField(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.TextFieldKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.TextField =
    org.matrix.dma.gchat.proto.JAddOnsWidgetKt.TextFieldKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.TextField.newBuilder()).apply { block() }._build()
  public object TextFieldKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.TextField.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.TextField.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget.TextField = _builder.build()

      /**
       * <code>optional .JAddOnsIdentifier id = 11;</code>
       */
      public var id: org.matrix.dma.gchat.proto.JAddOnsIdentifier
        @JvmName("getId")
        get() = _builder.getId()
        @JvmName("setId")
        set(value) {
          _builder.setId(value)
        }
      /**
       * <code>optional .JAddOnsIdentifier id = 11;</code>
       */
      public fun clearId() {
        _builder.clearId()
      }
      /**
       * <code>optional .JAddOnsIdentifier id = 11;</code>
       * @return Whether the id field is set.
       */
      public fun hasId(): kotlin.Boolean {
        return _builder.hasId()
      }
      public val TextFieldKt.Dsl.idOrNull: org.matrix.dma.gchat.proto.JAddOnsIdentifier?
        get() = _builder.idOrNull

      /**
       * <code>optional string name = 1;</code>
       */
      public var name: kotlin.String
        @JvmName("getName")
        get() = _builder.getName()
        @JvmName("setName")
        set(value) {
          _builder.setName(value)
        }
      /**
       * <code>optional string name = 1;</code>
       */
      public fun clearName() {
        _builder.clearName()
      }
      /**
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      public fun hasName(): kotlin.Boolean {
        return _builder.hasName()
      }

      /**
       * <code>optional int32 max_lines = 2;</code>
       */
      public var maxLines: kotlin.Int
        @JvmName("getMaxLines")
        get() = _builder.getMaxLines()
        @JvmName("setMaxLines")
        set(value) {
          _builder.setMaxLines(value)
        }
      /**
       * <code>optional int32 max_lines = 2;</code>
       */
      public fun clearMaxLines() {
        _builder.clearMaxLines()
      }
      /**
       * <code>optional int32 max_lines = 2;</code>
       * @return Whether the maxLines field is set.
       */
      public fun hasMaxLines(): kotlin.Boolean {
        return _builder.hasMaxLines()
      }

      /**
       * <code>optional .JAddOnsWidget.TextField.TextFieldType type = 5;</code>
       */
      public var type: org.matrix.dma.gchat.proto.JAddOnsWidget.TextField.TextFieldType
        @JvmName("getType")
        get() = _builder.getType()
        @JvmName("setType")
        set(value) {
          _builder.setType(value)
        }
      /**
       * <code>optional .JAddOnsWidget.TextField.TextFieldType type = 5;</code>
       */
      public fun clearType() {
        _builder.clearType()
      }
      /**
       * <code>optional .JAddOnsWidget.TextField.TextFieldType type = 5;</code>
       * @return Whether the type field is set.
       */
      public fun hasType(): kotlin.Boolean {
        return _builder.hasType()
      }

      /**
       * <code>optional string label = 3;</code>
       */
      public var label: kotlin.String
        @JvmName("getLabel")
        get() = _builder.getLabel()
        @JvmName("setLabel")
        set(value) {
          _builder.setLabel(value)
        }
      /**
       * <code>optional string label = 3;</code>
       */
      public fun clearLabel() {
        _builder.clearLabel()
      }
      /**
       * <code>optional string label = 3;</code>
       * @return Whether the label field is set.
       */
      public fun hasLabel(): kotlin.Boolean {
        return _builder.hasLabel()
      }

      /**
       * <code>optional string hint_text = 4;</code>
       */
      public var hintText: kotlin.String
        @JvmName("getHintText")
        get() = _builder.getHintText()
        @JvmName("setHintText")
        set(value) {
          _builder.setHintText(value)
        }
      /**
       * <code>optional string hint_text = 4;</code>
       */
      public fun clearHintText() {
        _builder.clearHintText()
      }
      /**
       * <code>optional string hint_text = 4;</code>
       * @return Whether the hintText field is set.
       */
      public fun hasHintText(): kotlin.Boolean {
        return _builder.hasHintText()
      }

      /**
       * <code>optional string value = 6;</code>
       */
      public var value: kotlin.String
        @JvmName("getValue")
        get() = _builder.getValue()
        @JvmName("setValue")
        set(value) {
          _builder.setValue(value)
        }
      /**
       * <code>optional string value = 6;</code>
       */
      public fun clearValue() {
        _builder.clearValue()
      }
      /**
       * <code>optional string value = 6;</code>
       * @return Whether the value field is set.
       */
      public fun hasValue(): kotlin.Boolean {
        return _builder.hasValue()
      }

      /**
       * <code>optional .JAddOnsWidget.TextField.LineType line_type = 7;</code>
       */
      public var lineType: org.matrix.dma.gchat.proto.JAddOnsWidget.TextField.LineType
        @JvmName("getLineType")
        get() = _builder.getLineType()
        @JvmName("setLineType")
        set(value) {
          _builder.setLineType(value)
        }
      /**
       * <code>optional .JAddOnsWidget.TextField.LineType line_type = 7;</code>
       */
      public fun clearLineType() {
        _builder.clearLineType()
      }
      /**
       * <code>optional .JAddOnsWidget.TextField.LineType line_type = 7;</code>
       * @return Whether the lineType field is set.
       */
      public fun hasLineType(): kotlin.Boolean {
        return _builder.hasLineType()
      }

      /**
       * <code>optional .JAddOnsFormAction on_change = 8;</code>
       */
      public var onChange: org.matrix.dma.gchat.proto.JAddOnsFormAction
        @JvmName("getOnChange")
        get() = _builder.getOnChange()
        @JvmName("setOnChange")
        set(value) {
          _builder.setOnChange(value)
        }
      /**
       * <code>optional .JAddOnsFormAction on_change = 8;</code>
       */
      public fun clearOnChange() {
        _builder.clearOnChange()
      }
      /**
       * <code>optional .JAddOnsFormAction on_change = 8;</code>
       * @return Whether the onChange field is set.
       */
      public fun hasOnChange(): kotlin.Boolean {
        return _builder.hasOnChange()
      }
      public val TextFieldKt.Dsl.onChangeOrNull: org.matrix.dma.gchat.proto.JAddOnsFormAction?
        get() = _builder.onChangeOrNull

      /**
       * <code>optional .JAddOnsWidget.AutoComplete auto_complete = 9;</code>
       */
      public var autoComplete: org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete
        @JvmName("getAutoComplete")
        get() = _builder.getAutoComplete()
        @JvmName("setAutoComplete")
        set(value) {
          _builder.setAutoComplete(value)
        }
      /**
       * <code>optional .JAddOnsWidget.AutoComplete auto_complete = 9;</code>
       */
      public fun clearAutoComplete() {
        _builder.clearAutoComplete()
      }
      /**
       * <code>optional .JAddOnsWidget.AutoComplete auto_complete = 9;</code>
       * @return Whether the autoComplete field is set.
       */
      public fun hasAutoComplete(): kotlin.Boolean {
        return _builder.hasAutoComplete()
      }
      public val TextFieldKt.Dsl.autoCompleteOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete?
        get() = _builder.autoCompleteOrNull

      /**
       * <code>optional .JAddOnsFormAction auto_complete_callback = 10;</code>
       */
      public var autoCompleteCallback: org.matrix.dma.gchat.proto.JAddOnsFormAction
        @JvmName("getAutoCompleteCallback")
        get() = _builder.getAutoCompleteCallback()
        @JvmName("setAutoCompleteCallback")
        set(value) {
          _builder.setAutoCompleteCallback(value)
        }
      /**
       * <code>optional .JAddOnsFormAction auto_complete_callback = 10;</code>
       */
      public fun clearAutoCompleteCallback() {
        _builder.clearAutoCompleteCallback()
      }
      /**
       * <code>optional .JAddOnsFormAction auto_complete_callback = 10;</code>
       * @return Whether the autoCompleteCallback field is set.
       */
      public fun hasAutoCompleteCallback(): kotlin.Boolean {
        return _builder.hasAutoCompleteCallback()
      }
      public val TextFieldKt.Dsl.autoCompleteCallbackOrNull: org.matrix.dma.gchat.proto.JAddOnsFormAction?
        get() = _builder.autoCompleteCallbackOrNull

      /**
       * <code>optional bool auto_complete_multiple_selections = 12;</code>
       */
      public var autoCompleteMultipleSelections: kotlin.Boolean
        @JvmName("getAutoCompleteMultipleSelections")
        get() = _builder.getAutoCompleteMultipleSelections()
        @JvmName("setAutoCompleteMultipleSelections")
        set(value) {
          _builder.setAutoCompleteMultipleSelections(value)
        }
      /**
       * <code>optional bool auto_complete_multiple_selections = 12;</code>
       */
      public fun clearAutoCompleteMultipleSelections() {
        _builder.clearAutoCompleteMultipleSelections()
      }
      /**
       * <code>optional bool auto_complete_multiple_selections = 12;</code>
       * @return Whether the autoCompleteMultipleSelections field is set.
       */
      public fun hasAutoCompleteMultipleSelections(): kotlin.Boolean {
        return _builder.hasAutoCompleteMultipleSelections()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializeselectionControl")
  public inline fun selectionControl(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.SelectionControlKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl =
    org.matrix.dma.gchat.proto.JAddOnsWidgetKt.SelectionControlKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.newBuilder()).apply { block() }._build()
  public object SelectionControlKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl = _builder.build()

      /**
       * <code>optional .JAddOnsIdentifier id = 6;</code>
       */
      public var id: org.matrix.dma.gchat.proto.JAddOnsIdentifier
        @JvmName("getId")
        get() = _builder.getId()
        @JvmName("setId")
        set(value) {
          _builder.setId(value)
        }
      /**
       * <code>optional .JAddOnsIdentifier id = 6;</code>
       */
      public fun clearId() {
        _builder.clearId()
      }
      /**
       * <code>optional .JAddOnsIdentifier id = 6;</code>
       * @return Whether the id field is set.
       */
      public fun hasId(): kotlin.Boolean {
        return _builder.hasId()
      }
      public val SelectionControlKt.Dsl.idOrNull: org.matrix.dma.gchat.proto.JAddOnsIdentifier?
        get() = _builder.idOrNull

      /**
       * <code>optional string name = 1;</code>
       */
      public var name: kotlin.String
        @JvmName("getName")
        get() = _builder.getName()
        @JvmName("setName")
        set(value) {
          _builder.setName(value)
        }
      /**
       * <code>optional string name = 1;</code>
       */
      public fun clearName() {
        _builder.clearName()
      }
      /**
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      public fun hasName(): kotlin.Boolean {
        return _builder.hasName()
      }

      /**
       * <code>optional .JAddOnsWidget.SelectionControl.SelectionType type = 2;</code>
       */
      public var type: org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionType
        @JvmName("getType")
        get() = _builder.getType()
        @JvmName("setType")
        set(value) {
          _builder.setType(value)
        }
      /**
       * <code>optional .JAddOnsWidget.SelectionControl.SelectionType type = 2;</code>
       */
      public fun clearType() {
        _builder.clearType()
      }
      /**
       * <code>optional .JAddOnsWidget.SelectionControl.SelectionType type = 2;</code>
       * @return Whether the type field is set.
       */
      public fun hasType(): kotlin.Boolean {
        return _builder.hasType()
      }

      /**
       * An uninstantiable, behaviorless type to represent the field in
       * generics.
       */
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      public class ItemsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
      /**
       * <code>repeated .JAddOnsWidget.SelectionControl.SelectionItem items = 3;</code>
       */
       public val items: com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItem, ItemsProxy>
        @kotlin.jvm.JvmSynthetic
        get() = com.google.protobuf.kotlin.DslList(
          _builder.getItemsList()
        )
      /**
       * <code>repeated .JAddOnsWidget.SelectionControl.SelectionItem items = 3;</code>
       * @param value The items to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addItems")
      public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItem, ItemsProxy>.add(value: org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItem) {
        _builder.addItems(value)
      }
      /**
       * <code>repeated .JAddOnsWidget.SelectionControl.SelectionItem items = 3;</code>
       * @param value The items to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignItems")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItem, ItemsProxy>.plusAssign(value: org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItem) {
        add(value)
      }
      /**
       * <code>repeated .JAddOnsWidget.SelectionControl.SelectionItem items = 3;</code>
       * @param values The items to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("addAllItems")
      public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItem, ItemsProxy>.addAll(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItem>) {
        _builder.addAllItems(values)
      }
      /**
       * <code>repeated .JAddOnsWidget.SelectionControl.SelectionItem items = 3;</code>
       * @param values The items to add.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("plusAssignAllItems")
      @Suppress("NOTHING_TO_INLINE")
      public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItem, ItemsProxy>.plusAssign(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItem>) {
        addAll(values)
      }
      /**
       * <code>repeated .JAddOnsWidget.SelectionControl.SelectionItem items = 3;</code>
       * @param index The index to set the value at.
       * @param value The items to set.
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("setItems")
      public operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItem, ItemsProxy>.set(index: kotlin.Int, value: org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItem) {
        _builder.setItems(index, value)
      }
      /**
       * <code>repeated .JAddOnsWidget.SelectionControl.SelectionItem items = 3;</code>
       */
      @kotlin.jvm.JvmSynthetic
      @kotlin.jvm.JvmName("clearItems")
      public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItem, ItemsProxy>.clear() {
        _builder.clearItems()
      }


      /**
       * <code>optional .JAddOnsFormAction on_change = 4;</code>
       */
      public var onChange: org.matrix.dma.gchat.proto.JAddOnsFormAction
        @JvmName("getOnChange")
        get() = _builder.getOnChange()
        @JvmName("setOnChange")
        set(value) {
          _builder.setOnChange(value)
        }
      /**
       * <code>optional .JAddOnsFormAction on_change = 4;</code>
       */
      public fun clearOnChange() {
        _builder.clearOnChange()
      }
      /**
       * <code>optional .JAddOnsFormAction on_change = 4;</code>
       * @return Whether the onChange field is set.
       */
      public fun hasOnChange(): kotlin.Boolean {
        return _builder.hasOnChange()
      }
      public val SelectionControlKt.Dsl.onChangeOrNull: org.matrix.dma.gchat.proto.JAddOnsFormAction?
        get() = _builder.onChangeOrNull

      /**
       * <code>optional string label = 5;</code>
       */
      public var label: kotlin.String
        @JvmName("getLabel")
        get() = _builder.getLabel()
        @JvmName("setLabel")
        set(value) {
          _builder.setLabel(value)
        }
      /**
       * <code>optional string label = 5;</code>
       */
      public fun clearLabel() {
        _builder.clearLabel()
      }
      /**
       * <code>optional string label = 5;</code>
       * @return Whether the label field is set.
       */
      public fun hasLabel(): kotlin.Boolean {
        return _builder.hasLabel()
      }
    }
    @kotlin.jvm.JvmName("-initializeselectionItem")
    public inline fun selectionItem(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.SelectionControlKt.SelectionItemKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItem =
      org.matrix.dma.gchat.proto.JAddOnsWidgetKt.SelectionControlKt.SelectionItemKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItem.newBuilder()).apply { block() }._build()
    public object SelectionItemKt {
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      @com.google.protobuf.kotlin.ProtoDslMarker
      public class Dsl private constructor(
        private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItem.Builder
      ) {
        public companion object {
          @kotlin.jvm.JvmSynthetic
          @kotlin.PublishedApi
          internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItem.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItem = _builder.build()

        /**
         * <code>optional .JAddOnsIdentifier id = 4;</code>
         */
        public var id: org.matrix.dma.gchat.proto.JAddOnsIdentifier
          @JvmName("getId")
          get() = _builder.getId()
          @JvmName("setId")
          set(value) {
            _builder.setId(value)
          }
        /**
         * <code>optional .JAddOnsIdentifier id = 4;</code>
         */
        public fun clearId() {
          _builder.clearId()
        }
        /**
         * <code>optional .JAddOnsIdentifier id = 4;</code>
         * @return Whether the id field is set.
         */
        public fun hasId(): kotlin.Boolean {
          return _builder.hasId()
        }
        public val SelectionItemKt.Dsl.idOrNull: org.matrix.dma.gchat.proto.JAddOnsIdentifier?
          get() = _builder.idOrNull

        /**
         * <code>optional string text = 1;</code>
         */
        public var text: kotlin.String
          @JvmName("getText")
          get() = _builder.getText()
          @JvmName("setText")
          set(value) {
            _builder.setText(value)
          }
        /**
         * <code>optional string text = 1;</code>
         */
        public fun clearText() {
          _builder.clearText()
        }
        /**
         * <code>optional string text = 1;</code>
         * @return Whether the text field is set.
         */
        public fun hasText(): kotlin.Boolean {
          return _builder.hasText()
        }

        /**
         * <code>optional bool selected = 2;</code>
         */
        public var selected: kotlin.Boolean
          @JvmName("getSelected")
          get() = _builder.getSelected()
          @JvmName("setSelected")
          set(value) {
            _builder.setSelected(value)
          }
        /**
         * <code>optional bool selected = 2;</code>
         */
        public fun clearSelected() {
          _builder.clearSelected()
        }
        /**
         * <code>optional bool selected = 2;</code>
         * @return Whether the selected field is set.
         */
        public fun hasSelected(): kotlin.Boolean {
          return _builder.hasSelected()
        }

        /**
         * <code>optional string value = 3;</code>
         */
        public var value: kotlin.String
          @JvmName("getValue")
          get() = _builder.getValue()
          @JvmName("setValue")
          set(value) {
            _builder.setValue(value)
          }
        /**
         * <code>optional string value = 3;</code>
         */
        public fun clearValue() {
          _builder.clearValue()
        }
        /**
         * <code>optional string value = 3;</code>
         * @return Whether the value field is set.
         */
        public fun hasValue(): kotlin.Boolean {
          return _builder.hasValue()
        }
      }
    }
  }
  @kotlin.jvm.JvmName("-initializedateTimePicker")
  public inline fun dateTimePicker(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.DateTimePickerKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.DateTimePicker =
    org.matrix.dma.gchat.proto.JAddOnsWidgetKt.DateTimePickerKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.DateTimePicker.newBuilder()).apply { block() }._build()
  public object DateTimePickerKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.DateTimePicker.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.DateTimePicker.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget.DateTimePicker = _builder.build()

      /**
       * <code>optional string name = 1;</code>
       */
      public var name: kotlin.String
        @JvmName("getName")
        get() = _builder.getName()
        @JvmName("setName")
        set(value) {
          _builder.setName(value)
        }
      /**
       * <code>optional string name = 1;</code>
       */
      public fun clearName() {
        _builder.clearName()
      }
      /**
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      public fun hasName(): kotlin.Boolean {
        return _builder.hasName()
      }

      /**
       * <code>optional string label = 2;</code>
       */
      public var label: kotlin.String
        @JvmName("getLabel")
        get() = _builder.getLabel()
        @JvmName("setLabel")
        set(value) {
          _builder.setLabel(value)
        }
      /**
       * <code>optional string label = 2;</code>
       */
      public fun clearLabel() {
        _builder.clearLabel()
      }
      /**
       * <code>optional string label = 2;</code>
       * @return Whether the label field is set.
       */
      public fun hasLabel(): kotlin.Boolean {
        return _builder.hasLabel()
      }

      /**
       * <code>optional .JAddOnsWidget.DateTimePicker.DateTimePickerType type = 3;</code>
       */
      public var type: org.matrix.dma.gchat.proto.JAddOnsWidget.DateTimePicker.DateTimePickerType
        @JvmName("getType")
        get() = _builder.getType()
        @JvmName("setType")
        set(value) {
          _builder.setType(value)
        }
      /**
       * <code>optional .JAddOnsWidget.DateTimePicker.DateTimePickerType type = 3;</code>
       */
      public fun clearType() {
        _builder.clearType()
      }
      /**
       * <code>optional .JAddOnsWidget.DateTimePicker.DateTimePickerType type = 3;</code>
       * @return Whether the type field is set.
       */
      public fun hasType(): kotlin.Boolean {
        return _builder.hasType()
      }

      /**
       * <code>optional int64 value_ms_epoch = 4;</code>
       */
      public var valueMsEpoch: kotlin.Long
        @JvmName("getValueMsEpoch")
        get() = _builder.getValueMsEpoch()
        @JvmName("setValueMsEpoch")
        set(value) {
          _builder.setValueMsEpoch(value)
        }
      /**
       * <code>optional int64 value_ms_epoch = 4;</code>
       */
      public fun clearValueMsEpoch() {
        _builder.clearValueMsEpoch()
      }
      /**
       * <code>optional int64 value_ms_epoch = 4;</code>
       * @return Whether the valueMsEpoch field is set.
       */
      public fun hasValueMsEpoch(): kotlin.Boolean {
        return _builder.hasValueMsEpoch()
      }

      /**
       * <code>optional int32 timezone_offset_date = 5;</code>
       */
      public var timezoneOffsetDate: kotlin.Int
        @JvmName("getTimezoneOffsetDate")
        get() = _builder.getTimezoneOffsetDate()
        @JvmName("setTimezoneOffsetDate")
        set(value) {
          _builder.setTimezoneOffsetDate(value)
        }
      /**
       * <code>optional int32 timezone_offset_date = 5;</code>
       */
      public fun clearTimezoneOffsetDate() {
        _builder.clearTimezoneOffsetDate()
      }
      /**
       * <code>optional int32 timezone_offset_date = 5;</code>
       * @return Whether the timezoneOffsetDate field is set.
       */
      public fun hasTimezoneOffsetDate(): kotlin.Boolean {
        return _builder.hasTimezoneOffsetDate()
      }

      /**
       * <code>optional .JAddOnsFormAction on_change = 6;</code>
       */
      public var onChange: org.matrix.dma.gchat.proto.JAddOnsFormAction
        @JvmName("getOnChange")
        get() = _builder.getOnChange()
        @JvmName("setOnChange")
        set(value) {
          _builder.setOnChange(value)
        }
      /**
       * <code>optional .JAddOnsFormAction on_change = 6;</code>
       */
      public fun clearOnChange() {
        _builder.clearOnChange()
      }
      /**
       * <code>optional .JAddOnsFormAction on_change = 6;</code>
       * @return Whether the onChange field is set.
       */
      public fun hasOnChange(): kotlin.Boolean {
        return _builder.hasOnChange()
      }
      public val DateTimePickerKt.Dsl.onChangeOrNull: org.matrix.dma.gchat.proto.JAddOnsFormAction?
        get() = _builder.onChangeOrNull

      /**
       * <code>optional int32 color = 7;</code>
       */
      public var color: kotlin.Int
        @JvmName("getColor")
        get() = _builder.getColor()
        @JvmName("setColor")
        set(value) {
          _builder.setColor(value)
        }
      /**
       * <code>optional int32 color = 7;</code>
       */
      public fun clearColor() {
        _builder.clearColor()
      }
      /**
       * <code>optional int32 color = 7;</code>
       * @return Whether the color field is set.
       */
      public fun hasColor(): kotlin.Boolean {
        return _builder.hasColor()
      }

      /**
       * <code>optional .JAddOnsThemeColors theme_colors = 8;</code>
       */
      public var themeColors: org.matrix.dma.gchat.proto.JAddOnsThemeColors
        @JvmName("getThemeColors")
        get() = _builder.getThemeColors()
        @JvmName("setThemeColors")
        set(value) {
          _builder.setThemeColors(value)
        }
      /**
       * <code>optional .JAddOnsThemeColors theme_colors = 8;</code>
       */
      public fun clearThemeColors() {
        _builder.clearThemeColors()
      }
      /**
       * <code>optional .JAddOnsThemeColors theme_colors = 8;</code>
       * @return Whether the themeColors field is set.
       */
      public fun hasThemeColors(): kotlin.Boolean {
        return _builder.hasThemeColors()
      }
      public val DateTimePickerKt.Dsl.themeColorsOrNull: org.matrix.dma.gchat.proto.JAddOnsThemeColors?
        get() = _builder.themeColorsOrNull
    }
  }
  @kotlin.jvm.JvmName("-initializetextButton")
  public inline fun textButton(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.TextButtonKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.TextButton =
    org.matrix.dma.gchat.proto.JAddOnsWidgetKt.TextButtonKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.TextButton.newBuilder()).apply { block() }._build()
  public object TextButtonKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.TextButton.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.TextButton.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget.TextButton = _builder.build()

      /**
       * <code>optional .JAddOnsIdentifier id = 3;</code>
       */
      public var id: org.matrix.dma.gchat.proto.JAddOnsIdentifier
        @JvmName("getId")
        get() = _builder.getId()
        @JvmName("setId")
        set(value) {
          _builder.setId(value)
        }
      /**
       * <code>optional .JAddOnsIdentifier id = 3;</code>
       */
      public fun clearId() {
        _builder.clearId()
      }
      /**
       * <code>optional .JAddOnsIdentifier id = 3;</code>
       * @return Whether the id field is set.
       */
      public fun hasId(): kotlin.Boolean {
        return _builder.hasId()
      }
      public val TextButtonKt.Dsl.idOrNull: org.matrix.dma.gchat.proto.JAddOnsIdentifier?
        get() = _builder.idOrNull

      /**
       * <code>optional .JAddOnsFormattedText text = 1;</code>
       */
      public var text: org.matrix.dma.gchat.proto.JAddOnsFormattedText
        @JvmName("getText")
        get() = _builder.getText()
        @JvmName("setText")
        set(value) {
          _builder.setText(value)
        }
      /**
       * <code>optional .JAddOnsFormattedText text = 1;</code>
       */
      public fun clearText() {
        _builder.clearText()
      }
      /**
       * <code>optional .JAddOnsFormattedText text = 1;</code>
       * @return Whether the text field is set.
       */
      public fun hasText(): kotlin.Boolean {
        return _builder.hasText()
      }
      public val TextButtonKt.Dsl.textOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText?
        get() = _builder.textOrNull

      /**
       * <code>optional .JAddOnsOnClick on_click = 2;</code>
       */
      public var onClick: org.matrix.dma.gchat.proto.JAddOnsOnClick
        @JvmName("getOnClick")
        get() = _builder.getOnClick()
        @JvmName("setOnClick")
        set(value) {
          _builder.setOnClick(value)
        }
      /**
       * <code>optional .JAddOnsOnClick on_click = 2;</code>
       */
      public fun clearOnClick() {
        _builder.clearOnClick()
      }
      /**
       * <code>optional .JAddOnsOnClick on_click = 2;</code>
       * @return Whether the onClick field is set.
       */
      public fun hasOnClick(): kotlin.Boolean {
        return _builder.hasOnClick()
      }
      public val TextButtonKt.Dsl.onClickOrNull: org.matrix.dma.gchat.proto.JAddOnsOnClick?
        get() = _builder.onClickOrNull

      /**
       * <code>optional bool disabled = 4;</code>
       */
      public var disabled: kotlin.Boolean
        @JvmName("getDisabled")
        get() = _builder.getDisabled()
        @JvmName("setDisabled")
        set(value) {
          _builder.setDisabled(value)
        }
      /**
       * <code>optional bool disabled = 4;</code>
       */
      public fun clearDisabled() {
        _builder.clearDisabled()
      }
      /**
       * <code>optional bool disabled = 4;</code>
       * @return Whether the disabled field is set.
       */
      public fun hasDisabled(): kotlin.Boolean {
        return _builder.hasDisabled()
      }

      /**
       * <code>optional .JAddOnsWidget.TextButton.Style style = 5;</code>
       */
      public var style: org.matrix.dma.gchat.proto.JAddOnsWidget.TextButton.Style
        @JvmName("getStyle")
        get() = _builder.getStyle()
        @JvmName("setStyle")
        set(value) {
          _builder.setStyle(value)
        }
      /**
       * <code>optional .JAddOnsWidget.TextButton.Style style = 5;</code>
       */
      public fun clearStyle() {
        _builder.clearStyle()
      }
      /**
       * <code>optional .JAddOnsWidget.TextButton.Style style = 5;</code>
       * @return Whether the style field is set.
       */
      public fun hasStyle(): kotlin.Boolean {
        return _builder.hasStyle()
      }

      /**
       * <code>optional int32 background_color = 6;</code>
       */
      public var backgroundColor: kotlin.Int
        @JvmName("getBackgroundColor")
        get() = _builder.getBackgroundColor()
        @JvmName("setBackgroundColor")
        set(value) {
          _builder.setBackgroundColor(value)
        }
      /**
       * <code>optional int32 background_color = 6;</code>
       */
      public fun clearBackgroundColor() {
        _builder.clearBackgroundColor()
      }
      /**
       * <code>optional int32 background_color = 6;</code>
       * @return Whether the backgroundColor field is set.
       */
      public fun hasBackgroundColor(): kotlin.Boolean {
        return _builder.hasBackgroundColor()
      }

      /**
       * <code>optional .JAddOnsThemeColors background_theme_colors = 7;</code>
       */
      public var backgroundThemeColors: org.matrix.dma.gchat.proto.JAddOnsThemeColors
        @JvmName("getBackgroundThemeColors")
        get() = _builder.getBackgroundThemeColors()
        @JvmName("setBackgroundThemeColors")
        set(value) {
          _builder.setBackgroundThemeColors(value)
        }
      /**
       * <code>optional .JAddOnsThemeColors background_theme_colors = 7;</code>
       */
      public fun clearBackgroundThemeColors() {
        _builder.clearBackgroundThemeColors()
      }
      /**
       * <code>optional .JAddOnsThemeColors background_theme_colors = 7;</code>
       * @return Whether the backgroundThemeColors field is set.
       */
      public fun hasBackgroundThemeColors(): kotlin.Boolean {
        return _builder.hasBackgroundThemeColors()
      }
      public val TextButtonKt.Dsl.backgroundThemeColorsOrNull: org.matrix.dma.gchat.proto.JAddOnsThemeColors?
        get() = _builder.backgroundThemeColorsOrNull

      /**
       * <code>optional string alt_text = 8;</code>
       */
      public var altText: kotlin.String
        @JvmName("getAltText")
        get() = _builder.getAltText()
        @JvmName("setAltText")
        set(value) {
          _builder.setAltText(value)
        }
      /**
       * <code>optional string alt_text = 8;</code>
       */
      public fun clearAltText() {
        _builder.clearAltText()
      }
      /**
       * <code>optional string alt_text = 8;</code>
       * @return Whether the altText field is set.
       */
      public fun hasAltText(): kotlin.Boolean {
        return _builder.hasAltText()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializeimageButton")
  public inline fun imageButton(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.ImageButtonKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.ImageButton =
    org.matrix.dma.gchat.proto.JAddOnsWidgetKt.ImageButtonKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.ImageButton.newBuilder()).apply { block() }._build()
  public object ImageButtonKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.ImageButton.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.ImageButton.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget.ImageButton = _builder.build()

      /**
       * <code>optional .JAddOnsIdentifier id = 4;</code>
       */
      public var id: org.matrix.dma.gchat.proto.JAddOnsIdentifier
        @JvmName("getId")
        get() = _builder.getId()
        @JvmName("setId")
        set(value) {
          _builder.setId(value)
        }
      /**
       * <code>optional .JAddOnsIdentifier id = 4;</code>
       */
      public fun clearId() {
        _builder.clearId()
      }
      /**
       * <code>optional .JAddOnsIdentifier id = 4;</code>
       * @return Whether the id field is set.
       */
      public fun hasId(): kotlin.Boolean {
        return _builder.hasId()
      }
      public val ImageButtonKt.Dsl.idOrNull: org.matrix.dma.gchat.proto.JAddOnsIdentifier?
        get() = _builder.idOrNull

      /**
       * <code>optional string icon_url = 1;</code>
       */
      public var iconUrl: kotlin.String
        @JvmName("getIconUrl")
        get() = _builder.getIconUrl()
        @JvmName("setIconUrl")
        set(value) {
          _builder.setIconUrl(value)
        }
      /**
       * <code>optional string icon_url = 1;</code>
       */
      public fun clearIconUrl() {
        _builder.clearIconUrl()
      }
      /**
       * <code>optional string icon_url = 1;</code>
       * @return Whether the iconUrl field is set.
       */
      public fun hasIconUrl(): kotlin.Boolean {
        return _builder.hasIconUrl()
      }

      /**
       * <code>optional .JAddOnsOnClick on_click = 2;</code>
       */
      public var onClick: org.matrix.dma.gchat.proto.JAddOnsOnClick
        @JvmName("getOnClick")
        get() = _builder.getOnClick()
        @JvmName("setOnClick")
        set(value) {
          _builder.setOnClick(value)
        }
      /**
       * <code>optional .JAddOnsOnClick on_click = 2;</code>
       */
      public fun clearOnClick() {
        _builder.clearOnClick()
      }
      /**
       * <code>optional .JAddOnsOnClick on_click = 2;</code>
       * @return Whether the onClick field is set.
       */
      public fun hasOnClick(): kotlin.Boolean {
        return _builder.hasOnClick()
      }
      public val ImageButtonKt.Dsl.onClickOrNull: org.matrix.dma.gchat.proto.JAddOnsOnClick?
        get() = _builder.onClickOrNull

      /**
       * <code>optional string name = 3;</code>
       */
      public var name: kotlin.String
        @JvmName("getName")
        get() = _builder.getName()
        @JvmName("setName")
        set(value) {
          _builder.setName(value)
        }
      /**
       * <code>optional string name = 3;</code>
       */
      public fun clearName() {
        _builder.clearName()
      }
      /**
       * <code>optional string name = 3;</code>
       * @return Whether the name field is set.
       */
      public fun hasName(): kotlin.Boolean {
        return _builder.hasName()
      }
    }
  }
  @kotlin.jvm.JvmName("-initializebutton")
  public inline fun button(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.ButtonKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.Button =
    org.matrix.dma.gchat.proto.JAddOnsWidgetKt.ButtonKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsWidget.Button.newBuilder()).apply { block() }._build()
  public object ButtonKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: org.matrix.dma.gchat.proto.JAddOnsWidget.Button.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsWidget.Button.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsWidget.Button = _builder.build()

      /**
       * <pre>
       *oneof Type {
       * </pre>
       *
       * <code>optional .JAddOnsWidget.TextButton text_button = 1;</code>
       */
      public var textButton: org.matrix.dma.gchat.proto.JAddOnsWidget.TextButton
        @JvmName("getTextButton")
        get() = _builder.getTextButton()
        @JvmName("setTextButton")
        set(value) {
          _builder.setTextButton(value)
        }
      /**
       * <pre>
       *oneof Type {
       * </pre>
       *
       * <code>optional .JAddOnsWidget.TextButton text_button = 1;</code>
       */
      public fun clearTextButton() {
        _builder.clearTextButton()
      }
      /**
       * <pre>
       *oneof Type {
       * </pre>
       *
       * <code>optional .JAddOnsWidget.TextButton text_button = 1;</code>
       * @return Whether the textButton field is set.
       */
      public fun hasTextButton(): kotlin.Boolean {
        return _builder.hasTextButton()
      }
      public val ButtonKt.Dsl.textButtonOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.TextButton?
        get() = _builder.textButtonOrNull

      /**
       * <pre>
       *}
       * </pre>
       *
       * <code>optional .JAddOnsWidget.ImageButton image_button = 2;</code>
       */
      public var imageButton: org.matrix.dma.gchat.proto.JAddOnsWidget.ImageButton
        @JvmName("getImageButton")
        get() = _builder.getImageButton()
        @JvmName("setImageButton")
        set(value) {
          _builder.setImageButton(value)
        }
      /**
       * <pre>
       *}
       * </pre>
       *
       * <code>optional .JAddOnsWidget.ImageButton image_button = 2;</code>
       */
      public fun clearImageButton() {
        _builder.clearImageButton()
      }
      /**
       * <pre>
       *}
       * </pre>
       *
       * <code>optional .JAddOnsWidget.ImageButton image_button = 2;</code>
       * @return Whether the imageButton field is set.
       */
      public fun hasImageButton(): kotlin.Boolean {
        return _builder.hasImageButton()
      }
      public val ButtonKt.Dsl.imageButtonOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.ImageButton?
        get() = _builder.imageButtonOrNull
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.TextParagraph.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.TextParagraphKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.TextParagraph =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.TextParagraphKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.JAddOnsWidget.TextParagraphOrBuilder.textOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText?
  get() = if (hasText()) getText() else null

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.TextKeyValue.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.TextKeyValueKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.TextKeyValue =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.TextKeyValueKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.JAddOnsWidget.TextKeyValueOrBuilder.keyOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText?
  get() = if (hasKey()) getKey() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.TextKeyValueOrBuilder.textOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText?
  get() = if (hasText()) getText() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.TextKeyValueOrBuilder.onClickOrNull: org.matrix.dma.gchat.proto.JAddOnsOnClick?
  get() = if (hasOnClick()) getOnClick() else null

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.ImageKeyValue.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.ImageKeyValueKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.ImageKeyValue =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.ImageKeyValueKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.JAddOnsWidget.ImageKeyValueOrBuilder.textOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText?
  get() = if (hasText()) getText() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.ImageKeyValueOrBuilder.onClickOrNull: org.matrix.dma.gchat.proto.JAddOnsOnClick?
  get() = if (hasOnClick()) getOnClick() else null

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.Image.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.ImageKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.Image =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.ImageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.JAddOnsWidget.ImageOrBuilder.idOrNull: org.matrix.dma.gchat.proto.JAddOnsIdentifier?
  get() = if (hasId()) getId() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.ImageOrBuilder.onClickOrNull: org.matrix.dma.gchat.proto.JAddOnsOnClick?
  get() = if (hasOnClick()) getOnClick() else null

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.Icon.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.IconKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.Icon =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.IconKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.KeyValueKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.KeyValueKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue.SwitchWidget.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.KeyValueKt.SwitchWidgetKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue.SwitchWidget =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.KeyValueKt.SwitchWidgetKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue.SwitchWidgetOrBuilder.idOrNull: org.matrix.dma.gchat.proto.JAddOnsIdentifier?
  get() = if (hasId()) getId() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue.SwitchWidgetOrBuilder.onChangeOrNull: org.matrix.dma.gchat.proto.JAddOnsFormAction?
  get() = if (hasOnChange()) getOnChange() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValueOrBuilder.startIconOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.Icon?
  get() = if (hasStartIcon()) getStartIcon() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValueOrBuilder.topLabelOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText?
  get() = if (hasTopLabel()) getTopLabel() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValueOrBuilder.contentOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText?
  get() = if (hasContent()) getContent() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValueOrBuilder.bottomLabelOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText?
  get() = if (hasBottomLabel()) getBottomLabel() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValueOrBuilder.onClickOrNull: org.matrix.dma.gchat.proto.JAddOnsOnClick?
  get() = if (hasOnClick()) getOnClick() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValueOrBuilder.buttonOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.Button?
  get() = if (hasButton()) getButton() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValueOrBuilder.switchWidgetOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue.SwitchWidget?
  get() = if (hasSwitchWidget()) getSwitchWidget() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValueOrBuilder.endIconOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.Icon?
  get() = if (hasEndIcon()) getEndIcon() else null

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.Divider.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.DividerKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.Divider =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.DividerKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.MenuKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.Menu =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.MenuKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.MenuItem.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.MenuKt.MenuItemKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.Menu.MenuItem =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.MenuKt.MenuItemKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.JAddOnsWidget.MenuOrBuilder.onChangeOrNull: org.matrix.dma.gchat.proto.JAddOnsFormAction?
  get() = if (hasOnChange()) getOnChange() else null

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.AutoCompleteKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.AutoCompleteKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.AutoCompleteItem.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.AutoCompleteKt.AutoCompleteItemKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete.AutoCompleteItem =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.AutoCompleteKt.AutoCompleteItemKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.TextField.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.TextFieldKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.TextField =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.TextFieldKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.JAddOnsWidget.TextFieldOrBuilder.idOrNull: org.matrix.dma.gchat.proto.JAddOnsIdentifier?
  get() = if (hasId()) getId() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.TextFieldOrBuilder.onChangeOrNull: org.matrix.dma.gchat.proto.JAddOnsFormAction?
  get() = if (hasOnChange()) getOnChange() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.TextFieldOrBuilder.autoCompleteOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.AutoComplete?
  get() = if (hasAutoComplete()) getAutoComplete() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.TextFieldOrBuilder.autoCompleteCallbackOrNull: org.matrix.dma.gchat.proto.JAddOnsFormAction?
  get() = if (hasAutoCompleteCallback()) getAutoCompleteCallback() else null

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.SelectionControlKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.SelectionControlKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItem.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.SelectionControlKt.SelectionItemKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItem =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.SelectionControlKt.SelectionItemKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl.SelectionItemOrBuilder.idOrNull: org.matrix.dma.gchat.proto.JAddOnsIdentifier?
  get() = if (hasId()) getId() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControlOrBuilder.idOrNull: org.matrix.dma.gchat.proto.JAddOnsIdentifier?
  get() = if (hasId()) getId() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControlOrBuilder.onChangeOrNull: org.matrix.dma.gchat.proto.JAddOnsFormAction?
  get() = if (hasOnChange()) getOnChange() else null

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.DateTimePicker.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.DateTimePickerKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.DateTimePicker =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.DateTimePickerKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.JAddOnsWidget.DateTimePickerOrBuilder.onChangeOrNull: org.matrix.dma.gchat.proto.JAddOnsFormAction?
  get() = if (hasOnChange()) getOnChange() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.DateTimePickerOrBuilder.themeColorsOrNull: org.matrix.dma.gchat.proto.JAddOnsThemeColors?
  get() = if (hasThemeColors()) getThemeColors() else null

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.TextButton.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.TextButtonKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.TextButton =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.TextButtonKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.JAddOnsWidget.TextButtonOrBuilder.idOrNull: org.matrix.dma.gchat.proto.JAddOnsIdentifier?
  get() = if (hasId()) getId() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.TextButtonOrBuilder.textOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText?
  get() = if (hasText()) getText() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.TextButtonOrBuilder.onClickOrNull: org.matrix.dma.gchat.proto.JAddOnsOnClick?
  get() = if (hasOnClick()) getOnClick() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.TextButtonOrBuilder.backgroundThemeColorsOrNull: org.matrix.dma.gchat.proto.JAddOnsThemeColors?
  get() = if (hasBackgroundThemeColors()) getBackgroundThemeColors() else null

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.ImageButton.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.ImageButtonKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.ImageButton =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.ImageButtonKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.JAddOnsWidget.ImageButtonOrBuilder.idOrNull: org.matrix.dma.gchat.proto.JAddOnsIdentifier?
  get() = if (hasId()) getId() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.ImageButtonOrBuilder.onClickOrNull: org.matrix.dma.gchat.proto.JAddOnsOnClick?
  get() = if (hasOnClick()) getOnClick() else null

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsWidget.Button.copy(block: org.matrix.dma.gchat.proto.JAddOnsWidgetKt.ButtonKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsWidget.Button =
  org.matrix.dma.gchat.proto.JAddOnsWidgetKt.ButtonKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.JAddOnsWidget.ButtonOrBuilder.textButtonOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.TextButton?
  get() = if (hasTextButton()) getTextButton() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidget.ButtonOrBuilder.imageButtonOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.ImageButton?
  get() = if (hasImageButton()) getImageButton() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidgetOrBuilder.textWidgetOrNull: org.matrix.dma.gchat.proto.JAddOnsTextWidget?
  get() = if (hasTextWidget()) getTextWidget() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidgetOrBuilder.labelContentPairWidgetOrNull: org.matrix.dma.gchat.proto.JAddOnsLabelContentPairWidget?
  get() = if (hasLabelContentPairWidget()) getLabelContentPairWidget() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidgetOrBuilder.textParagraphOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.TextParagraph?
  get() = if (hasTextParagraph()) getTextParagraph() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidgetOrBuilder.textKeyValueOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.TextKeyValue?
  get() = if (hasTextKeyValue()) getTextKeyValue() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidgetOrBuilder.imageKeyValueOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.ImageKeyValue?
  get() = if (hasImageKeyValue()) getImageKeyValue() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidgetOrBuilder.imageOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.Image?
  get() = if (hasImage()) getImage() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidgetOrBuilder.keyValueOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.KeyValue?
  get() = if (hasKeyValue()) getKeyValue() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidgetOrBuilder.dividerOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.Divider?
  get() = if (hasDivider()) getDivider() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidgetOrBuilder.gridOrNull: org.matrix.dma.gchat.proto.JAddOnsGrid?
  get() = if (hasGrid()) getGrid() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidgetOrBuilder.menuOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.Menu?
  get() = if (hasMenu()) getMenu() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidgetOrBuilder.textFieldOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.TextField?
  get() = if (hasTextField()) getTextField() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidgetOrBuilder.selectionControlOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.SelectionControl?
  get() = if (hasSelectionControl()) getSelectionControl() else null

public val org.matrix.dma.gchat.proto.JAddOnsWidgetOrBuilder.dateTimePickerOrNull: org.matrix.dma.gchat.proto.JAddOnsWidget.DateTimePicker?
  get() = if (hasDateTimePicker()) getDateTimePicker() else null

