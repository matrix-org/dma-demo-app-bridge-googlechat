//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializewebPushNotificationEvent")
public inline fun webPushNotificationEvent(block: org.matrix.dma.gchat.proto.WebPushNotificationEventKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.WebPushNotificationEvent =
  org.matrix.dma.gchat.proto.WebPushNotificationEventKt.Dsl._create(org.matrix.dma.gchat.proto.WebPushNotificationEvent.newBuilder()).apply { block() }._build()
public object WebPushNotificationEventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.WebPushNotificationEvent.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.WebPushNotificationEvent.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.WebPushNotificationEvent = _builder.build()

    /**
     * <code>optional .WebPushNotification notification = 1;</code>
     */
    public var notification: org.matrix.dma.gchat.proto.WebPushNotification
      @JvmName("getNotification")
      get() = _builder.getNotification()
      @JvmName("setNotification")
      set(value) {
        _builder.setNotification(value)
      }
    /**
     * <code>optional .WebPushNotification notification = 1;</code>
     */
    public fun clearNotification() {
      _builder.clearNotification()
    }
    /**
     * <code>optional .WebPushNotification notification = 1;</code>
     * @return Whether the notification field is set.
     */
    public fun hasNotification(): kotlin.Boolean {
      return _builder.hasNotification()
    }
    public val WebPushNotificationEventKt.Dsl.notificationOrNull: org.matrix.dma.gchat.proto.WebPushNotification?
      get() = _builder.notificationOrNull

    /**
     * <code>optional .WebPushNotificationEvent.DispatchApproachType dispatch_approach_type = 2;</code>
     */
    public var dispatchApproachType: org.matrix.dma.gchat.proto.WebPushNotificationEvent.DispatchApproachType
      @JvmName("getDispatchApproachType")
      get() = _builder.getDispatchApproachType()
      @JvmName("setDispatchApproachType")
      set(value) {
        _builder.setDispatchApproachType(value)
      }
    /**
     * <code>optional .WebPushNotificationEvent.DispatchApproachType dispatch_approach_type = 2;</code>
     */
    public fun clearDispatchApproachType() {
      _builder.clearDispatchApproachType()
    }
    /**
     * <code>optional .WebPushNotificationEvent.DispatchApproachType dispatch_approach_type = 2;</code>
     * @return Whether the dispatchApproachType field is set.
     */
    public fun hasDispatchApproachType(): kotlin.Boolean {
      return _builder.hasDispatchApproachType()
    }

    /**
     * <code>optional .MobileLocalNotification mobile_local_notification = 3;</code>
     */
    public var mobileLocalNotification: org.matrix.dma.gchat.proto.MobileLocalNotification
      @JvmName("getMobileLocalNotification")
      get() = _builder.getMobileLocalNotification()
      @JvmName("setMobileLocalNotification")
      set(value) {
        _builder.setMobileLocalNotification(value)
      }
    /**
     * <code>optional .MobileLocalNotification mobile_local_notification = 3;</code>
     */
    public fun clearMobileLocalNotification() {
      _builder.clearMobileLocalNotification()
    }
    /**
     * <code>optional .MobileLocalNotification mobile_local_notification = 3;</code>
     * @return Whether the mobileLocalNotification field is set.
     */
    public fun hasMobileLocalNotification(): kotlin.Boolean {
      return _builder.hasMobileLocalNotification()
    }
    public val WebPushNotificationEventKt.Dsl.mobileLocalNotificationOrNull: org.matrix.dma.gchat.proto.MobileLocalNotification?
      get() = _builder.mobileLocalNotificationOrNull

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class EndpointTypesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .WebPushNotificationEvent.EndpointType endpoint_types = 4;</code>
     */
    public val endpointTypes: com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.WebPushNotificationEvent.EndpointType, EndpointTypesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getEndpointTypesList()
      )
    /**
     * <code>repeated .WebPushNotificationEvent.EndpointType endpoint_types = 4;</code>
     * @param value The endpointTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addEndpointTypes")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.WebPushNotificationEvent.EndpointType, EndpointTypesProxy>.add(value: org.matrix.dma.gchat.proto.WebPushNotificationEvent.EndpointType) {
      _builder.addEndpointTypes(value)
    }/**
     * <code>repeated .WebPushNotificationEvent.EndpointType endpoint_types = 4;</code>
     * @param value The endpointTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignEndpointTypes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.WebPushNotificationEvent.EndpointType, EndpointTypesProxy>.plusAssign(value: org.matrix.dma.gchat.proto.WebPushNotificationEvent.EndpointType) {
      add(value)
    }/**
     * <code>repeated .WebPushNotificationEvent.EndpointType endpoint_types = 4;</code>
     * @param values The endpointTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllEndpointTypes")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.WebPushNotificationEvent.EndpointType, EndpointTypesProxy>.addAll(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.WebPushNotificationEvent.EndpointType>) {
      _builder.addAllEndpointTypes(values)
    }/**
     * <code>repeated .WebPushNotificationEvent.EndpointType endpoint_types = 4;</code>
     * @param values The endpointTypes to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllEndpointTypes")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.WebPushNotificationEvent.EndpointType, EndpointTypesProxy>.plusAssign(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.WebPushNotificationEvent.EndpointType>) {
      addAll(values)
    }/**
     * <code>repeated .WebPushNotificationEvent.EndpointType endpoint_types = 4;</code>
     * @param index The index to set the value at.
     * @param value The endpointTypes to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setEndpointTypes")
    public operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.WebPushNotificationEvent.EndpointType, EndpointTypesProxy>.set(index: kotlin.Int, value: org.matrix.dma.gchat.proto.WebPushNotificationEvent.EndpointType) {
      _builder.setEndpointTypes(index, value)
    }/**
     * <code>repeated .WebPushNotificationEvent.EndpointType endpoint_types = 4;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearEndpointTypes")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.WebPushNotificationEvent.EndpointType, EndpointTypesProxy>.clear() {
      _builder.clearEndpointTypes()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.WebPushNotificationEvent.copy(block: org.matrix.dma.gchat.proto.WebPushNotificationEventKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.WebPushNotificationEvent =
  org.matrix.dma.gchat.proto.WebPushNotificationEventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.WebPushNotificationEventOrBuilder.notificationOrNull: org.matrix.dma.gchat.proto.WebPushNotification?
  get() = if (hasNotification()) getNotification() else null

public val org.matrix.dma.gchat.proto.WebPushNotificationEventOrBuilder.mobileLocalNotificationOrNull: org.matrix.dma.gchat.proto.MobileLocalNotification?
  get() = if (hasMobileLocalNotification()) getMobileLocalNotification() else null

