//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializestreamEventsRequest")
public inline fun streamEventsRequest(block: org.matrix.dma.gchat.proto.StreamEventsRequestKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.StreamEventsRequest =
  org.matrix.dma.gchat.proto.StreamEventsRequestKt.Dsl._create(org.matrix.dma.gchat.proto.StreamEventsRequest.newBuilder()).apply { block() }._build()
public object StreamEventsRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.StreamEventsRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.StreamEventsRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.StreamEventsRequest = _builder.build()

    /**
     * <code>optional .Platform platform = 4;</code>
     */
    public var platform: org.matrix.dma.gchat.proto.Platform
      @JvmName("getPlatform")
      get() = _builder.getPlatform()
      @JvmName("setPlatform")
      set(value) {
        _builder.setPlatform(value)
      }
    /**
     * <code>optional .Platform platform = 4;</code>
     */
    public fun clearPlatform() {
      _builder.clearPlatform()
    }
    /**
     * <code>optional .Platform platform = 4;</code>
     * @return Whether the platform field is set.
     */
    public fun hasPlatform(): kotlin.Boolean {
      return _builder.hasPlatform()
    }

    /**
     * <code>optional .ClientInfo client_info = 5;</code>
     */
    public var clientInfo: org.matrix.dma.gchat.proto.ClientInfo
      @JvmName("getClientInfo")
      get() = _builder.getClientInfo()
      @JvmName("setClientInfo")
      set(value) {
        _builder.setClientInfo(value)
      }
    /**
     * <code>optional .ClientInfo client_info = 5;</code>
     */
    public fun clearClientInfo() {
      _builder.clearClientInfo()
    }
    /**
     * <code>optional .ClientInfo client_info = 5;</code>
     * @return Whether the clientInfo field is set.
     */
    public fun hasClientInfo(): kotlin.Boolean {
      return _builder.hasClientInfo()
    }
    public val StreamEventsRequestKt.Dsl.clientInfoOrNull: org.matrix.dma.gchat.proto.ClientInfo?
      get() = _builder.clientInfoOrNull

    /**
     * <code>optional int64 client_session_id = 6;</code>
     */
    public var clientSessionId: kotlin.Long
      @JvmName("getClientSessionId")
      get() = _builder.getClientSessionId()
      @JvmName("setClientSessionId")
      set(value) {
        _builder.setClientSessionId(value)
      }
    /**
     * <code>optional int64 client_session_id = 6;</code>
     */
    public fun clearClientSessionId() {
      _builder.clearClientSessionId()
    }
    /**
     * <code>optional int64 client_session_id = 6;</code>
     * @return Whether the clientSessionId field is set.
     */
    public fun hasClientSessionId(): kotlin.Boolean {
      return _builder.hasClientSessionId()
    }

    /**
     * <code>optional string sample_id = 1;</code>
     */
    public var sampleId: kotlin.String
      @JvmName("getSampleId")
      get() = _builder.getSampleId()
      @JvmName("setSampleId")
      set(value) {
        _builder.setSampleId(value)
      }
    /**
     * <code>optional string sample_id = 1;</code>
     */
    public fun clearSampleId() {
      _builder.clearSampleId()
    }
    /**
     * <code>optional string sample_id = 1;</code>
     * @return Whether the sampleId field is set.
     */
    public fun hasSampleId(): kotlin.Boolean {
      return _builder.hasSampleId()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class SampleIdsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated string sample_ids = 7;</code>
     * @return A list containing the sampleIds.
     */
    public val sampleIds: com.google.protobuf.kotlin.DslList<kotlin.String, SampleIdsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getSampleIdsList()
      )
    /**
     * <code>repeated string sample_ids = 7;</code>
     * @param value The sampleIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addSampleIds")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, SampleIdsProxy>.add(value: kotlin.String) {
      _builder.addSampleIds(value)
    }
    /**
     * <code>repeated string sample_ids = 7;</code>
     * @param value The sampleIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignSampleIds")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, SampleIdsProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <code>repeated string sample_ids = 7;</code>
     * @param values The sampleIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllSampleIds")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, SampleIdsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllSampleIds(values)
    }
    /**
     * <code>repeated string sample_ids = 7;</code>
     * @param values The sampleIds to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllSampleIds")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, SampleIdsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <code>repeated string sample_ids = 7;</code>
     * @param index The index to set the value at.
     * @param value The sampleIds to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setSampleIds")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, SampleIdsProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setSampleIds(index, value)
    }/**
     * <code>repeated string sample_ids = 7;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearSampleIds")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, SampleIdsProxy>.clear() {
      _builder.clearSampleIds()
    }
    /**
     * <code>optional .PingEvent ping_event = 2;</code>
     */
    public var pingEvent: org.matrix.dma.gchat.proto.PingEvent
      @JvmName("getPingEvent")
      get() = _builder.getPingEvent()
      @JvmName("setPingEvent")
      set(value) {
        _builder.setPingEvent(value)
      }
    /**
     * <code>optional .PingEvent ping_event = 2;</code>
     */
    public fun clearPingEvent() {
      _builder.clearPingEvent()
    }
    /**
     * <code>optional .PingEvent ping_event = 2;</code>
     * @return Whether the pingEvent field is set.
     */
    public fun hasPingEvent(): kotlin.Boolean {
      return _builder.hasPingEvent()
    }
    public val StreamEventsRequestKt.Dsl.pingEventOrNull: org.matrix.dma.gchat.proto.PingEvent?
      get() = _builder.pingEventOrNull

    /**
     * <code>optional .ClockSyncRequest clock_sync_request = 3;</code>
     */
    public var clockSyncRequest: org.matrix.dma.gchat.proto.ClockSyncRequest
      @JvmName("getClockSyncRequest")
      get() = _builder.getClockSyncRequest()
      @JvmName("setClockSyncRequest")
      set(value) {
        _builder.setClockSyncRequest(value)
      }
    /**
     * <code>optional .ClockSyncRequest clock_sync_request = 3;</code>
     */
    public fun clearClockSyncRequest() {
      _builder.clearClockSyncRequest()
    }
    /**
     * <code>optional .ClockSyncRequest clock_sync_request = 3;</code>
     * @return Whether the clockSyncRequest field is set.
     */
    public fun hasClockSyncRequest(): kotlin.Boolean {
      return _builder.hasClockSyncRequest()
    }
    public val StreamEventsRequestKt.Dsl.clockSyncRequestOrNull: org.matrix.dma.gchat.proto.ClockSyncRequest?
      get() = _builder.clockSyncRequestOrNull

    /**
     * <code>optional .GroupSubscriptionEvent group_subscription_event = 8;</code>
     */
    public var groupSubscriptionEvent: org.matrix.dma.gchat.proto.GroupSubscriptionEvent
      @JvmName("getGroupSubscriptionEvent")
      get() = _builder.getGroupSubscriptionEvent()
      @JvmName("setGroupSubscriptionEvent")
      set(value) {
        _builder.setGroupSubscriptionEvent(value)
      }
    /**
     * <code>optional .GroupSubscriptionEvent group_subscription_event = 8;</code>
     */
    public fun clearGroupSubscriptionEvent() {
      _builder.clearGroupSubscriptionEvent()
    }
    /**
     * <code>optional .GroupSubscriptionEvent group_subscription_event = 8;</code>
     * @return Whether the groupSubscriptionEvent field is set.
     */
    public fun hasGroupSubscriptionEvent(): kotlin.Boolean {
      return _builder.hasGroupSubscriptionEvent()
    }
    public val StreamEventsRequestKt.Dsl.groupSubscriptionEventOrNull: org.matrix.dma.gchat.proto.GroupSubscriptionEvent?
      get() = _builder.groupSubscriptionEventOrNull

    /**
     * <code>optional int64 test_user_gaia_id = 100;</code>
     */
    public var testUserGaiaId: kotlin.Long
      @JvmName("getTestUserGaiaId")
      get() = _builder.getTestUserGaiaId()
      @JvmName("setTestUserGaiaId")
      set(value) {
        _builder.setTestUserGaiaId(value)
      }
    /**
     * <code>optional int64 test_user_gaia_id = 100;</code>
     */
    public fun clearTestUserGaiaId() {
      _builder.clearTestUserGaiaId()
    }
    /**
     * <code>optional int64 test_user_gaia_id = 100;</code>
     * @return Whether the testUserGaiaId field is set.
     */
    public fun hasTestUserGaiaId(): kotlin.Boolean {
      return _builder.hasTestUserGaiaId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.StreamEventsRequest.copy(block: org.matrix.dma.gchat.proto.StreamEventsRequestKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.StreamEventsRequest =
  org.matrix.dma.gchat.proto.StreamEventsRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.StreamEventsRequestOrBuilder.clientInfoOrNull: org.matrix.dma.gchat.proto.ClientInfo?
  get() = if (hasClientInfo()) getClientInfo() else null

public val org.matrix.dma.gchat.proto.StreamEventsRequestOrBuilder.pingEventOrNull: org.matrix.dma.gchat.proto.PingEvent?
  get() = if (hasPingEvent()) getPingEvent() else null

public val org.matrix.dma.gchat.proto.StreamEventsRequestOrBuilder.clockSyncRequestOrNull: org.matrix.dma.gchat.proto.ClockSyncRequest?
  get() = if (hasClockSyncRequest()) getClockSyncRequest() else null

public val org.matrix.dma.gchat.proto.StreamEventsRequestOrBuilder.groupSubscriptionEventOrNull: org.matrix.dma.gchat.proto.GroupSubscriptionEvent?
  get() = if (hasGroupSubscriptionEvent()) getGroupSubscriptionEvent() else null

