//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializemembershipId")
public inline fun membershipId(block: org.matrix.dma.gchat.proto.MembershipIdKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.MembershipId =
  org.matrix.dma.gchat.proto.MembershipIdKt.Dsl._create(org.matrix.dma.gchat.proto.MembershipId.newBuilder()).apply { block() }._build()
public object MembershipIdKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.MembershipId.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.MembershipId.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.MembershipId = _builder.build()

    /**
     * <code>optional .MemberId member_id = 1;</code>
     */
    public var memberId: org.matrix.dma.gchat.proto.MemberId
      @JvmName("getMemberId")
      get() = _builder.getMemberId()
      @JvmName("setMemberId")
      set(value) {
        _builder.setMemberId(value)
      }
    /**
     * <code>optional .MemberId member_id = 1;</code>
     */
    public fun clearMemberId() {
      _builder.clearMemberId()
    }
    /**
     * <code>optional .MemberId member_id = 1;</code>
     * @return Whether the memberId field is set.
     */
    public fun hasMemberId(): kotlin.Boolean {
      return _builder.hasMemberId()
    }
    public val MembershipIdKt.Dsl.memberIdOrNull: org.matrix.dma.gchat.proto.MemberId?
      get() = _builder.memberIdOrNull

    /**
     * <code>optional .SpaceId space_id = 2;</code>
     */
    public var spaceId: org.matrix.dma.gchat.proto.SpaceId
      @JvmName("getSpaceId")
      get() = _builder.getSpaceId()
      @JvmName("setSpaceId")
      set(value) {
        _builder.setSpaceId(value)
      }
    /**
     * <code>optional .SpaceId space_id = 2;</code>
     */
    public fun clearSpaceId() {
      _builder.clearSpaceId()
    }
    /**
     * <code>optional .SpaceId space_id = 2;</code>
     * @return Whether the spaceId field is set.
     */
    public fun hasSpaceId(): kotlin.Boolean {
      return _builder.hasSpaceId()
    }
    public val MembershipIdKt.Dsl.spaceIdOrNull: org.matrix.dma.gchat.proto.SpaceId?
      get() = _builder.spaceIdOrNull

    /**
     * <code>optional .GroupId group_id = 3;</code>
     */
    public var groupId: org.matrix.dma.gchat.proto.GroupId
      @JvmName("getGroupId")
      get() = _builder.getGroupId()
      @JvmName("setGroupId")
      set(value) {
        _builder.setGroupId(value)
      }
    /**
     * <code>optional .GroupId group_id = 3;</code>
     */
    public fun clearGroupId() {
      _builder.clearGroupId()
    }
    /**
     * <code>optional .GroupId group_id = 3;</code>
     * @return Whether the groupId field is set.
     */
    public fun hasGroupId(): kotlin.Boolean {
      return _builder.hasGroupId()
    }
    public val MembershipIdKt.Dsl.groupIdOrNull: org.matrix.dma.gchat.proto.GroupId?
      get() = _builder.groupIdOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.MembershipId.copy(block: org.matrix.dma.gchat.proto.MembershipIdKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.MembershipId =
  org.matrix.dma.gchat.proto.MembershipIdKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.MembershipIdOrBuilder.memberIdOrNull: org.matrix.dma.gchat.proto.MemberId?
  get() = if (hasMemberId()) getMemberId() else null

public val org.matrix.dma.gchat.proto.MembershipIdOrBuilder.spaceIdOrNull: org.matrix.dma.gchat.proto.SpaceId?
  get() = if (hasSpaceId()) getSpaceId() else null

public val org.matrix.dma.gchat.proto.MembershipIdOrBuilder.groupIdOrNull: org.matrix.dma.gchat.proto.GroupId?
  get() = if (hasGroupId()) getGroupId() else null

