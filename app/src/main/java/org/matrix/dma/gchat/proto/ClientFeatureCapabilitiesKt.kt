//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializeclientFeatureCapabilities")
public inline fun clientFeatureCapabilities(block: org.matrix.dma.gchat.proto.ClientFeatureCapabilitiesKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.ClientFeatureCapabilities =
  org.matrix.dma.gchat.proto.ClientFeatureCapabilitiesKt.Dsl._create(org.matrix.dma.gchat.proto.ClientFeatureCapabilities.newBuilder()).apply { block() }._build()
public object ClientFeatureCapabilitiesKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.ClientFeatureCapabilities.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.ClientFeatureCapabilities.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.ClientFeatureCapabilities = _builder.build()

    /**
     * <code>optional bool enable_all_features = 1;</code>
     */
    public var enableAllFeatures: kotlin.Boolean
      @JvmName("getEnableAllFeatures")
      get() = _builder.getEnableAllFeatures()
      @JvmName("setEnableAllFeatures")
      set(value) {
        _builder.setEnableAllFeatures(value)
      }
    /**
     * <code>optional bool enable_all_features = 1;</code>
     */
    public fun clearEnableAllFeatures() {
      _builder.clearEnableAllFeatures()
    }
    /**
     * <code>optional bool enable_all_features = 1;</code>
     * @return Whether the enableAllFeatures field is set.
     */
    public fun hasEnableAllFeatures(): kotlin.Boolean {
      return _builder.hasEnableAllFeatures()
    }

    /**
     * <code>optional .ClientFeatureCapabilities.CapabilityLevel spaces_level_for_testing = 2;</code>
     */
    public var spacesLevelForTesting: org.matrix.dma.gchat.proto.ClientFeatureCapabilities.CapabilityLevel
      @JvmName("getSpacesLevelForTesting")
      get() = _builder.getSpacesLevelForTesting()
      @JvmName("setSpacesLevelForTesting")
      set(value) {
        _builder.setSpacesLevelForTesting(value)
      }
    /**
     * <code>optional .ClientFeatureCapabilities.CapabilityLevel spaces_level_for_testing = 2;</code>
     */
    public fun clearSpacesLevelForTesting() {
      _builder.clearSpacesLevelForTesting()
    }
    /**
     * <code>optional .ClientFeatureCapabilities.CapabilityLevel spaces_level_for_testing = 2;</code>
     * @return Whether the spacesLevelForTesting field is set.
     */
    public fun hasSpacesLevelForTesting(): kotlin.Boolean {
      return _builder.hasSpacesLevelForTesting()
    }

    /**
     * <code>optional .ClientFeatureCapabilities.CapabilityLevel dms_level_for_testing = 3;</code>
     */
    public var dmsLevelForTesting: org.matrix.dma.gchat.proto.ClientFeatureCapabilities.CapabilityLevel
      @JvmName("getDmsLevelForTesting")
      get() = _builder.getDmsLevelForTesting()
      @JvmName("setDmsLevelForTesting")
      set(value) {
        _builder.setDmsLevelForTesting(value)
      }
    /**
     * <code>optional .ClientFeatureCapabilities.CapabilityLevel dms_level_for_testing = 3;</code>
     */
    public fun clearDmsLevelForTesting() {
      _builder.clearDmsLevelForTesting()
    }
    /**
     * <code>optional .ClientFeatureCapabilities.CapabilityLevel dms_level_for_testing = 3;</code>
     * @return Whether the dmsLevelForTesting field is set.
     */
    public fun hasDmsLevelForTesting(): kotlin.Boolean {
      return _builder.hasDmsLevelForTesting()
    }

    /**
     * <code>optional .ClientFeatureCapabilities.CapabilityLevel post_rooms_level = 4;</code>
     */
    public var postRoomsLevel: org.matrix.dma.gchat.proto.ClientFeatureCapabilities.CapabilityLevel
      @JvmName("getPostRoomsLevel")
      get() = _builder.getPostRoomsLevel()
      @JvmName("setPostRoomsLevel")
      set(value) {
        _builder.setPostRoomsLevel(value)
      }
    /**
     * <code>optional .ClientFeatureCapabilities.CapabilityLevel post_rooms_level = 4;</code>
     */
    public fun clearPostRoomsLevel() {
      _builder.clearPostRoomsLevel()
    }
    /**
     * <code>optional .ClientFeatureCapabilities.CapabilityLevel post_rooms_level = 4;</code>
     * @return Whether the postRoomsLevel field is set.
     */
    public fun hasPostRoomsLevel(): kotlin.Boolean {
      return _builder.hasPostRoomsLevel()
    }

    /**
     * <code>optional .ClientFeatureCapabilities.CapabilityLevel spam_room_invites_level = 5;</code>
     */
    public var spamRoomInvitesLevel: org.matrix.dma.gchat.proto.ClientFeatureCapabilities.CapabilityLevel
      @JvmName("getSpamRoomInvitesLevel")
      get() = _builder.getSpamRoomInvitesLevel()
      @JvmName("setSpamRoomInvitesLevel")
      set(value) {
        _builder.setSpamRoomInvitesLevel(value)
      }
    /**
     * <code>optional .ClientFeatureCapabilities.CapabilityLevel spam_room_invites_level = 5;</code>
     */
    public fun clearSpamRoomInvitesLevel() {
      _builder.clearSpamRoomInvitesLevel()
    }
    /**
     * <code>optional .ClientFeatureCapabilities.CapabilityLevel spam_room_invites_level = 5;</code>
     * @return Whether the spamRoomInvitesLevel field is set.
     */
    public fun hasSpamRoomInvitesLevel(): kotlin.Boolean {
      return _builder.hasSpamRoomInvitesLevel()
    }

    /**
     * <code>optional .ClientFeatureCapabilities.CapabilityLevel tombstone_level = 6;</code>
     */
    public var tombstoneLevel: org.matrix.dma.gchat.proto.ClientFeatureCapabilities.CapabilityLevel
      @JvmName("getTombstoneLevel")
      get() = _builder.getTombstoneLevel()
      @JvmName("setTombstoneLevel")
      set(value) {
        _builder.setTombstoneLevel(value)
      }
    /**
     * <code>optional .ClientFeatureCapabilities.CapabilityLevel tombstone_level = 6;</code>
     */
    public fun clearTombstoneLevel() {
      _builder.clearTombstoneLevel()
    }
    /**
     * <code>optional .ClientFeatureCapabilities.CapabilityLevel tombstone_level = 6;</code>
     * @return Whether the tombstoneLevel field is set.
     */
    public fun hasTombstoneLevel(): kotlin.Boolean {
      return _builder.hasTombstoneLevel()
    }

    /**
     * <code>optional .ClientFeatureCapabilities.CapabilityLevel rich_text_viewing_level = 7;</code>
     */
    public var richTextViewingLevel: org.matrix.dma.gchat.proto.ClientFeatureCapabilities.CapabilityLevel
      @JvmName("getRichTextViewingLevel")
      get() = _builder.getRichTextViewingLevel()
      @JvmName("setRichTextViewingLevel")
      set(value) {
        _builder.setRichTextViewingLevel(value)
      }
    /**
     * <code>optional .ClientFeatureCapabilities.CapabilityLevel rich_text_viewing_level = 7;</code>
     */
    public fun clearRichTextViewingLevel() {
      _builder.clearRichTextViewingLevel()
    }
    /**
     * <code>optional .ClientFeatureCapabilities.CapabilityLevel rich_text_viewing_level = 7;</code>
     * @return Whether the richTextViewingLevel field is set.
     */
    public fun hasRichTextViewingLevel(): kotlin.Boolean {
      return _builder.hasRichTextViewingLevel()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.ClientFeatureCapabilities.copy(block: org.matrix.dma.gchat.proto.ClientFeatureCapabilitiesKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.ClientFeatureCapabilities =
  org.matrix.dma.gchat.proto.ClientFeatureCapabilitiesKt.Dsl._create(this.toBuilder()).apply { block() }._build()

