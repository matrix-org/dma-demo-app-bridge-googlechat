//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializeuserPresence")
public inline fun userPresence(block: org.matrix.dma.gchat.proto.UserPresenceKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.UserPresence =
  org.matrix.dma.gchat.proto.UserPresenceKt.Dsl._create(org.matrix.dma.gchat.proto.UserPresence.newBuilder()).apply { block() }._build()
public object UserPresenceKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.UserPresence.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.UserPresence.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.UserPresence = _builder.build()

    /**
     * <code>optional .UserId user_id = 1;</code>
     */
    public var userId: org.matrix.dma.gchat.proto.UserId
      @JvmName("getUserId")
      get() = _builder.getUserId()
      @JvmName("setUserId")
      set(value) {
        _builder.setUserId(value)
      }
    /**
     * <code>optional .UserId user_id = 1;</code>
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }
    /**
     * <code>optional .UserId user_id = 1;</code>
     * @return Whether the userId field is set.
     */
    public fun hasUserId(): kotlin.Boolean {
      return _builder.hasUserId()
    }
    public val UserPresenceKt.Dsl.userIdOrNull: org.matrix.dma.gchat.proto.UserId?
      get() = _builder.userIdOrNull

    /**
     * <code>optional .Presence presence = 2;</code>
     */
    public var presence: org.matrix.dma.gchat.proto.Presence
      @JvmName("getPresence")
      get() = _builder.getPresence()
      @JvmName("setPresence")
      set(value) {
        _builder.setPresence(value)
      }
    /**
     * <code>optional .Presence presence = 2;</code>
     */
    public fun clearPresence() {
      _builder.clearPresence()
    }
    /**
     * <code>optional .Presence presence = 2;</code>
     * @return Whether the presence field is set.
     */
    public fun hasPresence(): kotlin.Boolean {
      return _builder.hasPresence()
    }

    /**
     * <code>optional int64 active_until = 4;</code>
     */
    public var activeUntil: kotlin.Long
      @JvmName("getActiveUntil")
      get() = _builder.getActiveUntil()
      @JvmName("setActiveUntil")
      set(value) {
        _builder.setActiveUntil(value)
      }
    /**
     * <code>optional int64 active_until = 4;</code>
     */
    public fun clearActiveUntil() {
      _builder.clearActiveUntil()
    }
    /**
     * <code>optional int64 active_until = 4;</code>
     * @return Whether the activeUntil field is set.
     */
    public fun hasActiveUntil(): kotlin.Boolean {
      return _builder.hasActiveUntil()
    }

    /**
     * <code>optional .DndState_State dnd_state = 3;</code>
     */
    public var dndState: org.matrix.dma.gchat.proto.DndState_State
      @JvmName("getDndState")
      get() = _builder.getDndState()
      @JvmName("setDndState")
      set(value) {
        _builder.setDndState(value)
      }
    /**
     * <code>optional .DndState_State dnd_state = 3;</code>
     */
    public fun clearDndState() {
      _builder.clearDndState()
    }
    /**
     * <code>optional .DndState_State dnd_state = 3;</code>
     * @return Whether the dndState field is set.
     */
    public fun hasDndState(): kotlin.Boolean {
      return _builder.hasDndState()
    }

    /**
     * <code>optional .UserStatus user_status = 5;</code>
     */
    public var userStatus: org.matrix.dma.gchat.proto.UserStatus
      @JvmName("getUserStatus")
      get() = _builder.getUserStatus()
      @JvmName("setUserStatus")
      set(value) {
        _builder.setUserStatus(value)
      }
    /**
     * <code>optional .UserStatus user_status = 5;</code>
     */
    public fun clearUserStatus() {
      _builder.clearUserStatus()
    }
    /**
     * <code>optional .UserStatus user_status = 5;</code>
     * @return Whether the userStatus field is set.
     */
    public fun hasUserStatus(): kotlin.Boolean {
      return _builder.hasUserStatus()
    }
    public val UserPresenceKt.Dsl.userStatusOrNull: org.matrix.dma.gchat.proto.UserStatus?
      get() = _builder.userStatusOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.UserPresence.copy(block: org.matrix.dma.gchat.proto.UserPresenceKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.UserPresence =
  org.matrix.dma.gchat.proto.UserPresenceKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.UserPresenceOrBuilder.userIdOrNull: org.matrix.dma.gchat.proto.UserId?
  get() = if (hasUserId()) getUserId() else null

public val org.matrix.dma.gchat.proto.UserPresenceOrBuilder.userStatusOrNull: org.matrix.dma.gchat.proto.UserStatus?
  get() = if (hasUserStatus()) getUserStatus() else null

