//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializeworldFilter")
public inline fun worldFilter(block: org.matrix.dma.gchat.proto.WorldFilterKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.WorldFilter =
  org.matrix.dma.gchat.proto.WorldFilterKt.Dsl._create(org.matrix.dma.gchat.proto.WorldFilter.newBuilder()).apply { block() }._build()
public object WorldFilterKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.WorldFilter.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.WorldFilter.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.WorldFilter = _builder.build()

    /**
     * <code>optional .WorldFilter.StarredState starred_state = 1;</code>
     */
    public var starredState: org.matrix.dma.gchat.proto.WorldFilter.StarredState
      @JvmName("getStarredState")
      get() = _builder.getStarredState()
      @JvmName("setStarredState")
      set(value) {
        _builder.setStarredState(value)
      }
    /**
     * <code>optional .WorldFilter.StarredState starred_state = 1;</code>
     */
    public fun clearStarredState() {
      _builder.clearStarredState()
    }
    /**
     * <code>optional .WorldFilter.StarredState starred_state = 1;</code>
     * @return Whether the starredState field is set.
     */
    public fun hasStarredState(): kotlin.Boolean {
      return _builder.hasStarredState()
    }

    /**
     * <code>optional .WorldFilter.VisibilityState visibility_state = 2;</code>
     */
    public var visibilityState: org.matrix.dma.gchat.proto.WorldFilter.VisibilityState
      @JvmName("getVisibilityState")
      get() = _builder.getVisibilityState()
      @JvmName("setVisibilityState")
      set(value) {
        _builder.setVisibilityState(value)
      }
    /**
     * <code>optional .WorldFilter.VisibilityState visibility_state = 2;</code>
     */
    public fun clearVisibilityState() {
      _builder.clearVisibilityState()
    }
    /**
     * <code>optional .WorldFilter.VisibilityState visibility_state = 2;</code>
     * @return Whether the visibilityState field is set.
     */
    public fun hasVisibilityState(): kotlin.Boolean {
      return _builder.hasVisibilityState()
    }

    /**
     * <code>optional .WorldFilter.ReadState read_state = 7;</code>
     */
    public var readState: org.matrix.dma.gchat.proto.WorldFilter.ReadState
      @JvmName("getReadState")
      get() = _builder.getReadState()
      @JvmName("setReadState")
      set(value) {
        _builder.setReadState(value)
      }
    /**
     * <code>optional .WorldFilter.ReadState read_state = 7;</code>
     */
    public fun clearReadState() {
      _builder.clearReadState()
    }
    /**
     * <code>optional .WorldFilter.ReadState read_state = 7;</code>
     * @return Whether the readState field is set.
     */
    public fun hasReadState(): kotlin.Boolean {
      return _builder.hasReadState()
    }

    /**
     * <code>optional .WorldFilter.BlockState block_state = 8;</code>
     */
    public var blockState: org.matrix.dma.gchat.proto.WorldFilter.BlockState
      @JvmName("getBlockState")
      get() = _builder.getBlockState()
      @JvmName("setBlockState")
      set(value) {
        _builder.setBlockState(value)
      }
    /**
     * <code>optional .WorldFilter.BlockState block_state = 8;</code>
     */
    public fun clearBlockState() {
      _builder.clearBlockState()
    }
    /**
     * <code>optional .WorldFilter.BlockState block_state = 8;</code>
     * @return Whether the blockState field is set.
     */
    public fun hasBlockState(): kotlin.Boolean {
      return _builder.hasBlockState()
    }

    /**
     * <code>optional .WorldFilter.NamedState named_state = 9;</code>
     */
    public var namedState: org.matrix.dma.gchat.proto.WorldFilter.NamedState
      @JvmName("getNamedState")
      get() = _builder.getNamedState()
      @JvmName("setNamedState")
      set(value) {
        _builder.setNamedState(value)
      }
    /**
     * <code>optional .WorldFilter.NamedState named_state = 9;</code>
     */
    public fun clearNamedState() {
      _builder.clearNamedState()
    }
    /**
     * <code>optional .WorldFilter.NamedState named_state = 9;</code>
     * @return Whether the namedState field is set.
     */
    public fun hasNamedState(): kotlin.Boolean {
      return _builder.hasNamedState()
    }

    /**
     * <code>optional .MembershipState membership_state = 3;</code>
     */
    public var membershipState: org.matrix.dma.gchat.proto.MembershipState
      @JvmName("getMembershipState")
      get() = _builder.getMembershipState()
      @JvmName("setMembershipState")
      set(value) {
        _builder.setMembershipState(value)
      }
    /**
     * <code>optional .MembershipState membership_state = 3;</code>
     */
    public fun clearMembershipState() {
      _builder.clearMembershipState()
    }
    /**
     * <code>optional .MembershipState membership_state = 3;</code>
     * @return Whether the membershipState field is set.
     */
    public fun hasMembershipState(): kotlin.Boolean {
      return _builder.hasMembershipState()
    }

    /**
     * <code>optional .InviteCategory invite_category = 4;</code>
     */
    public var inviteCategory: org.matrix.dma.gchat.proto.InviteCategory
      @JvmName("getInviteCategory")
      get() = _builder.getInviteCategory()
      @JvmName("setInviteCategory")
      set(value) {
        _builder.setInviteCategory(value)
      }
    /**
     * <code>optional .InviteCategory invite_category = 4;</code>
     */
    public fun clearInviteCategory() {
      _builder.clearInviteCategory()
    }
    /**
     * <code>optional .InviteCategory invite_category = 4;</code>
     * @return Whether the inviteCategory field is set.
     */
    public fun hasInviteCategory(): kotlin.Boolean {
      return _builder.hasInviteCategory()
    }

    /**
     * <code>optional .WorldFilter.MemberType member_type = 5;</code>
     */
    public var memberType: org.matrix.dma.gchat.proto.WorldFilter.MemberType
      @JvmName("getMemberType")
      get() = _builder.getMemberType()
      @JvmName("setMemberType")
      set(value) {
        _builder.setMemberType(value)
      }
    /**
     * <code>optional .WorldFilter.MemberType member_type = 5;</code>
     */
    public fun clearMemberType() {
      _builder.clearMemberType()
    }
    /**
     * <code>optional .WorldFilter.MemberType member_type = 5;</code>
     * @return Whether the memberType field is set.
     */
    public fun hasMemberType(): kotlin.Boolean {
      return _builder.hasMemberType()
    }

    /**
     * <code>optional .WorldFilter.GroupType group_type = 6;</code>
     */
    public var groupType: org.matrix.dma.gchat.proto.WorldFilter.GroupType
      @JvmName("getGroupType")
      get() = _builder.getGroupType()
      @JvmName("setGroupType")
      set(value) {
        _builder.setGroupType(value)
      }
    /**
     * <code>optional .WorldFilter.GroupType group_type = 6;</code>
     */
    public fun clearGroupType() {
      _builder.clearGroupType()
    }
    /**
     * <code>optional .WorldFilter.GroupType group_type = 6;</code>
     * @return Whether the groupType field is set.
     */
    public fun hasGroupType(): kotlin.Boolean {
      return _builder.hasGroupType()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.WorldFilter.copy(block: org.matrix.dma.gchat.proto.WorldFilterKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.WorldFilter =
  org.matrix.dma.gchat.proto.WorldFilterKt.Dsl._create(this.toBuilder()).apply { block() }._build()

