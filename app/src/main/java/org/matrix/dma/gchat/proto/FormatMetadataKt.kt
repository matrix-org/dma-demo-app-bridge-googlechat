//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializeformatMetadata")
public inline fun formatMetadata(block: org.matrix.dma.gchat.proto.FormatMetadataKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.FormatMetadata =
  org.matrix.dma.gchat.proto.FormatMetadataKt.Dsl._create(org.matrix.dma.gchat.proto.FormatMetadata.newBuilder()).apply { block() }._build()
public object FormatMetadataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.FormatMetadata.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.FormatMetadata.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.FormatMetadata = _builder.build()

    /**
     * <code>optional .FormatMetadata.FormatType format_type = 1;</code>
     */
    public var formatType: org.matrix.dma.gchat.proto.FormatMetadata.FormatType
      @JvmName("getFormatType")
      get() = _builder.getFormatType()
      @JvmName("setFormatType")
      set(value) {
        _builder.setFormatType(value)
      }
    /**
     * <code>optional .FormatMetadata.FormatType format_type = 1;</code>
     */
    public fun clearFormatType() {
      _builder.clearFormatType()
    }
    /**
     * <code>optional .FormatMetadata.FormatType format_type = 1;</code>
     * @return Whether the formatType field is set.
     */
    public fun hasFormatType(): kotlin.Boolean {
      return _builder.hasFormatType()
    }

    /**
     * <code>optional int32 font_color = 2;</code>
     */
    public var fontColor: kotlin.Int
      @JvmName("getFontColor")
      get() = _builder.getFontColor()
      @JvmName("setFontColor")
      set(value) {
        _builder.setFontColor(value)
      }
    /**
     * <code>optional int32 font_color = 2;</code>
     */
    public fun clearFontColor() {
      _builder.clearFontColor()
    }
    /**
     * <code>optional int32 font_color = 2;</code>
     * @return Whether the fontColor field is set.
     */
    public fun hasFontColor(): kotlin.Boolean {
      return _builder.hasFontColor()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.FormatMetadata.copy(block: org.matrix.dma.gchat.proto.FormatMetadataKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.FormatMetadata =
  org.matrix.dma.gchat.proto.FormatMetadataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

