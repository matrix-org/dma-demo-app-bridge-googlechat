//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializemessageEvent")
public inline fun messageEvent(block: org.matrix.dma.gchat.proto.MessageEventKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.MessageEvent =
  org.matrix.dma.gchat.proto.MessageEventKt.Dsl._create(org.matrix.dma.gchat.proto.MessageEvent.newBuilder()).apply { block() }._build()
public object MessageEventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.MessageEvent.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.MessageEvent.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.MessageEvent = _builder.build()

    /**
     * <code>optional .Message message = 1;</code>
     */
    public var message: org.matrix.dma.gchat.proto.Message
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * <code>optional .Message message = 1;</code>
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }
    /**
     * <code>optional .Message message = 1;</code>
     * @return Whether the message field is set.
     */
    public fun hasMessage(): kotlin.Boolean {
      return _builder.hasMessage()
    }
    public val MessageEventKt.Dsl.messageOrNull: org.matrix.dma.gchat.proto.Message?
      get() = _builder.messageOrNull

    /**
     * <code>optional int64 last_message_in_topic_time = 4;</code>
     */
    public var lastMessageInTopicTime: kotlin.Long
      @JvmName("getLastMessageInTopicTime")
      get() = _builder.getLastMessageInTopicTime()
      @JvmName("setLastMessageInTopicTime")
      set(value) {
        _builder.setLastMessageInTopicTime(value)
      }
    /**
     * <code>optional int64 last_message_in_topic_time = 4;</code>
     */
    public fun clearLastMessageInTopicTime() {
      _builder.clearLastMessageInTopicTime()
    }
    /**
     * <code>optional int64 last_message_in_topic_time = 4;</code>
     * @return Whether the lastMessageInTopicTime field is set.
     */
    public fun hasLastMessageInTopicTime(): kotlin.Boolean {
      return _builder.hasLastMessageInTopicTime()
    }

    /**
     * <code>optional int64 prev_revision_time = 5;</code>
     */
    public var prevRevisionTime: kotlin.Long
      @JvmName("getPrevRevisionTime")
      get() = _builder.getPrevRevisionTime()
      @JvmName("setPrevRevisionTime")
      set(value) {
        _builder.setPrevRevisionTime(value)
      }
    /**
     * <code>optional int64 prev_revision_time = 5;</code>
     */
    public fun clearPrevRevisionTime() {
      _builder.clearPrevRevisionTime()
    }
    /**
     * <code>optional int64 prev_revision_time = 5;</code>
     * @return Whether the prevRevisionTime field is set.
     */
    public fun hasPrevRevisionTime(): kotlin.Boolean {
      return _builder.hasPrevRevisionTime()
    }

    /**
     * <code>optional bool is_head_message = 6;</code>
     */
    public var isHeadMessage: kotlin.Boolean
      @JvmName("getIsHeadMessage")
      get() = _builder.getIsHeadMessage()
      @JvmName("setIsHeadMessage")
      set(value) {
        _builder.setIsHeadMessage(value)
      }
    /**
     * <code>optional bool is_head_message = 6;</code>
     */
    public fun clearIsHeadMessage() {
      _builder.clearIsHeadMessage()
    }
    /**
     * <code>optional bool is_head_message = 6;</code>
     * @return Whether the isHeadMessage field is set.
     */
    public fun hasIsHeadMessage(): kotlin.Boolean {
      return _builder.hasIsHeadMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.MessageEvent.copy(block: org.matrix.dma.gchat.proto.MessageEventKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.MessageEvent =
  org.matrix.dma.gchat.proto.MessageEventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.MessageEventOrBuilder.messageOrNull: org.matrix.dma.gchat.proto.Message?
  get() = if (hasMessage()) getMessage() else null

