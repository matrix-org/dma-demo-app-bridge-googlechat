//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializepingEvent")
public inline fun pingEvent(block: org.matrix.dma.gchat.proto.PingEventKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.PingEvent =
  org.matrix.dma.gchat.proto.PingEventKt.Dsl._create(org.matrix.dma.gchat.proto.PingEvent.newBuilder()).apply { block() }._build()
public object PingEventKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.PingEvent.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.PingEvent.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.PingEvent = _builder.build()

    /**
     * <code>optional .PingEvent.State state = 1;</code>
     */
    public var state: org.matrix.dma.gchat.proto.PingEvent.State
      @JvmName("getState")
      get() = _builder.getState()
      @JvmName("setState")
      set(value) {
        _builder.setState(value)
      }
    /**
     * <code>optional .PingEvent.State state = 1;</code>
     */
    public fun clearState() {
      _builder.clearState()
    }
    /**
     * <code>optional .PingEvent.State state = 1;</code>
     * @return Whether the state field is set.
     */
    public fun hasState(): kotlin.Boolean {
      return _builder.hasState()
    }

    /**
     * <code>optional .PingEvent.ApplicationFocusState application_focus_state = 3;</code>
     */
    public var applicationFocusState: org.matrix.dma.gchat.proto.PingEvent.ApplicationFocusState
      @JvmName("getApplicationFocusState")
      get() = _builder.getApplicationFocusState()
      @JvmName("setApplicationFocusState")
      set(value) {
        _builder.setApplicationFocusState(value)
      }
    /**
     * <code>optional .PingEvent.ApplicationFocusState application_focus_state = 3;</code>
     */
    public fun clearApplicationFocusState() {
      _builder.clearApplicationFocusState()
    }
    /**
     * <code>optional .PingEvent.ApplicationFocusState application_focus_state = 3;</code>
     * @return Whether the applicationFocusState field is set.
     */
    public fun hasApplicationFocusState(): kotlin.Boolean {
      return _builder.hasApplicationFocusState()
    }

    /**
     * <code>optional int64 last_interactive_time_ms = 4;</code>
     */
    public var lastInteractiveTimeMs: kotlin.Long
      @JvmName("getLastInteractiveTimeMs")
      get() = _builder.getLastInteractiveTimeMs()
      @JvmName("setLastInteractiveTimeMs")
      set(value) {
        _builder.setLastInteractiveTimeMs(value)
      }
    /**
     * <code>optional int64 last_interactive_time_ms = 4;</code>
     */
    public fun clearLastInteractiveTimeMs() {
      _builder.clearLastInteractiveTimeMs()
    }
    /**
     * <code>optional int64 last_interactive_time_ms = 4;</code>
     * @return Whether the lastInteractiveTimeMs field is set.
     */
    public fun hasLastInteractiveTimeMs(): kotlin.Boolean {
      return _builder.hasLastInteractiveTimeMs()
    }

    /**
     * <code>optional .PingEvent.ClientInteractiveState client_interactive_state = 5;</code>
     */
    public var clientInteractiveState: org.matrix.dma.gchat.proto.PingEvent.ClientInteractiveState
      @JvmName("getClientInteractiveState")
      get() = _builder.getClientInteractiveState()
      @JvmName("setClientInteractiveState")
      set(value) {
        _builder.setClientInteractiveState(value)
      }
    /**
     * <code>optional .PingEvent.ClientInteractiveState client_interactive_state = 5;</code>
     */
    public fun clearClientInteractiveState() {
      _builder.clearClientInteractiveState()
    }
    /**
     * <code>optional .PingEvent.ClientInteractiveState client_interactive_state = 5;</code>
     * @return Whether the clientInteractiveState field is set.
     */
    public fun hasClientInteractiveState(): kotlin.Boolean {
      return _builder.hasClientInteractiveState()
    }

    /**
     * <code>optional bool client_notifications_enabled = 6;</code>
     */
    public var clientNotificationsEnabled: kotlin.Boolean
      @JvmName("getClientNotificationsEnabled")
      get() = _builder.getClientNotificationsEnabled()
      @JvmName("setClientNotificationsEnabled")
      set(value) {
        _builder.setClientNotificationsEnabled(value)
      }
    /**
     * <code>optional bool client_notifications_enabled = 6;</code>
     */
    public fun clearClientNotificationsEnabled() {
      _builder.clearClientNotificationsEnabled()
    }
    /**
     * <code>optional bool client_notifications_enabled = 6;</code>
     * @return Whether the clientNotificationsEnabled field is set.
     */
    public fun hasClientNotificationsEnabled(): kotlin.Boolean {
      return _builder.hasClientNotificationsEnabled()
    }

    /**
     * <code>optional .ClientNotificationsState notifications_state = 7;</code>
     */
    public var notificationsState: org.matrix.dma.gchat.proto.ClientNotificationsState
      @JvmName("getNotificationsState")
      get() = _builder.getNotificationsState()
      @JvmName("setNotificationsState")
      set(value) {
        _builder.setNotificationsState(value)
      }
    /**
     * <code>optional .ClientNotificationsState notifications_state = 7;</code>
     */
    public fun clearNotificationsState() {
      _builder.clearNotificationsState()
    }
    /**
     * <code>optional .ClientNotificationsState notifications_state = 7;</code>
     * @return Whether the notificationsState field is set.
     */
    public fun hasNotificationsState(): kotlin.Boolean {
      return _builder.hasNotificationsState()
    }
    public val PingEventKt.Dsl.notificationsStateOrNull: org.matrix.dma.gchat.proto.ClientNotificationsState?
      get() = _builder.notificationsStateOrNull

    /**
     * <code>optional bool pwa_dedupe_enabled = 8;</code>
     */
    public var pwaDedupeEnabled: kotlin.Boolean
      @JvmName("getPwaDedupeEnabled")
      get() = _builder.getPwaDedupeEnabled()
      @JvmName("setPwaDedupeEnabled")
      set(value) {
        _builder.setPwaDedupeEnabled(value)
      }
    /**
     * <code>optional bool pwa_dedupe_enabled = 8;</code>
     */
    public fun clearPwaDedupeEnabled() {
      _builder.clearPwaDedupeEnabled()
    }
    /**
     * <code>optional bool pwa_dedupe_enabled = 8;</code>
     * @return Whether the pwaDedupeEnabled field is set.
     */
    public fun hasPwaDedupeEnabled(): kotlin.Boolean {
      return _builder.hasPwaDedupeEnabled()
    }

    /**
     * <code>optional .PingEvent.DeviceActiveState device_active_state = 9;</code>
     */
    public var deviceActiveState: org.matrix.dma.gchat.proto.PingEvent.DeviceActiveState
      @JvmName("getDeviceActiveState")
      get() = _builder.getDeviceActiveState()
      @JvmName("setDeviceActiveState")
      set(value) {
        _builder.setDeviceActiveState(value)
      }
    /**
     * <code>optional .PingEvent.DeviceActiveState device_active_state = 9;</code>
     */
    public fun clearDeviceActiveState() {
      _builder.clearDeviceActiveState()
    }
    /**
     * <code>optional .PingEvent.DeviceActiveState device_active_state = 9;</code>
     * @return Whether the deviceActiveState field is set.
     */
    public fun hasDeviceActiveState(): kotlin.Boolean {
      return _builder.hasDeviceActiveState()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.PingEvent.copy(block: org.matrix.dma.gchat.proto.PingEventKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.PingEvent =
  org.matrix.dma.gchat.proto.PingEventKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.PingEventOrBuilder.notificationsStateOrNull: org.matrix.dma.gchat.proto.ClientNotificationsState?
  get() = if (hasNotificationsState()) getNotificationsState() else null

