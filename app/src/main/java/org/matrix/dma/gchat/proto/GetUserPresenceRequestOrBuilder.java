// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

public interface GetUserPresenceRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:GetUserPresenceRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional .RequestHeader request_header = 100;</code>
   * @return Whether the requestHeader field is set.
   */
  boolean hasRequestHeader();
  /**
   * <code>optional .RequestHeader request_header = 100;</code>
   * @return The requestHeader.
   */
  org.matrix.dma.gchat.proto.RequestHeader getRequestHeader();
  /**
   * <code>optional .RequestHeader request_header = 100;</code>
   */
  org.matrix.dma.gchat.proto.RequestHeaderOrBuilder getRequestHeaderOrBuilder();

  /**
   * <code>repeated .UserId user_ids = 1;</code>
   */
  java.util.List<org.matrix.dma.gchat.proto.UserId> 
      getUserIdsList();
  /**
   * <code>repeated .UserId user_ids = 1;</code>
   */
  org.matrix.dma.gchat.proto.UserId getUserIds(int index);
  /**
   * <code>repeated .UserId user_ids = 1;</code>
   */
  int getUserIdsCount();
  /**
   * <code>repeated .UserId user_ids = 1;</code>
   */
  java.util.List<? extends org.matrix.dma.gchat.proto.UserIdOrBuilder> 
      getUserIdsOrBuilderList();
  /**
   * <code>repeated .UserId user_ids = 1;</code>
   */
  org.matrix.dma.gchat.proto.UserIdOrBuilder getUserIdsOrBuilder(
      int index);

  /**
   * <code>optional bool include_active_until = 2;</code>
   * @return Whether the includeActiveUntil field is set.
   */
  boolean hasIncludeActiveUntil();
  /**
   * <code>optional bool include_active_until = 2;</code>
   * @return The includeActiveUntil.
   */
  boolean getIncludeActiveUntil();

  /**
   * <code>optional bool include_user_status = 3;</code>
   * @return Whether the includeUserStatus field is set.
   */
  boolean hasIncludeUserStatus();
  /**
   * <code>optional bool include_user_status = 3;</code>
   * @return The includeUserStatus.
   */
  boolean getIncludeUserStatus();
}
