//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializeuserMentionMetadata")
public inline fun userMentionMetadata(block: org.matrix.dma.gchat.proto.UserMentionMetadataKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.UserMentionMetadata =
  org.matrix.dma.gchat.proto.UserMentionMetadataKt.Dsl._create(org.matrix.dma.gchat.proto.UserMentionMetadata.newBuilder()).apply { block() }._build()
public object UserMentionMetadataKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.UserMentionMetadata.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.UserMentionMetadata.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.UserMentionMetadata = _builder.build()

    /**
     * <code>optional .UserId id = 1;</code>
     */
    public var id: org.matrix.dma.gchat.proto.UserId
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <code>optional .UserId id = 1;</code>
     */
    public fun clearId() {
      _builder.clearId()
    }
    /**
     * <code>optional .UserId id = 1;</code>
     * @return Whether the id field is set.
     */
    public fun hasId(): kotlin.Boolean {
      return _builder.hasId()
    }
    public val UserMentionMetadataKt.Dsl.idOrNull: org.matrix.dma.gchat.proto.UserId?
      get() = _builder.idOrNull

    /**
     * <code>optional .InviteeInfo invitee_info = 3;</code>
     */
    public var inviteeInfo: org.matrix.dma.gchat.proto.InviteeInfo
      @JvmName("getInviteeInfo")
      get() = _builder.getInviteeInfo()
      @JvmName("setInviteeInfo")
      set(value) {
        _builder.setInviteeInfo(value)
      }
    /**
     * <code>optional .InviteeInfo invitee_info = 3;</code>
     */
    public fun clearInviteeInfo() {
      _builder.clearInviteeInfo()
    }
    /**
     * <code>optional .InviteeInfo invitee_info = 3;</code>
     * @return Whether the inviteeInfo field is set.
     */
    public fun hasInviteeInfo(): kotlin.Boolean {
      return _builder.hasInviteeInfo()
    }
    public val UserMentionMetadataKt.Dsl.inviteeInfoOrNull: org.matrix.dma.gchat.proto.InviteeInfo?
      get() = _builder.inviteeInfoOrNull

    /**
     * <code>optional .UserMentionMetadata.Type type = 2;</code>
     */
    public var type: org.matrix.dma.gchat.proto.UserMentionMetadata.Type
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * <code>optional .UserMentionMetadata.Type type = 2;</code>
     */
    public fun clearType() {
      _builder.clearType()
    }
    /**
     * <code>optional .UserMentionMetadata.Type type = 2;</code>
     * @return Whether the type field is set.
     */
    public fun hasType(): kotlin.Boolean {
      return _builder.hasType()
    }

    /**
     * <code>optional string display_name = 4;</code>
     */
    public var displayName: kotlin.String
      @JvmName("getDisplayName")
      get() = _builder.getDisplayName()
      @JvmName("setDisplayName")
      set(value) {
        _builder.setDisplayName(value)
      }
    /**
     * <code>optional string display_name = 4;</code>
     */
    public fun clearDisplayName() {
      _builder.clearDisplayName()
    }
    /**
     * <code>optional string display_name = 4;</code>
     * @return Whether the displayName field is set.
     */
    public fun hasDisplayName(): kotlin.Boolean {
      return _builder.hasDisplayName()
    }

    /**
     * <code>optional string gender = 5;</code>
     */
    public var gender: kotlin.String
      @JvmName("getGender")
      get() = _builder.getGender()
      @JvmName("setGender")
      set(value) {
        _builder.setGender(value)
      }
    /**
     * <code>optional string gender = 5;</code>
     */
    public fun clearGender() {
      _builder.clearGender()
    }
    /**
     * <code>optional string gender = 5;</code>
     * @return Whether the gender field is set.
     */
    public fun hasGender(): kotlin.Boolean {
      return _builder.hasGender()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.UserMentionMetadata.copy(block: org.matrix.dma.gchat.proto.UserMentionMetadataKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.UserMentionMetadata =
  org.matrix.dma.gchat.proto.UserMentionMetadataKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.UserMentionMetadataOrBuilder.idOrNull: org.matrix.dma.gchat.proto.UserId?
  get() = if (hasId()) getId() else null

public val org.matrix.dma.gchat.proto.UserMentionMetadataOrBuilder.inviteeInfoOrNull: org.matrix.dma.gchat.proto.InviteeInfo?
  get() = if (hasInviteeInfo()) getInviteeInfo() else null

