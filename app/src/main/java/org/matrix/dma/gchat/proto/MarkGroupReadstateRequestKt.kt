//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializemarkGroupReadstateRequest")
public inline fun markGroupReadstateRequest(block: org.matrix.dma.gchat.proto.MarkGroupReadstateRequestKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.MarkGroupReadstateRequest =
  org.matrix.dma.gchat.proto.MarkGroupReadstateRequestKt.Dsl._create(org.matrix.dma.gchat.proto.MarkGroupReadstateRequest.newBuilder()).apply { block() }._build()
public object MarkGroupReadstateRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.MarkGroupReadstateRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.MarkGroupReadstateRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.MarkGroupReadstateRequest = _builder.build()

    /**
     * <code>optional .RequestHeader request_header = 100;</code>
     */
    public var requestHeader: org.matrix.dma.gchat.proto.RequestHeader
      @JvmName("getRequestHeader")
      get() = _builder.getRequestHeader()
      @JvmName("setRequestHeader")
      set(value) {
        _builder.setRequestHeader(value)
      }
    /**
     * <code>optional .RequestHeader request_header = 100;</code>
     */
    public fun clearRequestHeader() {
      _builder.clearRequestHeader()
    }
    /**
     * <code>optional .RequestHeader request_header = 100;</code>
     * @return Whether the requestHeader field is set.
     */
    public fun hasRequestHeader(): kotlin.Boolean {
      return _builder.hasRequestHeader()
    }
    public val MarkGroupReadstateRequestKt.Dsl.requestHeaderOrNull: org.matrix.dma.gchat.proto.RequestHeader?
      get() = _builder.requestHeaderOrNull

    /**
     * <code>optional .GroupId id = 1;</code>
     */
    public var id: org.matrix.dma.gchat.proto.GroupId
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <code>optional .GroupId id = 1;</code>
     */
    public fun clearId() {
      _builder.clearId()
    }
    /**
     * <code>optional .GroupId id = 1;</code>
     * @return Whether the id field is set.
     */
    public fun hasId(): kotlin.Boolean {
      return _builder.hasId()
    }
    public val MarkGroupReadstateRequestKt.Dsl.idOrNull: org.matrix.dma.gchat.proto.GroupId?
      get() = _builder.idOrNull

    /**
     * <code>optional int64 last_read_time = 2;</code>
     */
    public var lastReadTime: kotlin.Long
      @JvmName("getLastReadTime")
      get() = _builder.getLastReadTime()
      @JvmName("setLastReadTime")
      set(value) {
        _builder.setLastReadTime(value)
      }
    /**
     * <code>optional int64 last_read_time = 2;</code>
     */
    public fun clearLastReadTime() {
      _builder.clearLastReadTime()
    }
    /**
     * <code>optional int64 last_read_time = 2;</code>
     * @return Whether the lastReadTime field is set.
     */
    public fun hasLastReadTime(): kotlin.Boolean {
      return _builder.hasLastReadTime()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.MarkGroupReadstateRequest.copy(block: org.matrix.dma.gchat.proto.MarkGroupReadstateRequestKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.MarkGroupReadstateRequest =
  org.matrix.dma.gchat.proto.MarkGroupReadstateRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.MarkGroupReadstateRequestOrBuilder.requestHeaderOrNull: org.matrix.dma.gchat.proto.RequestHeader?
  get() = if (hasRequestHeader()) getRequestHeader() else null

public val org.matrix.dma.gchat.proto.MarkGroupReadstateRequestOrBuilder.idOrNull: org.matrix.dma.gchat.proto.GroupId?
  get() = if (hasId()) getId() else null

