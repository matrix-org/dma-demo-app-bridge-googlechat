//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializeiosLocalNotification")
public inline fun iosLocalNotification(block: org.matrix.dma.gchat.proto.IosLocalNotificationKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.IosLocalNotification =
  org.matrix.dma.gchat.proto.IosLocalNotificationKt.Dsl._create(org.matrix.dma.gchat.proto.IosLocalNotification.newBuilder()).apply { block() }._build()
public object IosLocalNotificationKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.IosLocalNotification.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.IosLocalNotification.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.IosLocalNotification = _builder.build()

    /**
     * <code>optional string apns_collapse_id = 1;</code>
     */
    public var apnsCollapseId: kotlin.String
      @JvmName("getApnsCollapseId")
      get() = _builder.getApnsCollapseId()
      @JvmName("setApnsCollapseId")
      set(value) {
        _builder.setApnsCollapseId(value)
      }
    /**
     * <code>optional string apns_collapse_id = 1;</code>
     */
    public fun clearApnsCollapseId() {
      _builder.clearApnsCollapseId()
    }
    /**
     * <code>optional string apns_collapse_id = 1;</code>
     * @return Whether the apnsCollapseId field is set.
     */
    public fun hasApnsCollapseId(): kotlin.Boolean {
      return _builder.hasApnsCollapseId()
    }

    /**
     * <code>optional string thread_id = 2;</code>
     */
    public var threadId: kotlin.String
      @JvmName("getThreadId")
      get() = _builder.getThreadId()
      @JvmName("setThreadId")
      set(value) {
        _builder.setThreadId(value)
      }
    /**
     * <code>optional string thread_id = 2;</code>
     */
    public fun clearThreadId() {
      _builder.clearThreadId()
    }
    /**
     * <code>optional string thread_id = 2;</code>
     * @return Whether the threadId field is set.
     */
    public fun hasThreadId(): kotlin.Boolean {
      return _builder.hasThreadId()
    }

    /**
     * <code>optional string title = 3;</code>
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * <code>optional string title = 3;</code>
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }
    /**
     * <code>optional string title = 3;</code>
     * @return Whether the title field is set.
     */
    public fun hasTitle(): kotlin.Boolean {
      return _builder.hasTitle()
    }

    /**
     * <code>optional string body = 4;</code>
     */
    public var body: kotlin.String
      @JvmName("getBody")
      get() = _builder.getBody()
      @JvmName("setBody")
      set(value) {
        _builder.setBody(value)
      }
    /**
     * <code>optional string body = 4;</code>
     */
    public fun clearBody() {
      _builder.clearBody()
    }
    /**
     * <code>optional string body = 4;</code>
     * @return Whether the body field is set.
     */
    public fun hasBody(): kotlin.Boolean {
      return _builder.hasBody()
    }

    /**
     * <code>optional string category = 5;</code>
     */
    public var category: kotlin.String
      @JvmName("getCategory")
      get() = _builder.getCategory()
      @JvmName("setCategory")
      set(value) {
        _builder.setCategory(value)
      }
    /**
     * <code>optional string category = 5;</code>
     */
    public fun clearCategory() {
      _builder.clearCategory()
    }
    /**
     * <code>optional string category = 5;</code>
     * @return Whether the category field is set.
     */
    public fun hasCategory(): kotlin.Boolean {
      return _builder.hasCategory()
    }

    /**
     * <code>optional bool group_is_flat = 6;</code>
     */
    public var groupIsFlat: kotlin.Boolean
      @JvmName("getGroupIsFlat")
      get() = _builder.getGroupIsFlat()
      @JvmName("setGroupIsFlat")
      set(value) {
        _builder.setGroupIsFlat(value)
      }
    /**
     * <code>optional bool group_is_flat = 6;</code>
     */
    public fun clearGroupIsFlat() {
      _builder.clearGroupIsFlat()
    }
    /**
     * <code>optional bool group_is_flat = 6;</code>
     * @return Whether the groupIsFlat field is set.
     */
    public fun hasGroupIsFlat(): kotlin.Boolean {
      return _builder.hasGroupIsFlat()
    }

    /**
     * <code>optional bool message_is_off_the_record = 7;</code>
     */
    public var messageIsOffTheRecord: kotlin.Boolean
      @JvmName("getMessageIsOffTheRecord")
      get() = _builder.getMessageIsOffTheRecord()
      @JvmName("setMessageIsOffTheRecord")
      set(value) {
        _builder.setMessageIsOffTheRecord(value)
      }
    /**
     * <code>optional bool message_is_off_the_record = 7;</code>
     */
    public fun clearMessageIsOffTheRecord() {
      _builder.clearMessageIsOffTheRecord()
    }
    /**
     * <code>optional bool message_is_off_the_record = 7;</code>
     * @return Whether the messageIsOffTheRecord field is set.
     */
    public fun hasMessageIsOffTheRecord(): kotlin.Boolean {
      return _builder.hasMessageIsOffTheRecord()
    }

    /**
     * <code>optional .SharedAttributeCheckerGroupType attribute_checker_group_type = 9;</code>
     */
    public var attributeCheckerGroupType: org.matrix.dma.gchat.proto.SharedAttributeCheckerGroupType
      @JvmName("getAttributeCheckerGroupType")
      get() = _builder.getAttributeCheckerGroupType()
      @JvmName("setAttributeCheckerGroupType")
      set(value) {
        _builder.setAttributeCheckerGroupType(value)
      }
    /**
     * <code>optional .SharedAttributeCheckerGroupType attribute_checker_group_type = 9;</code>
     */
    public fun clearAttributeCheckerGroupType() {
      _builder.clearAttributeCheckerGroupType()
    }
    /**
     * <code>optional .SharedAttributeCheckerGroupType attribute_checker_group_type = 9;</code>
     * @return Whether the attributeCheckerGroupType field is set.
     */
    public fun hasAttributeCheckerGroupType(): kotlin.Boolean {
      return _builder.hasAttributeCheckerGroupType()
    }

    /**
     * <code>optional string navigation = 8;</code>
     */
    public var navigation: kotlin.String
      @JvmName("getNavigation")
      get() = _builder.getNavigation()
      @JvmName("setNavigation")
      set(value) {
        _builder.setNavigation(value)
      }
    /**
     * <code>optional string navigation = 8;</code>
     */
    public fun clearNavigation() {
      _builder.clearNavigation()
    }
    /**
     * <code>optional string navigation = 8;</code>
     * @return Whether the navigation field is set.
     */
    public fun hasNavigation(): kotlin.Boolean {
      return _builder.hasNavigation()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.IosLocalNotification.copy(block: org.matrix.dma.gchat.proto.IosLocalNotificationKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.IosLocalNotification =
  org.matrix.dma.gchat.proto.IosLocalNotificationKt.Dsl._create(this.toBuilder()).apply { block() }._build()

