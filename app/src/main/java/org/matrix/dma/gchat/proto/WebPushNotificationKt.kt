//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializewebPushNotification")
public inline fun webPushNotification(block: org.matrix.dma.gchat.proto.WebPushNotificationKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.WebPushNotification =
  org.matrix.dma.gchat.proto.WebPushNotificationKt.Dsl._create(org.matrix.dma.gchat.proto.WebPushNotification.newBuilder()).apply { block() }._build()
public object WebPushNotificationKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.WebPushNotification.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.WebPushNotification.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.WebPushNotification = _builder.build()

    /**
     * <code>optional .Message message = 1;</code>
     */
    public var message: org.matrix.dma.gchat.proto.Message
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * <code>optional .Message message = 1;</code>
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }
    /**
     * <code>optional .Message message = 1;</code>
     * @return Whether the message field is set.
     */
    public fun hasMessage(): kotlin.Boolean {
      return _builder.hasMessage()
    }
    public val WebPushNotificationKt.Dsl.messageOrNull: org.matrix.dma.gchat.proto.Message?
      get() = _builder.messageOrNull

    /**
     * <code>optional string sender_name = 2;</code>
     */
    public var senderName: kotlin.String
      @JvmName("getSenderName")
      get() = _builder.getSenderName()
      @JvmName("setSenderName")
      set(value) {
        _builder.setSenderName(value)
      }
    /**
     * <code>optional string sender_name = 2;</code>
     */
    public fun clearSenderName() {
      _builder.clearSenderName()
    }
    /**
     * <code>optional string sender_name = 2;</code>
     * @return Whether the senderName field is set.
     */
    public fun hasSenderName(): kotlin.Boolean {
      return _builder.hasSenderName()
    }

    /**
     * <code>optional string sender_avatar_url = 3;</code>
     */
    public var senderAvatarUrl: kotlin.String
      @JvmName("getSenderAvatarUrl")
      get() = _builder.getSenderAvatarUrl()
      @JvmName("setSenderAvatarUrl")
      set(value) {
        _builder.setSenderAvatarUrl(value)
      }
    /**
     * <code>optional string sender_avatar_url = 3;</code>
     */
    public fun clearSenderAvatarUrl() {
      _builder.clearSenderAvatarUrl()
    }
    /**
     * <code>optional string sender_avatar_url = 3;</code>
     * @return Whether the senderAvatarUrl field is set.
     */
    public fun hasSenderAvatarUrl(): kotlin.Boolean {
      return _builder.hasSenderAvatarUrl()
    }

    /**
     * <code>optional string group_name = 4;</code>
     */
    public var groupName: kotlin.String
      @JvmName("getGroupName")
      get() = _builder.getGroupName()
      @JvmName("setGroupName")
      set(value) {
        _builder.setGroupName(value)
      }
    /**
     * <code>optional string group_name = 4;</code>
     */
    public fun clearGroupName() {
      _builder.clearGroupName()
    }
    /**
     * <code>optional string group_name = 4;</code>
     * @return Whether the groupName field is set.
     */
    public fun hasGroupName(): kotlin.Boolean {
      return _builder.hasGroupName()
    }

    /**
     * <code>optional .NotificationCause cause = 5;</code>
     */
    public var cause: org.matrix.dma.gchat.proto.NotificationCause
      @JvmName("getCause")
      get() = _builder.getCause()
      @JvmName("setCause")
      set(value) {
        _builder.setCause(value)
      }
    /**
     * <code>optional .NotificationCause cause = 5;</code>
     */
    public fun clearCause() {
      _builder.clearCause()
    }
    /**
     * <code>optional .NotificationCause cause = 5;</code>
     * @return Whether the cause field is set.
     */
    public fun hasCause(): kotlin.Boolean {
      return _builder.hasCause()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.WebPushNotification.copy(block: org.matrix.dma.gchat.proto.WebPushNotificationKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.WebPushNotification =
  org.matrix.dma.gchat.proto.WebPushNotificationKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.WebPushNotificationOrBuilder.messageOrNull: org.matrix.dma.gchat.proto.Message?
  get() = if (hasMessage()) getMessage() else null

