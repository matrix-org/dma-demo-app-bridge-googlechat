//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializedndSettings")
public inline fun dndSettings(block: org.matrix.dma.gchat.proto.DndSettingsKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.DndSettings =
  org.matrix.dma.gchat.proto.DndSettingsKt.Dsl._create(org.matrix.dma.gchat.proto.DndSettings.newBuilder()).apply { block() }._build()
public object DndSettingsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.DndSettings.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.DndSettings.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.DndSettings = _builder.build()

    /**
     * <code>optional .DndSettings.DndState_State dnd_state = 1;</code>
     */
    public var dndState: org.matrix.dma.gchat.proto.DndSettings.DndState_State
      @JvmName("getDndState")
      get() = _builder.getDndState()
      @JvmName("setDndState")
      set(value) {
        _builder.setDndState(value)
      }
    /**
     * <code>optional .DndSettings.DndState_State dnd_state = 1;</code>
     */
    public fun clearDndState() {
      _builder.clearDndState()
    }
    /**
     * <code>optional .DndSettings.DndState_State dnd_state = 1;</code>
     * @return Whether the dndState field is set.
     */
    public fun hasDndState(): kotlin.Boolean {
      return _builder.hasDndState()
    }

    /**
     * <code>optional int64 dnd_expiry_time_usec = 2;</code>
     */
    public var dndExpiryTimeUsec: kotlin.Long
      @JvmName("getDndExpiryTimeUsec")
      get() = _builder.getDndExpiryTimeUsec()
      @JvmName("setDndExpiryTimeUsec")
      set(value) {
        _builder.setDndExpiryTimeUsec(value)
      }
    /**
     * <code>optional int64 dnd_expiry_time_usec = 2;</code>
     */
    public fun clearDndExpiryTimeUsec() {
      _builder.clearDndExpiryTimeUsec()
    }
    /**
     * <code>optional int64 dnd_expiry_time_usec = 2;</code>
     * @return Whether the dndExpiryTimeUsec field is set.
     */
    public fun hasDndExpiryTimeUsec(): kotlin.Boolean {
      return _builder.hasDndExpiryTimeUsec()
    }

    /**
     * <code>optional int64 state_remaining_duration_usec = 3;</code>
     */
    public var stateRemainingDurationUsec: kotlin.Long
      @JvmName("getStateRemainingDurationUsec")
      get() = _builder.getStateRemainingDurationUsec()
      @JvmName("setStateRemainingDurationUsec")
      set(value) {
        _builder.setStateRemainingDurationUsec(value)
      }
    /**
     * <code>optional int64 state_remaining_duration_usec = 3;</code>
     */
    public fun clearStateRemainingDurationUsec() {
      _builder.clearStateRemainingDurationUsec()
    }
    /**
     * <code>optional int64 state_remaining_duration_usec = 3;</code>
     * @return Whether the stateRemainingDurationUsec field is set.
     */
    public fun hasStateRemainingDurationUsec(): kotlin.Boolean {
      return _builder.hasStateRemainingDurationUsec()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.DndSettings.copy(block: org.matrix.dma.gchat.proto.DndSettingsKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.DndSettings =
  org.matrix.dma.gchat.proto.DndSettingsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

