//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializestreamEventsResponse")
public inline fun streamEventsResponse(block: org.matrix.dma.gchat.proto.StreamEventsResponseKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.StreamEventsResponse =
  org.matrix.dma.gchat.proto.StreamEventsResponseKt.Dsl._create(org.matrix.dma.gchat.proto.StreamEventsResponse.newBuilder()).apply { block() }._build()
public object StreamEventsResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.StreamEventsResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.StreamEventsResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.StreamEventsResponse = _builder.build()

    /**
     * <code>optional .Event event = 1;</code>
     */
    public var event: org.matrix.dma.gchat.proto.Event
      @JvmName("getEvent")
      get() = _builder.getEvent()
      @JvmName("setEvent")
      set(value) {
        _builder.setEvent(value)
      }
    /**
     * <code>optional .Event event = 1;</code>
     */
    public fun clearEvent() {
      _builder.clearEvent()
    }
    /**
     * <code>optional .Event event = 1;</code>
     * @return Whether the event field is set.
     */
    public fun hasEvent(): kotlin.Boolean {
      return _builder.hasEvent()
    }
    public val StreamEventsResponseKt.Dsl.eventOrNull: org.matrix.dma.gchat.proto.Event?
      get() = _builder.eventOrNull

    /**
     * <code>optional string sample_id = 2;</code>
     */
    public var sampleId: kotlin.String
      @JvmName("getSampleId")
      get() = _builder.getSampleId()
      @JvmName("setSampleId")
      set(value) {
        _builder.setSampleId(value)
      }
    /**
     * <code>optional string sample_id = 2;</code>
     */
    public fun clearSampleId() {
      _builder.clearSampleId()
    }
    /**
     * <code>optional string sample_id = 2;</code>
     * @return Whether the sampleId field is set.
     */
    public fun hasSampleId(): kotlin.Boolean {
      return _builder.hasSampleId()
    }

    /**
     * <code>optional .ClockSyncResponse clock_sync_response = 3;</code>
     */
    public var clockSyncResponse: org.matrix.dma.gchat.proto.ClockSyncResponse
      @JvmName("getClockSyncResponse")
      get() = _builder.getClockSyncResponse()
      @JvmName("setClockSyncResponse")
      set(value) {
        _builder.setClockSyncResponse(value)
      }
    /**
     * <code>optional .ClockSyncResponse clock_sync_response = 3;</code>
     */
    public fun clearClockSyncResponse() {
      _builder.clearClockSyncResponse()
    }
    /**
     * <code>optional .ClockSyncResponse clock_sync_response = 3;</code>
     * @return Whether the clockSyncResponse field is set.
     */
    public fun hasClockSyncResponse(): kotlin.Boolean {
      return _builder.hasClockSyncResponse()
    }
    public val StreamEventsResponseKt.Dsl.clockSyncResponseOrNull: org.matrix.dma.gchat.proto.ClockSyncResponse?
      get() = _builder.clockSyncResponseOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.StreamEventsResponse.copy(block: org.matrix.dma.gchat.proto.StreamEventsResponseKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.StreamEventsResponse =
  org.matrix.dma.gchat.proto.StreamEventsResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.StreamEventsResponseOrBuilder.eventOrNull: org.matrix.dma.gchat.proto.Event?
  get() = if (hasEvent()) getEvent() else null

public val org.matrix.dma.gchat.proto.StreamEventsResponseOrBuilder.clockSyncResponseOrNull: org.matrix.dma.gchat.proto.ClockSyncResponse?
  get() = if (hasClockSyncResponse()) getClockSyncResponse() else null

