//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializegroupReadState")
public inline fun groupReadState(block: org.matrix.dma.gchat.proto.GroupReadStateKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.GroupReadState =
  org.matrix.dma.gchat.proto.GroupReadStateKt.Dsl._create(org.matrix.dma.gchat.proto.GroupReadState.newBuilder()).apply { block() }._build()
public object GroupReadStateKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.GroupReadState.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.GroupReadState.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.GroupReadState = _builder.build()

    /**
     * <code>optional .GroupReadStateId id = 1;</code>
     */
    public var id: org.matrix.dma.gchat.proto.GroupReadStateId
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <code>optional .GroupReadStateId id = 1;</code>
     */
    public fun clearId() {
      _builder.clearId()
    }
    /**
     * <code>optional .GroupReadStateId id = 1;</code>
     * @return Whether the id field is set.
     */
    public fun hasId(): kotlin.Boolean {
      return _builder.hasId()
    }
    public val GroupReadStateKt.Dsl.idOrNull: org.matrix.dma.gchat.proto.GroupReadStateId?
      get() = _builder.idOrNull

    /**
     * <code>optional int64 last_read_time = 2;</code>
     */
    public var lastReadTime: kotlin.Long
      @JvmName("getLastReadTime")
      get() = _builder.getLastReadTime()
      @JvmName("setLastReadTime")
      set(value) {
        _builder.setLastReadTime(value)
      }
    /**
     * <code>optional int64 last_read_time = 2;</code>
     */
    public fun clearLastReadTime() {
      _builder.clearLastReadTime()
    }
    /**
     * <code>optional int64 last_read_time = 2;</code>
     * @return Whether the lastReadTime field is set.
     */
    public fun hasLastReadTime(): kotlin.Boolean {
      return _builder.hasLastReadTime()
    }

    /**
     * <code>optional int64 unread_message_count = 4;</code>
     */
    public var unreadMessageCount: kotlin.Long
      @JvmName("getUnreadMessageCount")
      get() = _builder.getUnreadMessageCount()
      @JvmName("setUnreadMessageCount")
      set(value) {
        _builder.setUnreadMessageCount(value)
      }
    /**
     * <code>optional int64 unread_message_count = 4;</code>
     */
    public fun clearUnreadMessageCount() {
      _builder.clearUnreadMessageCount()
    }
    /**
     * <code>optional int64 unread_message_count = 4;</code>
     * @return Whether the unreadMessageCount field is set.
     */
    public fun hasUnreadMessageCount(): kotlin.Boolean {
      return _builder.hasUnreadMessageCount()
    }

    /**
     * <code>optional bool starred = 5;</code>
     */
    public var starred: kotlin.Boolean
      @JvmName("getStarred")
      get() = _builder.getStarred()
      @JvmName("setStarred")
      set(value) {
        _builder.setStarred(value)
      }
    /**
     * <code>optional bool starred = 5;</code>
     */
    public fun clearStarred() {
      _builder.clearStarred()
    }
    /**
     * <code>optional bool starred = 5;</code>
     * @return Whether the starred field is set.
     */
    public fun hasStarred(): kotlin.Boolean {
      return _builder.hasStarred()
    }

    /**
     * <code>optional int64 update_timestamp = 6;</code>
     */
    public var updateTimestamp: kotlin.Long
      @JvmName("getUpdateTimestamp")
      get() = _builder.getUpdateTimestamp()
      @JvmName("setUpdateTimestamp")
      set(value) {
        _builder.setUpdateTimestamp(value)
      }
    /**
     * <code>optional int64 update_timestamp = 6;</code>
     */
    public fun clearUpdateTimestamp() {
      _builder.clearUpdateTimestamp()
    }
    /**
     * <code>optional int64 update_timestamp = 6;</code>
     * @return Whether the updateTimestamp field is set.
     */
    public fun hasUpdateTimestamp(): kotlin.Boolean {
      return _builder.hasUpdateTimestamp()
    }

    /**
     * <code>optional int64 unread_subscribed_topic_count = 7;</code>
     */
    public var unreadSubscribedTopicCount: kotlin.Long
      @JvmName("getUnreadSubscribedTopicCount")
      get() = _builder.getUnreadSubscribedTopicCount()
      @JvmName("setUnreadSubscribedTopicCount")
      set(value) {
        _builder.setUnreadSubscribedTopicCount(value)
      }
    /**
     * <code>optional int64 unread_subscribed_topic_count = 7;</code>
     */
    public fun clearUnreadSubscribedTopicCount() {
      _builder.clearUnreadSubscribedTopicCount()
    }
    /**
     * <code>optional int64 unread_subscribed_topic_count = 7;</code>
     * @return Whether the unreadSubscribedTopicCount field is set.
     */
    public fun hasUnreadSubscribedTopicCount(): kotlin.Boolean {
      return _builder.hasUnreadSubscribedTopicCount()
    }

    /**
     * <code>optional int64 unread_subscribed_topic_count_consistency_timestamp = 11;</code>
     */
    public var unreadSubscribedTopicCountConsistencyTimestamp: kotlin.Long
      @JvmName("getUnreadSubscribedTopicCountConsistencyTimestamp")
      get() = _builder.getUnreadSubscribedTopicCountConsistencyTimestamp()
      @JvmName("setUnreadSubscribedTopicCountConsistencyTimestamp")
      set(value) {
        _builder.setUnreadSubscribedTopicCountConsistencyTimestamp(value)
      }
    /**
     * <code>optional int64 unread_subscribed_topic_count_consistency_timestamp = 11;</code>
     */
    public fun clearUnreadSubscribedTopicCountConsistencyTimestamp() {
      _builder.clearUnreadSubscribedTopicCountConsistencyTimestamp()
    }
    /**
     * <code>optional int64 unread_subscribed_topic_count_consistency_timestamp = 11;</code>
     * @return Whether the unreadSubscribedTopicCountConsistencyTimestamp field is set.
     */
    public fun hasUnreadSubscribedTopicCountConsistencyTimestamp(): kotlin.Boolean {
      return _builder.hasUnreadSubscribedTopicCountConsistencyTimestamp()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class UnreadSubscribedTopicsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .TopicId unread_subscribed_topics = 8;</code>
     */
     public val unreadSubscribedTopics: com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.TopicId, UnreadSubscribedTopicsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getUnreadSubscribedTopicsList()
      )
    /**
     * <code>repeated .TopicId unread_subscribed_topics = 8;</code>
     * @param value The unreadSubscribedTopics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addUnreadSubscribedTopics")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.TopicId, UnreadSubscribedTopicsProxy>.add(value: org.matrix.dma.gchat.proto.TopicId) {
      _builder.addUnreadSubscribedTopics(value)
    }
    /**
     * <code>repeated .TopicId unread_subscribed_topics = 8;</code>
     * @param value The unreadSubscribedTopics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignUnreadSubscribedTopics")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.TopicId, UnreadSubscribedTopicsProxy>.plusAssign(value: org.matrix.dma.gchat.proto.TopicId) {
      add(value)
    }
    /**
     * <code>repeated .TopicId unread_subscribed_topics = 8;</code>
     * @param values The unreadSubscribedTopics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllUnreadSubscribedTopics")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.TopicId, UnreadSubscribedTopicsProxy>.addAll(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.TopicId>) {
      _builder.addAllUnreadSubscribedTopics(values)
    }
    /**
     * <code>repeated .TopicId unread_subscribed_topics = 8;</code>
     * @param values The unreadSubscribedTopics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllUnreadSubscribedTopics")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.TopicId, UnreadSubscribedTopicsProxy>.plusAssign(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.TopicId>) {
      addAll(values)
    }
    /**
     * <code>repeated .TopicId unread_subscribed_topics = 8;</code>
     * @param index The index to set the value at.
     * @param value The unreadSubscribedTopics to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setUnreadSubscribedTopics")
    public operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.TopicId, UnreadSubscribedTopicsProxy>.set(index: kotlin.Int, value: org.matrix.dma.gchat.proto.TopicId) {
      _builder.setUnreadSubscribedTopics(index, value)
    }
    /**
     * <code>repeated .TopicId unread_subscribed_topics = 8;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearUnreadSubscribedTopics")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.TopicId, UnreadSubscribedTopicsProxy>.clear() {
      _builder.clearUnreadSubscribedTopics()
    }


    /**
     * <code>optional int64 hide_timestamp = 9;</code>
     */
    public var hideTimestamp: kotlin.Long
      @JvmName("getHideTimestamp")
      get() = _builder.getHideTimestamp()
      @JvmName("setHideTimestamp")
      set(value) {
        _builder.setHideTimestamp(value)
      }
    /**
     * <code>optional int64 hide_timestamp = 9;</code>
     */
    public fun clearHideTimestamp() {
      _builder.clearHideTimestamp()
    }
    /**
     * <code>optional int64 hide_timestamp = 9;</code>
     * @return Whether the hideTimestamp field is set.
     */
    public fun hasHideTimestamp(): kotlin.Boolean {
      return _builder.hasHideTimestamp()
    }

    /**
     * <code>optional int64 clear_history_timestamp = 14;</code>
     */
    public var clearHistoryTimestamp: kotlin.Long
      @JvmName("getClearHistoryTimestamp")
      get() = _builder.getClearHistoryTimestamp()
      @JvmName("setClearHistoryTimestamp")
      set(value) {
        _builder.setClearHistoryTimestamp(value)
      }
    /**
     * <code>optional int64 clear_history_timestamp = 14;</code>
     */
    public fun clearClearHistoryTimestamp() {
      _builder.clearClearHistoryTimestamp()
    }
    /**
     * <code>optional int64 clear_history_timestamp = 14;</code>
     * @return Whether the clearHistoryTimestamp field is set.
     */
    public fun hasClearHistoryTimestamp(): kotlin.Boolean {
      return _builder.hasClearHistoryTimestamp()
    }

    /**
     * <code>optional .InviteState invite_state = 10;</code>
     */
    public var inviteState: org.matrix.dma.gchat.proto.InviteState
      @JvmName("getInviteState")
      get() = _builder.getInviteState()
      @JvmName("setInviteState")
      set(value) {
        _builder.setInviteState(value)
      }
    /**
     * <code>optional .InviteState invite_state = 10;</code>
     */
    public fun clearInviteState() {
      _builder.clearInviteState()
    }
    /**
     * <code>optional .InviteState invite_state = 10;</code>
     * @return Whether the inviteState field is set.
     */
    public fun hasInviteState(): kotlin.Boolean {
      return _builder.hasInviteState()
    }
    public val GroupReadStateKt.Dsl.inviteStateOrNull: org.matrix.dma.gchat.proto.InviteState?
      get() = _builder.inviteStateOrNull

    /**
     * <code>optional .GroupNotificationSettings notification_settings = 12;</code>
     */
    public var notificationSettings: org.matrix.dma.gchat.proto.GroupNotificationSettings
      @JvmName("getNotificationSettings")
      get() = _builder.getNotificationSettings()
      @JvmName("setNotificationSettings")
      set(value) {
        _builder.setNotificationSettings(value)
      }
    /**
     * <code>optional .GroupNotificationSettings notification_settings = 12;</code>
     */
    public fun clearNotificationSettings() {
      _builder.clearNotificationSettings()
    }
    /**
     * <code>optional .GroupNotificationSettings notification_settings = 12;</code>
     * @return Whether the notificationSettings field is set.
     */
    public fun hasNotificationSettings(): kotlin.Boolean {
      return _builder.hasNotificationSettings()
    }
    public val GroupReadStateKt.Dsl.notificationSettingsOrNull: org.matrix.dma.gchat.proto.GroupNotificationSettings?
      get() = _builder.notificationSettingsOrNull

    /**
     * <code>optional .RetentionSettings retention_settings = 13;</code>
     */
    public var retentionSettings: org.matrix.dma.gchat.proto.RetentionSettings
      @JvmName("getRetentionSettings")
      get() = _builder.getRetentionSettings()
      @JvmName("setRetentionSettings")
      set(value) {
        _builder.setRetentionSettings(value)
      }
    /**
     * <code>optional .RetentionSettings retention_settings = 13;</code>
     */
    public fun clearRetentionSettings() {
      _builder.clearRetentionSettings()
    }
    /**
     * <code>optional .RetentionSettings retention_settings = 13;</code>
     * @return Whether the retentionSettings field is set.
     */
    public fun hasRetentionSettings(): kotlin.Boolean {
      return _builder.hasRetentionSettings()
    }
    public val GroupReadStateKt.Dsl.retentionSettingsOrNull: org.matrix.dma.gchat.proto.RetentionSettings?
      get() = _builder.retentionSettingsOrNull

    /**
     * <code>optional bool blocked = 15;</code>
     */
    public var blocked: kotlin.Boolean
      @JvmName("getBlocked")
      get() = _builder.getBlocked()
      @JvmName("setBlocked")
      set(value) {
        _builder.setBlocked(value)
      }
    /**
     * <code>optional bool blocked = 15;</code>
     */
    public fun clearBlocked() {
      _builder.clearBlocked()
    }
    /**
     * <code>optional bool blocked = 15;</code>
     * @return Whether the blocked field is set.
     */
    public fun hasBlocked(): kotlin.Boolean {
      return _builder.hasBlocked()
    }

    /**
     * <code>optional .MembershipRole membership_role = 22;</code>
     */
    public var membershipRole: org.matrix.dma.gchat.proto.MembershipRole
      @JvmName("getMembershipRole")
      get() = _builder.getMembershipRole()
      @JvmName("setMembershipRole")
      set(value) {
        _builder.setMembershipRole(value)
      }
    /**
     * <code>optional .MembershipRole membership_role = 22;</code>
     */
    public fun clearMembershipRole() {
      _builder.clearMembershipRole()
    }
    /**
     * <code>optional .MembershipRole membership_role = 22;</code>
     * @return Whether the membershipRole field is set.
     */
    public fun hasMembershipRole(): kotlin.Boolean {
      return _builder.hasMembershipRole()
    }

    /**
     * <code>optional .MembershipState membership_state = 16;</code>
     */
    public var membershipState: org.matrix.dma.gchat.proto.MembershipState
      @JvmName("getMembershipState")
      get() = _builder.getMembershipState()
      @JvmName("setMembershipState")
      set(value) {
        _builder.setMembershipState(value)
      }
    /**
     * <code>optional .MembershipState membership_state = 16;</code>
     */
    public fun clearMembershipState() {
      _builder.clearMembershipState()
    }
    /**
     * <code>optional .MembershipState membership_state = 16;</code>
     * @return Whether the membershipState field is set.
     */
    public fun hasMembershipState(): kotlin.Boolean {
      return _builder.hasMembershipState()
    }

    /**
     * <code>optional .InviteCategory invite_category = 17;</code>
     */
    public var inviteCategory: org.matrix.dma.gchat.proto.InviteCategory
      @JvmName("getInviteCategory")
      get() = _builder.getInviteCategory()
      @JvmName("setInviteCategory")
      set(value) {
        _builder.setInviteCategory(value)
      }
    /**
     * <code>optional .InviteCategory invite_category = 17;</code>
     */
    public fun clearInviteCategory() {
      _builder.clearInviteCategory()
    }
    /**
     * <code>optional .InviteCategory invite_category = 17;</code>
     * @return Whether the inviteCategory field is set.
     */
    public fun hasInviteCategory(): kotlin.Boolean {
      return _builder.hasInviteCategory()
    }

    /**
     * <code>optional int64 mark_as_unread_timestamp_usec = 18;</code>
     */
    public var markAsUnreadTimestampUsec: kotlin.Long
      @JvmName("getMarkAsUnreadTimestampUsec")
      get() = _builder.getMarkAsUnreadTimestampUsec()
      @JvmName("setMarkAsUnreadTimestampUsec")
      set(value) {
        _builder.setMarkAsUnreadTimestampUsec(value)
      }
    /**
     * <code>optional int64 mark_as_unread_timestamp_usec = 18;</code>
     */
    public fun clearMarkAsUnreadTimestampUsec() {
      _builder.clearMarkAsUnreadTimestampUsec()
    }
    /**
     * <code>optional int64 mark_as_unread_timestamp_usec = 18;</code>
     * @return Whether the markAsUnreadTimestampUsec field is set.
     */
    public fun hasMarkAsUnreadTimestampUsec(): kotlin.Boolean {
      return _builder.hasMarkAsUnreadTimestampUsec()
    }

    /**
     * <code>optional bool visible_in_world_view = 19;</code>
     */
    public var visibleInWorldView: kotlin.Boolean
      @JvmName("getVisibleInWorldView")
      get() = _builder.getVisibleInWorldView()
      @JvmName("setVisibleInWorldView")
      set(value) {
        _builder.setVisibleInWorldView(value)
      }
    /**
     * <code>optional bool visible_in_world_view = 19;</code>
     */
    public fun clearVisibleInWorldView() {
      _builder.clearVisibleInWorldView()
    }
    /**
     * <code>optional bool visible_in_world_view = 19;</code>
     * @return Whether the visibleInWorldView field is set.
     */
    public fun hasVisibleInWorldView(): kotlin.Boolean {
      return _builder.hasVisibleInWorldView()
    }

    /**
     * <code>optional bool show_notification_card_in_stream = 20;</code>
     */
    public var showNotificationCardInStream: kotlin.Boolean
      @JvmName("getShowNotificationCardInStream")
      get() = _builder.getShowNotificationCardInStream()
      @JvmName("setShowNotificationCardInStream")
      set(value) {
        _builder.setShowNotificationCardInStream(value)
      }
    /**
     * <code>optional bool show_notification_card_in_stream = 20;</code>
     */
    public fun clearShowNotificationCardInStream() {
      _builder.clearShowNotificationCardInStream()
    }
    /**
     * <code>optional bool show_notification_card_in_stream = 20;</code>
     * @return Whether the showNotificationCardInStream field is set.
     */
    public fun hasShowNotificationCardInStream(): kotlin.Boolean {
      return _builder.hasShowNotificationCardInStream()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class JoinedUsersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     *optional NotificationsCard notifications_card = 21;
     * </pre>
     *
     * <code>repeated .UserId joined_users = 23;</code>
     */
     public val joinedUsers: com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.UserId, JoinedUsersProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getJoinedUsersList()
      )
    /**
     * <pre>
     *optional NotificationsCard notifications_card = 21;
     * </pre>
     *
     * <code>repeated .UserId joined_users = 23;</code>
     * @param value The joinedUsers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addJoinedUsers")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.UserId, JoinedUsersProxy>.add(value: org.matrix.dma.gchat.proto.UserId) {
      _builder.addJoinedUsers(value)
    }
    /**
     * <pre>
     *optional NotificationsCard notifications_card = 21;
     * </pre>
     *
     * <code>repeated .UserId joined_users = 23;</code>
     * @param value The joinedUsers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignJoinedUsers")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.UserId, JoinedUsersProxy>.plusAssign(value: org.matrix.dma.gchat.proto.UserId) {
      add(value)
    }
    /**
     * <pre>
     *optional NotificationsCard notifications_card = 21;
     * </pre>
     *
     * <code>repeated .UserId joined_users = 23;</code>
     * @param values The joinedUsers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllJoinedUsers")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.UserId, JoinedUsersProxy>.addAll(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.UserId>) {
      _builder.addAllJoinedUsers(values)
    }
    /**
     * <pre>
     *optional NotificationsCard notifications_card = 21;
     * </pre>
     *
     * <code>repeated .UserId joined_users = 23;</code>
     * @param values The joinedUsers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllJoinedUsers")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.UserId, JoinedUsersProxy>.plusAssign(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.UserId>) {
      addAll(values)
    }
    /**
     * <pre>
     *optional NotificationsCard notifications_card = 21;
     * </pre>
     *
     * <code>repeated .UserId joined_users = 23;</code>
     * @param index The index to set the value at.
     * @param value The joinedUsers to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setJoinedUsers")
    public operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.UserId, JoinedUsersProxy>.set(index: kotlin.Int, value: org.matrix.dma.gchat.proto.UserId) {
      _builder.setJoinedUsers(index, value)
    }
    /**
     * <pre>
     *optional NotificationsCard notifications_card = 21;
     * </pre>
     *
     * <code>repeated .UserId joined_users = 23;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearJoinedUsers")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.UserId, JoinedUsersProxy>.clear() {
      _builder.clearJoinedUsers()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.GroupReadState.copy(block: org.matrix.dma.gchat.proto.GroupReadStateKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.GroupReadState =
  org.matrix.dma.gchat.proto.GroupReadStateKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.GroupReadStateOrBuilder.idOrNull: org.matrix.dma.gchat.proto.GroupReadStateId?
  get() = if (hasId()) getId() else null

public val org.matrix.dma.gchat.proto.GroupReadStateOrBuilder.inviteStateOrNull: org.matrix.dma.gchat.proto.InviteState?
  get() = if (hasInviteState()) getInviteState() else null

public val org.matrix.dma.gchat.proto.GroupReadStateOrBuilder.notificationSettingsOrNull: org.matrix.dma.gchat.proto.GroupNotificationSettings?
  get() = if (hasNotificationSettings()) getNotificationSettings() else null

public val org.matrix.dma.gchat.proto.GroupReadStateOrBuilder.retentionSettingsOrNull: org.matrix.dma.gchat.proto.RetentionSettings?
  get() = if (hasRetentionSettings()) getRetentionSettings() else null

