//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializeinviteeInfo")
public inline fun inviteeInfo(block: org.matrix.dma.gchat.proto.InviteeInfoKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.InviteeInfo =
  org.matrix.dma.gchat.proto.InviteeInfoKt.Dsl._create(org.matrix.dma.gchat.proto.InviteeInfo.newBuilder()).apply { block() }._build()
public object InviteeInfoKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.InviteeInfo.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.InviteeInfo.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.InviteeInfo = _builder.build()

    /**
     * <code>optional .UserId user_id = 1;</code>
     */
    public var userId: org.matrix.dma.gchat.proto.UserId
      @JvmName("getUserId")
      get() = _builder.getUserId()
      @JvmName("setUserId")
      set(value) {
        _builder.setUserId(value)
      }
    /**
     * <code>optional .UserId user_id = 1;</code>
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }
    /**
     * <code>optional .UserId user_id = 1;</code>
     * @return Whether the userId field is set.
     */
    public fun hasUserId(): kotlin.Boolean {
      return _builder.hasUserId()
    }
    public val InviteeInfoKt.Dsl.userIdOrNull: org.matrix.dma.gchat.proto.UserId?
      get() = _builder.userIdOrNull

    /**
     * <code>optional string email = 2;</code>
     */
    public var email: kotlin.String
      @JvmName("getEmail")
      get() = _builder.getEmail()
      @JvmName("setEmail")
      set(value) {
        _builder.setEmail(value)
      }
    /**
     * <code>optional string email = 2;</code>
     */
    public fun clearEmail() {
      _builder.clearEmail()
    }
    /**
     * <code>optional string email = 2;</code>
     * @return Whether the email field is set.
     */
    public fun hasEmail(): kotlin.Boolean {
      return _builder.hasEmail()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.InviteeInfo.copy(block: org.matrix.dma.gchat.proto.InviteeInfoKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.InviteeInfo =
  org.matrix.dma.gchat.proto.InviteeInfoKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.InviteeInfoOrBuilder.userIdOrNull: org.matrix.dma.gchat.proto.UserId?
  get() = if (hasUserId()) getUserId() else null

