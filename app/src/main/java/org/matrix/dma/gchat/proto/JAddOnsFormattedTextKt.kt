//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializejAddOnsFormattedText")
public inline fun jAddOnsFormattedText(block: org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsFormattedText =
  org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsFormattedText.newBuilder()).apply { block() }._build()
public object JAddOnsFormattedTextKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.JAddOnsFormattedText.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsFormattedText.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsFormattedText = _builder.build()

    /**
     * <code>optional .JAddOnsIdentifier id = 4;</code>
     */
    public var id: org.matrix.dma.gchat.proto.JAddOnsIdentifier
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <code>optional .JAddOnsIdentifier id = 4;</code>
     */
    public fun clearId() {
      _builder.clearId()
    }
    /**
     * <code>optional .JAddOnsIdentifier id = 4;</code>
     * @return Whether the id field is set.
     */
    public fun hasId(): kotlin.Boolean {
      return _builder.hasId()
    }
    public val JAddOnsFormattedTextKt.Dsl.idOrNull: org.matrix.dma.gchat.proto.JAddOnsIdentifier?
      get() = _builder.idOrNull

    /**
     * <code>optional string original_text = 1;</code>
     */
    public var originalText: kotlin.String
      @JvmName("getOriginalText")
      get() = _builder.getOriginalText()
      @JvmName("setOriginalText")
      set(value) {
        _builder.setOriginalText(value)
      }
    /**
     * <code>optional string original_text = 1;</code>
     */
    public fun clearOriginalText() {
      _builder.clearOriginalText()
    }
    /**
     * <code>optional string original_text = 1;</code>
     * @return Whether the originalText field is set.
     */
    public fun hasOriginalText(): kotlin.Boolean {
      return _builder.hasOriginalText()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class FormattedTextElementsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .JAddOnsFormattedText.FormattedTextElement formatted_text_elements = 2;</code>
     */
     public val formattedTextElements: com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement, FormattedTextElementsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getFormattedTextElementsList()
      )
    /**
     * <code>repeated .JAddOnsFormattedText.FormattedTextElement formatted_text_elements = 2;</code>
     * @param value The formattedTextElements to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addFormattedTextElements")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement, FormattedTextElementsProxy>.add(value: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement) {
      _builder.addFormattedTextElements(value)
    }
    /**
     * <code>repeated .JAddOnsFormattedText.FormattedTextElement formatted_text_elements = 2;</code>
     * @param value The formattedTextElements to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignFormattedTextElements")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement, FormattedTextElementsProxy>.plusAssign(value: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement) {
      add(value)
    }
    /**
     * <code>repeated .JAddOnsFormattedText.FormattedTextElement formatted_text_elements = 2;</code>
     * @param values The formattedTextElements to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllFormattedTextElements")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement, FormattedTextElementsProxy>.addAll(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement>) {
      _builder.addAllFormattedTextElements(values)
    }
    /**
     * <code>repeated .JAddOnsFormattedText.FormattedTextElement formatted_text_elements = 2;</code>
     * @param values The formattedTextElements to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllFormattedTextElements")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement, FormattedTextElementsProxy>.plusAssign(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement>) {
      addAll(values)
    }
    /**
     * <code>repeated .JAddOnsFormattedText.FormattedTextElement formatted_text_elements = 2;</code>
     * @param index The index to set the value at.
     * @param value The formattedTextElements to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setFormattedTextElements")
    public operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement, FormattedTextElementsProxy>.set(index: kotlin.Int, value: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement) {
      _builder.setFormattedTextElements(index, value)
    }
    /**
     * <code>repeated .JAddOnsFormattedText.FormattedTextElement formatted_text_elements = 2;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearFormattedTextElements")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement, FormattedTextElementsProxy>.clear() {
      _builder.clearFormattedTextElements()
    }


    /**
     * <code>optional .JAddOnsFormattedText.TextAlign text_align = 3;</code>
     */
    public var textAlign: org.matrix.dma.gchat.proto.JAddOnsFormattedText.TextAlign
      @JvmName("getTextAlign")
      get() = _builder.getTextAlign()
      @JvmName("setTextAlign")
      set(value) {
        _builder.setTextAlign(value)
      }
    /**
     * <code>optional .JAddOnsFormattedText.TextAlign text_align = 3;</code>
     */
    public fun clearTextAlign() {
      _builder.clearTextAlign()
    }
    /**
     * <code>optional .JAddOnsFormattedText.TextAlign text_align = 3;</code>
     * @return Whether the textAlign field is set.
     */
    public fun hasTextAlign(): kotlin.Boolean {
      return _builder.hasTextAlign()
    }
  }
  @kotlin.jvm.JvmName("-initializeformattedTextElement")
  public inline fun formattedTextElement(block: org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.FormattedTextElementKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement =
    org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.FormattedTextElementKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.newBuilder()).apply { block() }._build()
  public object FormattedTextElementKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement = _builder.build()

      /**
       * <pre>
       *oneof Element {
       * </pre>
       *
       * <code>optional .JAddOnsFormattedText.FormattedTextElement.StyledText styled_text = 1;</code>
       */
      public var styledText: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText
        @JvmName("getStyledText")
        get() = _builder.getStyledText()
        @JvmName("setStyledText")
        set(value) {
          _builder.setStyledText(value)
        }
      /**
       * <pre>
       *oneof Element {
       * </pre>
       *
       * <code>optional .JAddOnsFormattedText.FormattedTextElement.StyledText styled_text = 1;</code>
       */
      public fun clearStyledText() {
        _builder.clearStyledText()
      }
      /**
       * <pre>
       *oneof Element {
       * </pre>
       *
       * <code>optional .JAddOnsFormattedText.FormattedTextElement.StyledText styled_text = 1;</code>
       * @return Whether the styledText field is set.
       */
      public fun hasStyledText(): kotlin.Boolean {
        return _builder.hasStyledText()
      }
      public val FormattedTextElementKt.Dsl.styledTextOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText?
        get() = _builder.styledTextOrNull

      /**
       * <pre>
       *}
       * </pre>
       *
       * <code>optional .JAddOnsFormattedText.FormattedTextElement.HyperLink hyperlink = 2;</code>
       */
      public var hyperlink: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.HyperLink
        @JvmName("getHyperlink")
        get() = _builder.getHyperlink()
        @JvmName("setHyperlink")
        set(value) {
          _builder.setHyperlink(value)
        }
      /**
       * <pre>
       *}
       * </pre>
       *
       * <code>optional .JAddOnsFormattedText.FormattedTextElement.HyperLink hyperlink = 2;</code>
       */
      public fun clearHyperlink() {
        _builder.clearHyperlink()
      }
      /**
       * <pre>
       *}
       * </pre>
       *
       * <code>optional .JAddOnsFormattedText.FormattedTextElement.HyperLink hyperlink = 2;</code>
       * @return Whether the hyperlink field is set.
       */
      public fun hasHyperlink(): kotlin.Boolean {
        return _builder.hasHyperlink()
      }
      public val FormattedTextElementKt.Dsl.hyperlinkOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.HyperLink?
        get() = _builder.hyperlinkOrNull
    }
    @kotlin.jvm.JvmName("-initializedateTime")
    public inline fun dateTime(block: org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.FormattedTextElementKt.DateTimeKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.DateTime =
      org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.FormattedTextElementKt.DateTimeKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.DateTime.newBuilder()).apply { block() }._build()
    public object DateTimeKt {
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      @com.google.protobuf.kotlin.ProtoDslMarker
      public class Dsl private constructor(
        private val _builder: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.DateTime.Builder
      ) {
        public companion object {
          @kotlin.jvm.JvmSynthetic
          @kotlin.PublishedApi
          internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.DateTime.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.DateTime = _builder.build()

        /**
         * <code>optional int64 time_millis = 1;</code>
         */
        public var timeMillis: kotlin.Long
          @JvmName("getTimeMillis")
          get() = _builder.getTimeMillis()
          @JvmName("setTimeMillis")
          set(value) {
            _builder.setTimeMillis(value)
          }
        /**
         * <code>optional int64 time_millis = 1;</code>
         */
        public fun clearTimeMillis() {
          _builder.clearTimeMillis()
        }
        /**
         * <code>optional int64 time_millis = 1;</code>
         * @return Whether the timeMillis field is set.
         */
        public fun hasTimeMillis(): kotlin.Boolean {
          return _builder.hasTimeMillis()
        }

        /**
         * <code>optional int32 time_zone_offset_minutes = 2;</code>
         */
        public var timeZoneOffsetMinutes: kotlin.Int
          @JvmName("getTimeZoneOffsetMinutes")
          get() = _builder.getTimeZoneOffsetMinutes()
          @JvmName("setTimeZoneOffsetMinutes")
          set(value) {
            _builder.setTimeZoneOffsetMinutes(value)
          }
        /**
         * <code>optional int32 time_zone_offset_minutes = 2;</code>
         */
        public fun clearTimeZoneOffsetMinutes() {
          _builder.clearTimeZoneOffsetMinutes()
        }
        /**
         * <code>optional int32 time_zone_offset_minutes = 2;</code>
         * @return Whether the timeZoneOffsetMinutes field is set.
         */
        public fun hasTimeZoneOffsetMinutes(): kotlin.Boolean {
          return _builder.hasTimeZoneOffsetMinutes()
        }

        /**
         * <code>optional bool date_only = 3;</code>
         */
        public var dateOnly: kotlin.Boolean
          @JvmName("getDateOnly")
          get() = _builder.getDateOnly()
          @JvmName("setDateOnly")
          set(value) {
            _builder.setDateOnly(value)
          }
        /**
         * <code>optional bool date_only = 3;</code>
         */
        public fun clearDateOnly() {
          _builder.clearDateOnly()
        }
        /**
         * <code>optional bool date_only = 3;</code>
         * @return Whether the dateOnly field is set.
         */
        public fun hasDateOnly(): kotlin.Boolean {
          return _builder.hasDateOnly()
        }

        /**
         * <code>optional bool floating_time = 4;</code>
         */
        public var floatingTime: kotlin.Boolean
          @JvmName("getFloatingTime")
          get() = _builder.getFloatingTime()
          @JvmName("setFloatingTime")
          set(value) {
            _builder.setFloatingTime(value)
          }
        /**
         * <code>optional bool floating_time = 4;</code>
         */
        public fun clearFloatingTime() {
          _builder.clearFloatingTime()
        }
        /**
         * <code>optional bool floating_time = 4;</code>
         * @return Whether the floatingTime field is set.
         */
        public fun hasFloatingTime(): kotlin.Boolean {
          return _builder.hasFloatingTime()
        }
      }
    }
    @kotlin.jvm.JvmName("-initializestyledText")
    public inline fun styledText(block: org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.FormattedTextElementKt.StyledTextKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText =
      org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.FormattedTextElementKt.StyledTextKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText.newBuilder()).apply { block() }._build()
    public object StyledTextKt {
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      @com.google.protobuf.kotlin.ProtoDslMarker
      public class Dsl private constructor(
        private val _builder: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText.Builder
      ) {
        public companion object {
          @kotlin.jvm.JvmSynthetic
          @kotlin.PublishedApi
          internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText = _builder.build()

        /**
         * <code>optional string text = 1;</code>
         */
        public var text: kotlin.String
          @JvmName("getText")
          get() = _builder.getText()
          @JvmName("setText")
          set(value) {
            _builder.setText(value)
          }
        /**
         * <code>optional string text = 1;</code>
         */
        public fun clearText() {
          _builder.clearText()
        }
        /**
         * <code>optional string text = 1;</code>
         * @return Whether the text field is set.
         */
        public fun hasText(): kotlin.Boolean {
          return _builder.hasText()
        }

        /**
         * <code>optional .JAddOnsFormattedText.FormattedTextElement.DateTime datetime = 4;</code>
         */
        public var datetime: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.DateTime
          @JvmName("getDatetime")
          get() = _builder.getDatetime()
          @JvmName("setDatetime")
          set(value) {
            _builder.setDatetime(value)
          }
        /**
         * <code>optional .JAddOnsFormattedText.FormattedTextElement.DateTime datetime = 4;</code>
         */
        public fun clearDatetime() {
          _builder.clearDatetime()
        }
        /**
         * <code>optional .JAddOnsFormattedText.FormattedTextElement.DateTime datetime = 4;</code>
         * @return Whether the datetime field is set.
         */
        public fun hasDatetime(): kotlin.Boolean {
          return _builder.hasDatetime()
        }
        public val StyledTextKt.Dsl.datetimeOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.DateTime?
          get() = _builder.datetimeOrNull

        /**
         * An uninstantiable, behaviorless type to represent the field in
         * generics.
         */
        @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        public class StylesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
        /**
         * <code>repeated .JAddOnsFormattedText.FormattedTextElement.StyledText.Style styles = 2;</code>
         */
        public val styles: com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText.Style, StylesProxy>
          @kotlin.jvm.JvmSynthetic
          get() = com.google.protobuf.kotlin.DslList(
            _builder.getStylesList()
          )
        /**
         * <code>repeated .JAddOnsFormattedText.FormattedTextElement.StyledText.Style styles = 2;</code>
         * @param value The styles to add.
         */
        @kotlin.jvm.JvmSynthetic
        @kotlin.jvm.JvmName("addStyles")
        public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText.Style, StylesProxy>.add(value: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText.Style) {
          _builder.addStyles(value)
        }/**
         * <code>repeated .JAddOnsFormattedText.FormattedTextElement.StyledText.Style styles = 2;</code>
         * @param value The styles to add.
         */
        @kotlin.jvm.JvmSynthetic
        @kotlin.jvm.JvmName("plusAssignStyles")
        @Suppress("NOTHING_TO_INLINE")
        public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText.Style, StylesProxy>.plusAssign(value: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText.Style) {
          add(value)
        }/**
         * <code>repeated .JAddOnsFormattedText.FormattedTextElement.StyledText.Style styles = 2;</code>
         * @param values The styles to add.
         */
        @kotlin.jvm.JvmSynthetic
        @kotlin.jvm.JvmName("addAllStyles")
        public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText.Style, StylesProxy>.addAll(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText.Style>) {
          _builder.addAllStyles(values)
        }/**
         * <code>repeated .JAddOnsFormattedText.FormattedTextElement.StyledText.Style styles = 2;</code>
         * @param values The styles to add.
         */
        @kotlin.jvm.JvmSynthetic
        @kotlin.jvm.JvmName("plusAssignAllStyles")
        @Suppress("NOTHING_TO_INLINE")
        public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText.Style, StylesProxy>.plusAssign(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText.Style>) {
          addAll(values)
        }/**
         * <code>repeated .JAddOnsFormattedText.FormattedTextElement.StyledText.Style styles = 2;</code>
         * @param index The index to set the value at.
         * @param value The styles to set.
         */
        @kotlin.jvm.JvmSynthetic
        @kotlin.jvm.JvmName("setStyles")
        public operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText.Style, StylesProxy>.set(index: kotlin.Int, value: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText.Style) {
          _builder.setStyles(index, value)
        }/**
         * <code>repeated .JAddOnsFormattedText.FormattedTextElement.StyledText.Style styles = 2;</code>
         */
        @kotlin.jvm.JvmSynthetic
        @kotlin.jvm.JvmName("clearStyles")
        public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText.Style, StylesProxy>.clear() {
          _builder.clearStyles()
        }
        /**
         * <code>optional .JAddOnsFormattedText.FormattedTextElement.StyledText.FontWeight font_weight = 5;</code>
         */
        public var fontWeight: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText.FontWeight
          @JvmName("getFontWeight")
          get() = _builder.getFontWeight()
          @JvmName("setFontWeight")
          set(value) {
            _builder.setFontWeight(value)
          }
        /**
         * <code>optional .JAddOnsFormattedText.FormattedTextElement.StyledText.FontWeight font_weight = 5;</code>
         */
        public fun clearFontWeight() {
          _builder.clearFontWeight()
        }
        /**
         * <code>optional .JAddOnsFormattedText.FormattedTextElement.StyledText.FontWeight font_weight = 5;</code>
         * @return Whether the fontWeight field is set.
         */
        public fun hasFontWeight(): kotlin.Boolean {
          return _builder.hasFontWeight()
        }

        /**
         * <code>optional int32 color = 3;</code>
         */
        public var color: kotlin.Int
          @JvmName("getColor")
          get() = _builder.getColor()
          @JvmName("setColor")
          set(value) {
            _builder.setColor(value)
          }
        /**
         * <code>optional int32 color = 3;</code>
         */
        public fun clearColor() {
          _builder.clearColor()
        }
        /**
         * <code>optional int32 color = 3;</code>
         * @return Whether the color field is set.
         */
        public fun hasColor(): kotlin.Boolean {
          return _builder.hasColor()
        }

        /**
         * <code>optional .JAddOnsThemeColors theme_colors = 7;</code>
         */
        public var themeColors: org.matrix.dma.gchat.proto.JAddOnsThemeColors
          @JvmName("getThemeColors")
          get() = _builder.getThemeColors()
          @JvmName("setThemeColors")
          set(value) {
            _builder.setThemeColors(value)
          }
        /**
         * <code>optional .JAddOnsThemeColors theme_colors = 7;</code>
         */
        public fun clearThemeColors() {
          _builder.clearThemeColors()
        }
        /**
         * <code>optional .JAddOnsThemeColors theme_colors = 7;</code>
         * @return Whether the themeColors field is set.
         */
        public fun hasThemeColors(): kotlin.Boolean {
          return _builder.hasThemeColors()
        }
        public val StyledTextKt.Dsl.themeColorsOrNull: org.matrix.dma.gchat.proto.JAddOnsThemeColors?
          get() = _builder.themeColorsOrNull
      }
    }
    @kotlin.jvm.JvmName("-initializehyperLink")
    public inline fun hyperLink(block: org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.FormattedTextElementKt.HyperLinkKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.HyperLink =
      org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.FormattedTextElementKt.HyperLinkKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.HyperLink.newBuilder()).apply { block() }._build()
    public object HyperLinkKt {
      @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
      @com.google.protobuf.kotlin.ProtoDslMarker
      public class Dsl private constructor(
        private val _builder: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.HyperLink.Builder
      ) {
        public companion object {
          @kotlin.jvm.JvmSynthetic
          @kotlin.PublishedApi
          internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.HyperLink.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.HyperLink = _builder.build()

        /**
         * <code>optional string link = 1;</code>
         */
        public var link: kotlin.String
          @JvmName("getLink")
          get() = _builder.getLink()
          @JvmName("setLink")
          set(value) {
            _builder.setLink(value)
          }
        /**
         * <code>optional string link = 1;</code>
         */
        public fun clearLink() {
          _builder.clearLink()
        }
        /**
         * <code>optional string link = 1;</code>
         * @return Whether the link field is set.
         */
        public fun hasLink(): kotlin.Boolean {
          return _builder.hasLink()
        }

        /**
         * <code>optional string original_link = 3;</code>
         */
        public var originalLink: kotlin.String
          @JvmName("getOriginalLink")
          get() = _builder.getOriginalLink()
          @JvmName("setOriginalLink")
          set(value) {
            _builder.setOriginalLink(value)
          }
        /**
         * <code>optional string original_link = 3;</code>
         */
        public fun clearOriginalLink() {
          _builder.clearOriginalLink()
        }
        /**
         * <code>optional string original_link = 3;</code>
         * @return Whether the originalLink field is set.
         */
        public fun hasOriginalLink(): kotlin.Boolean {
          return _builder.hasOriginalLink()
        }

        /**
         * <code>optional string text = 2;</code>
         */
        public var text: kotlin.String
          @JvmName("getText")
          get() = _builder.getText()
          @JvmName("setText")
          set(value) {
            _builder.setText(value)
          }
        /**
         * <code>optional string text = 2;</code>
         */
        public fun clearText() {
          _builder.clearText()
        }
        /**
         * <code>optional string text = 2;</code>
         * @return Whether the text field is set.
         */
        public fun hasText(): kotlin.Boolean {
          return _builder.hasText()
        }
      }
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsFormattedText.copy(block: org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsFormattedText =
  org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.copy(block: org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.FormattedTextElementKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement =
  org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.FormattedTextElementKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.DateTime.copy(block: org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.FormattedTextElementKt.DateTimeKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.DateTime =
  org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.FormattedTextElementKt.DateTimeKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText.copy(block: org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.FormattedTextElementKt.StyledTextKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText =
  org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.FormattedTextElementKt.StyledTextKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledTextOrBuilder.datetimeOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.DateTime?
  get() = if (hasDatetime()) getDatetime() else null

public val org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledTextOrBuilder.themeColorsOrNull: org.matrix.dma.gchat.proto.JAddOnsThemeColors?
  get() = if (hasThemeColors()) getThemeColors() else null

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.HyperLink.copy(block: org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.FormattedTextElementKt.HyperLinkKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.HyperLink =
  org.matrix.dma.gchat.proto.JAddOnsFormattedTextKt.FormattedTextElementKt.HyperLinkKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElementOrBuilder.styledTextOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.StyledText?
  get() = if (hasStyledText()) getStyledText() else null

public val org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElementOrBuilder.hyperlinkOrNull: org.matrix.dma.gchat.proto.JAddOnsFormattedText.FormattedTextElement.HyperLink?
  get() = if (hasHyperlink()) getHyperlink() else null

public val org.matrix.dma.gchat.proto.JAddOnsFormattedTextOrBuilder.idOrNull: org.matrix.dma.gchat.proto.JAddOnsIdentifier?
  get() = if (hasId()) getId() else null

