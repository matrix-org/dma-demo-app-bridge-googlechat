// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

public interface CreateGroupRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:CreateGroupRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional .RequestHeader request_header = 100;</code>
   * @return Whether the requestHeader field is set.
   */
  boolean hasRequestHeader();
  /**
   * <code>optional .RequestHeader request_header = 100;</code>
   * @return The requestHeader.
   */
  org.matrix.dma.gchat.proto.RequestHeader getRequestHeader();
  /**
   * <code>optional .RequestHeader request_header = 100;</code>
   */
  org.matrix.dma.gchat.proto.RequestHeaderOrBuilder getRequestHeaderOrBuilder();

  /**
   * <pre>
   *oneof CreationInfo {
   * </pre>
   *
   * <code>optional .SpaceCreationInfo space = 1;</code>
   * @return Whether the space field is set.
   */
  boolean hasSpace();
  /**
   * <pre>
   *oneof CreationInfo {
   * </pre>
   *
   * <code>optional .SpaceCreationInfo space = 1;</code>
   * @return The space.
   */
  org.matrix.dma.gchat.proto.SpaceCreationInfo getSpace();
  /**
   * <pre>
   *oneof CreationInfo {
   * </pre>
   *
   * <code>optional .SpaceCreationInfo space = 1;</code>
   */
  org.matrix.dma.gchat.proto.SpaceCreationInfoOrBuilder getSpaceOrBuilder();

  /**
   * <pre>
   *}
   * </pre>
   *
   * <code>optional string local_id = 3;</code>
   * @return Whether the localId field is set.
   */
  boolean hasLocalId();
  /**
   * <pre>
   *}
   * </pre>
   *
   * <code>optional string local_id = 3;</code>
   * @return The localId.
   */
  java.lang.String getLocalId();
  /**
   * <pre>
   *}
   * </pre>
   *
   * <code>optional string local_id = 3;</code>
   * @return The bytes for localId.
   */
  com.google.protobuf.ByteString
      getLocalIdBytes();

  /**
   * <code>optional bool should_find_existing_space = 4;</code>
   * @return Whether the shouldFindExistingSpace field is set.
   */
  boolean hasShouldFindExistingSpace();
  /**
   * <code>optional bool should_find_existing_space = 4;</code>
   * @return The shouldFindExistingSpace.
   */
  boolean getShouldFindExistingSpace();
}
