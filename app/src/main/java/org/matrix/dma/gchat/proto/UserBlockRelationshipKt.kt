//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializeuserBlockRelationship")
public inline fun userBlockRelationship(block: org.matrix.dma.gchat.proto.UserBlockRelationshipKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.UserBlockRelationship =
  org.matrix.dma.gchat.proto.UserBlockRelationshipKt.Dsl._create(org.matrix.dma.gchat.proto.UserBlockRelationship.newBuilder()).apply { block() }._build()
public object UserBlockRelationshipKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.UserBlockRelationship.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.UserBlockRelationship.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.UserBlockRelationship = _builder.build()

    /**
     * <code>optional bool is_blocked_by_requester = 1;</code>
     */
    public var isBlockedByRequester: kotlin.Boolean
      @JvmName("getIsBlockedByRequester")
      get() = _builder.getIsBlockedByRequester()
      @JvmName("setIsBlockedByRequester")
      set(value) {
        _builder.setIsBlockedByRequester(value)
      }
    /**
     * <code>optional bool is_blocked_by_requester = 1;</code>
     */
    public fun clearIsBlockedByRequester() {
      _builder.clearIsBlockedByRequester()
    }
    /**
     * <code>optional bool is_blocked_by_requester = 1;</code>
     * @return Whether the isBlockedByRequester field is set.
     */
    public fun hasIsBlockedByRequester(): kotlin.Boolean {
      return _builder.hasIsBlockedByRequester()
    }

    /**
     * <code>optional bool has_blocked_requester = 2;</code>
     */
    public var hasBlockedRequester: kotlin.Boolean
      @JvmName("getHasBlockedRequester")
      get() = _builder.getHasBlockedRequester()
      @JvmName("setHasBlockedRequester")
      set(value) {
        _builder.setHasBlockedRequester(value)
      }
    /**
     * <code>optional bool has_blocked_requester = 2;</code>
     */
    public fun clearHasBlockedRequester() {
      _builder.clearHasBlockedRequester()
    }
    /**
     * <code>optional bool has_blocked_requester = 2;</code>
     * @return Whether the hasBlockedRequester field is set.
     */
    public fun hasHasBlockedRequester(): kotlin.Boolean {
      return _builder.hasHasBlockedRequester()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.UserBlockRelationship.copy(block: org.matrix.dma.gchat.proto.UserBlockRelationshipKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.UserBlockRelationship =
  org.matrix.dma.gchat.proto.UserBlockRelationshipKt.Dsl._create(this.toBuilder()).apply { block() }._build()

