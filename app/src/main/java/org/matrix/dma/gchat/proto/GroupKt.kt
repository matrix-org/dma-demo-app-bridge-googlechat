//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializegroup")
public inline fun group(block: org.matrix.dma.gchat.proto.GroupKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.Group =
  org.matrix.dma.gchat.proto.GroupKt.Dsl._create(org.matrix.dma.gchat.proto.Group.newBuilder()).apply { block() }._build()
public object GroupKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.Group.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.Group.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.Group = _builder.build()

    /**
     * <code>optional .GroupId group_id = 1;</code>
     */
    public var groupId: org.matrix.dma.gchat.proto.GroupId
      @JvmName("getGroupId")
      get() = _builder.getGroupId()
      @JvmName("setGroupId")
      set(value) {
        _builder.setGroupId(value)
      }
    /**
     * <code>optional .GroupId group_id = 1;</code>
     */
    public fun clearGroupId() {
      _builder.clearGroupId()
    }
    /**
     * <code>optional .GroupId group_id = 1;</code>
     * @return Whether the groupId field is set.
     */
    public fun hasGroupId(): kotlin.Boolean {
      return _builder.hasGroupId()
    }
    public val GroupKt.Dsl.groupIdOrNull: org.matrix.dma.gchat.proto.GroupId?
      get() = _builder.groupIdOrNull

    /**
     * <code>optional string name = 2;</code>
     */
    public var name: kotlin.String
      @JvmName("getName")
      get() = _builder.getName()
      @JvmName("setName")
      set(value) {
        _builder.setName(value)
      }
    /**
     * <code>optional string name = 2;</code>
     */
    public fun clearName() {
      _builder.clearName()
    }
    /**
     * <code>optional string name = 2;</code>
     * @return Whether the name field is set.
     */
    public fun hasName(): kotlin.Boolean {
      return _builder.hasName()
    }

    /**
     * <code>optional .User creator = 4;</code>
     */
    public var creator: org.matrix.dma.gchat.proto.User
      @JvmName("getCreator")
      get() = _builder.getCreator()
      @JvmName("setCreator")
      set(value) {
        _builder.setCreator(value)
      }
    /**
     * <code>optional .User creator = 4;</code>
     */
    public fun clearCreator() {
      _builder.clearCreator()
    }
    /**
     * <code>optional .User creator = 4;</code>
     * @return Whether the creator field is set.
     */
    public fun hasCreator(): kotlin.Boolean {
      return _builder.hasCreator()
    }
    public val GroupKt.Dsl.creatorOrNull: org.matrix.dma.gchat.proto.User?
      get() = _builder.creatorOrNull

    /**
     * <code>optional int64 create_time = 5;</code>
     */
    public var createTime: kotlin.Long
      @JvmName("getCreateTime")
      get() = _builder.getCreateTime()
      @JvmName("setCreateTime")
      set(value) {
        _builder.setCreateTime(value)
      }
    /**
     * <code>optional int64 create_time = 5;</code>
     */
    public fun clearCreateTime() {
      _builder.clearCreateTime()
    }
    /**
     * <code>optional int64 create_time = 5;</code>
     * @return Whether the createTime field is set.
     */
    public fun hasCreateTime(): kotlin.Boolean {
      return _builder.hasCreateTime()
    }

    /**
     * <code>optional int64 last_modified_time = 6;</code>
     */
    public var lastModifiedTime: kotlin.Long
      @JvmName("getLastModifiedTime")
      get() = _builder.getLastModifiedTime()
      @JvmName("setLastModifiedTime")
      set(value) {
        _builder.setLastModifiedTime(value)
      }
    /**
     * <code>optional int64 last_modified_time = 6;</code>
     */
    public fun clearLastModifiedTime() {
      _builder.clearLastModifiedTime()
    }
    /**
     * <code>optional int64 last_modified_time = 6;</code>
     * @return Whether the lastModifiedTime field is set.
     */
    public fun hasLastModifiedTime(): kotlin.Boolean {
      return _builder.hasLastModifiedTime()
    }

    /**
     * <code>optional int64 sort_time = 7;</code>
     */
    public var sortTime: kotlin.Long
      @JvmName("getSortTime")
      get() = _builder.getSortTime()
      @JvmName("setSortTime")
      set(value) {
        _builder.setSortTime(value)
      }
    /**
     * <code>optional int64 sort_time = 7;</code>
     */
    public fun clearSortTime() {
      _builder.clearSortTime()
    }
    /**
     * <code>optional int64 sort_time = 7;</code>
     * @return Whether the sortTime field is set.
     */
    public fun hasSortTime(): kotlin.Boolean {
      return _builder.hasSortTime()
    }

    /**
     * <code>optional int64 revision_time = 13;</code>
     */
    public var revisionTime: kotlin.Long
      @JvmName("getRevisionTime")
      get() = _builder.getRevisionTime()
      @JvmName("setRevisionTime")
      set(value) {
        _builder.setRevisionTime(value)
      }
    /**
     * <code>optional int64 revision_time = 13;</code>
     */
    public fun clearRevisionTime() {
      _builder.clearRevisionTime()
    }
    /**
     * <code>optional int64 revision_time = 13;</code>
     * @return Whether the revisionTime field is set.
     */
    public fun hasRevisionTime(): kotlin.Boolean {
      return _builder.hasRevisionTime()
    }

    /**
     * <code>optional .GroupReadState group_read_state = 12;</code>
     */
    public var groupReadState: org.matrix.dma.gchat.proto.GroupReadState
      @JvmName("getGroupReadState")
      get() = _builder.getGroupReadState()
      @JvmName("setGroupReadState")
      set(value) {
        _builder.setGroupReadState(value)
      }
    /**
     * <code>optional .GroupReadState group_read_state = 12;</code>
     */
    public fun clearGroupReadState() {
      _builder.clearGroupReadState()
    }
    /**
     * <code>optional .GroupReadState group_read_state = 12;</code>
     * @return Whether the groupReadState field is set.
     */
    public fun hasGroupReadState(): kotlin.Boolean {
      return _builder.hasGroupReadState()
    }
    public val GroupKt.Dsl.groupReadStateOrNull: org.matrix.dma.gchat.proto.GroupReadState?
      get() = _builder.groupReadStateOrNull

    /**
     * <code>optional int64 retention_horizon_time = 14;</code>
     */
    public var retentionHorizonTime: kotlin.Long
      @JvmName("getRetentionHorizonTime")
      get() = _builder.getRetentionHorizonTime()
      @JvmName("setRetentionHorizonTime")
      set(value) {
        _builder.setRetentionHorizonTime(value)
      }
    /**
     * <code>optional int64 retention_horizon_time = 14;</code>
     */
    public fun clearRetentionHorizonTime() {
      _builder.clearRetentionHorizonTime()
    }
    /**
     * <code>optional int64 retention_horizon_time = 14;</code>
     * @return Whether the retentionHorizonTime field is set.
     */
    public fun hasRetentionHorizonTime(): kotlin.Boolean {
      return _builder.hasRetentionHorizonTime()
    }

    /**
     * <pre>
     *optional DYNProtoDasherDomainPolicies dasher_domain_policies = 15;
     *optional ?? group_policies = 40;
     * </pre>
     *
     * <code>optional .RetentionSettings retention_settings = 16;</code>
     */
    public var retentionSettings: org.matrix.dma.gchat.proto.RetentionSettings
      @JvmName("getRetentionSettings")
      get() = _builder.getRetentionSettings()
      @JvmName("setRetentionSettings")
      set(value) {
        _builder.setRetentionSettings(value)
      }
    /**
     * <pre>
     *optional DYNProtoDasherDomainPolicies dasher_domain_policies = 15;
     *optional ?? group_policies = 40;
     * </pre>
     *
     * <code>optional .RetentionSettings retention_settings = 16;</code>
     */
    public fun clearRetentionSettings() {
      _builder.clearRetentionSettings()
    }
    /**
     * <pre>
     *optional DYNProtoDasherDomainPolicies dasher_domain_policies = 15;
     *optional ?? group_policies = 40;
     * </pre>
     *
     * <code>optional .RetentionSettings retention_settings = 16;</code>
     * @return Whether the retentionSettings field is set.
     */
    public fun hasRetentionSettings(): kotlin.Boolean {
      return _builder.hasRetentionSettings()
    }
    public val GroupKt.Dsl.retentionSettingsOrNull: org.matrix.dma.gchat.proto.RetentionSettings?
      get() = _builder.retentionSettingsOrNull

    /**
     * <code>optional bool is_flat = 17;</code>
     */
    public var isFlat: kotlin.Boolean
      @JvmName("getIsFlat")
      get() = _builder.getIsFlat()
      @JvmName("setIsFlat")
      set(value) {
        _builder.setIsFlat(value)
      }
    /**
     * <code>optional bool is_flat = 17;</code>
     */
    public fun clearIsFlat() {
      _builder.clearIsFlat()
    }
    /**
     * <code>optional bool is_flat = 17;</code>
     * @return Whether the isFlat field is set.
     */
    public fun hasIsFlat(): kotlin.Boolean {
      return _builder.hasIsFlat()
    }

    /**
     * <code>optional bool interop_enabled = 18;</code>
     */
    public var interopEnabled: kotlin.Boolean
      @JvmName("getInteropEnabled")
      get() = _builder.getInteropEnabled()
      @JvmName("setInteropEnabled")
      set(value) {
        _builder.setInteropEnabled(value)
      }
    /**
     * <code>optional bool interop_enabled = 18;</code>
     */
    public fun clearInteropEnabled() {
      _builder.clearInteropEnabled()
    }
    /**
     * <code>optional bool interop_enabled = 18;</code>
     * @return Whether the interopEnabled field is set.
     */
    public fun hasInteropEnabled(): kotlin.Boolean {
      return _builder.hasInteropEnabled()
    }

    /**
     * <pre>
     *optional DYNProtoGroupGuestAccessSettings group_guest_access_settings = 20;
     *optional DYNProtoOrganizationInfo organization_info = 21;
     * </pre>
     *
     * <code>optional int64 retention_duration_seconds = 19;</code>
     */
    public var retentionDurationSeconds: kotlin.Long
      @JvmName("getRetentionDurationSeconds")
      get() = _builder.getRetentionDurationSeconds()
      @JvmName("setRetentionDurationSeconds")
      set(value) {
        _builder.setRetentionDurationSeconds(value)
      }
    /**
     * <pre>
     *optional DYNProtoGroupGuestAccessSettings group_guest_access_settings = 20;
     *optional DYNProtoOrganizationInfo organization_info = 21;
     * </pre>
     *
     * <code>optional int64 retention_duration_seconds = 19;</code>
     */
    public fun clearRetentionDurationSeconds() {
      _builder.clearRetentionDurationSeconds()
    }
    /**
     * <pre>
     *optional DYNProtoGroupGuestAccessSettings group_guest_access_settings = 20;
     *optional DYNProtoOrganizationInfo organization_info = 21;
     * </pre>
     *
     * <code>optional int64 retention_duration_seconds = 19;</code>
     * @return Whether the retentionDurationSeconds field is set.
     */
    public fun hasRetentionDurationSeconds(): kotlin.Boolean {
      return _builder.hasRetentionDurationSeconds()
    }

    /**
     * <code>optional .Group.GroupType group_type = 22;</code>
     */
    public var groupType: org.matrix.dma.gchat.proto.Group.GroupType
      @JvmName("getGroupType")
      get() = _builder.getGroupType()
      @JvmName("setGroupType")
      set(value) {
        _builder.setGroupType(value)
      }
    /**
     * <code>optional .Group.GroupType group_type = 22;</code>
     */
    public fun clearGroupType() {
      _builder.clearGroupType()
    }
    /**
     * <code>optional .Group.GroupType group_type = 22;</code>
     * @return Whether the groupType field is set.
     */
    public fun hasGroupType(): kotlin.Boolean {
      return _builder.hasGroupType()
    }

    /**
     * <code>optional .GroupVisibility visibility = 23;</code>
     */
    public var visibility: org.matrix.dma.gchat.proto.GroupVisibility
      @JvmName("getVisibility")
      get() = _builder.getVisibility()
      @JvmName("setVisibility")
      set(value) {
        _builder.setVisibility(value)
      }
    /**
     * <code>optional .GroupVisibility visibility = 23;</code>
     */
    public fun clearVisibility() {
      _builder.clearVisibility()
    }
    /**
     * <code>optional .GroupVisibility visibility = 23;</code>
     * @return Whether the visibility field is set.
     */
    public fun hasVisibility(): kotlin.Boolean {
      return _builder.hasVisibility()
    }
    public val GroupKt.Dsl.visibilityOrNull: org.matrix.dma.gchat.proto.GroupVisibility?
      get() = _builder.visibilityOrNull

    /**
     * <pre>
     *repeated DYNProtoGsuiteIntegration gsuite_integration = 24;
     * </pre>
     *
     * <code>optional string roster_email = 25;</code>
     */
    public var rosterEmail: kotlin.String
      @JvmName("getRosterEmail")
      get() = _builder.getRosterEmail()
      @JvmName("setRosterEmail")
      set(value) {
        _builder.setRosterEmail(value)
      }
    /**
     * <pre>
     *repeated DYNProtoGsuiteIntegration gsuite_integration = 24;
     * </pre>
     *
     * <code>optional string roster_email = 25;</code>
     */
    public fun clearRosterEmail() {
      _builder.clearRosterEmail()
    }
    /**
     * <pre>
     *repeated DYNProtoGsuiteIntegration gsuite_integration = 24;
     * </pre>
     *
     * <code>optional string roster_email = 25;</code>
     * @return Whether the rosterEmail field is set.
     */
    public fun hasRosterEmail(): kotlin.Boolean {
      return _builder.hasRosterEmail()
    }

    /**
     * <pre>
     *oneof ThreadedModel {
     * </pre>
     *
     * <code>optional .Group.FlatGroup flat_group = 26;</code>
     */
    public var flatGroup: org.matrix.dma.gchat.proto.Group.FlatGroup
      @JvmName("getFlatGroup")
      get() = _builder.getFlatGroup()
      @JvmName("setFlatGroup")
      set(value) {
        _builder.setFlatGroup(value)
      }
    /**
     * <pre>
     *oneof ThreadedModel {
     * </pre>
     *
     * <code>optional .Group.FlatGroup flat_group = 26;</code>
     */
    public fun clearFlatGroup() {
      _builder.clearFlatGroup()
    }
    /**
     * <pre>
     *oneof ThreadedModel {
     * </pre>
     *
     * <code>optional .Group.FlatGroup flat_group = 26;</code>
     * @return Whether the flatGroup field is set.
     */
    public fun hasFlatGroup(): kotlin.Boolean {
      return _builder.hasFlatGroup()
    }
    public val GroupKt.Dsl.flatGroupOrNull: org.matrix.dma.gchat.proto.Group.FlatGroup?
      get() = _builder.flatGroupOrNull

    /**
     * <pre>
     *}
     * </pre>
     *
     * <code>optional .Group.ThreadedGroup threaded_group = 27;</code>
     */
    public var threadedGroup: org.matrix.dma.gchat.proto.Group.ThreadedGroup
      @JvmName("getThreadedGroup")
      get() = _builder.getThreadedGroup()
      @JvmName("setThreadedGroup")
      set(value) {
        _builder.setThreadedGroup(value)
      }
    /**
     * <pre>
     *}
     * </pre>
     *
     * <code>optional .Group.ThreadedGroup threaded_group = 27;</code>
     */
    public fun clearThreadedGroup() {
      _builder.clearThreadedGroup()
    }
    /**
     * <pre>
     *}
     * </pre>
     *
     * <code>optional .Group.ThreadedGroup threaded_group = 27;</code>
     * @return Whether the threadedGroup field is set.
     */
    public fun hasThreadedGroup(): kotlin.Boolean {
      return _builder.hasThreadedGroup()
    }
    public val GroupKt.Dsl.threadedGroupOrNull: org.matrix.dma.gchat.proto.Group.ThreadedGroup?
      get() = _builder.threadedGroupOrNull

    /**
     * <code>optional string avatar_url = 28;</code>
     */
    public var avatarUrl: kotlin.String
      @JvmName("getAvatarUrl")
      get() = _builder.getAvatarUrl()
      @JvmName("setAvatarUrl")
      set(value) {
        _builder.setAvatarUrl(value)
      }
    /**
     * <code>optional string avatar_url = 28;</code>
     */
    public fun clearAvatarUrl() {
      _builder.clearAvatarUrl()
    }
    /**
     * <code>optional string avatar_url = 28;</code>
     * @return Whether the avatarUrl field is set.
     */
    public fun hasAvatarUrl(): kotlin.Boolean {
      return _builder.hasAvatarUrl()
    }

    /**
     * <pre>
     *optional DYNProtoGroupIntegrationSettings group_integration_settings = 36;
     *repeated ?? space_integration_payloads = 29;
     *optional DYNProtoAvatarInfo avatar_info = 30;
     * </pre>
     *
     * <code>optional .SharedAttributeCheckerGroupType attribute_checker_group_type = 33;</code>
     */
    public var attributeCheckerGroupType: org.matrix.dma.gchat.proto.SharedAttributeCheckerGroupType
      @JvmName("getAttributeCheckerGroupType")
      get() = _builder.getAttributeCheckerGroupType()
      @JvmName("setAttributeCheckerGroupType")
      set(value) {
        _builder.setAttributeCheckerGroupType(value)
      }
    /**
     * <pre>
     *optional DYNProtoGroupIntegrationSettings group_integration_settings = 36;
     *repeated ?? space_integration_payloads = 29;
     *optional DYNProtoAvatarInfo avatar_info = 30;
     * </pre>
     *
     * <code>optional .SharedAttributeCheckerGroupType attribute_checker_group_type = 33;</code>
     */
    public fun clearAttributeCheckerGroupType() {
      _builder.clearAttributeCheckerGroupType()
    }
    /**
     * <pre>
     *optional DYNProtoGroupIntegrationSettings group_integration_settings = 36;
     *repeated ?? space_integration_payloads = 29;
     *optional DYNProtoAvatarInfo avatar_info = 30;
     * </pre>
     *
     * <code>optional .SharedAttributeCheckerGroupType attribute_checker_group_type = 33;</code>
     * @return Whether the attributeCheckerGroupType field is set.
     */
    public fun hasAttributeCheckerGroupType(): kotlin.Boolean {
      return _builder.hasAttributeCheckerGroupType()
    }

    /**
     * <code>optional .NameUsers name_users = 34;</code>
     */
    public var nameUsers: org.matrix.dma.gchat.proto.NameUsers
      @JvmName("getNameUsers")
      get() = _builder.getNameUsers()
      @JvmName("setNameUsers")
      set(value) {
        _builder.setNameUsers(value)
      }
    /**
     * <code>optional .NameUsers name_users = 34;</code>
     */
    public fun clearNameUsers() {
      _builder.clearNameUsers()
    }
    /**
     * <code>optional .NameUsers name_users = 34;</code>
     * @return Whether the nameUsers field is set.
     */
    public fun hasNameUsers(): kotlin.Boolean {
      return _builder.hasNameUsers()
    }
    public val GroupKt.Dsl.nameUsersOrNull: org.matrix.dma.gchat.proto.NameUsers?
      get() = _builder.nameUsersOrNull

    /**
     * <pre>
     *optional ?? space_details = 37;
     * </pre>
     *
     * <code>optional .GroupSupportLevel group_support_level = 38;</code>
     */
    public var groupSupportLevel: org.matrix.dma.gchat.proto.GroupSupportLevel
      @JvmName("getGroupSupportLevel")
      get() = _builder.getGroupSupportLevel()
      @JvmName("setGroupSupportLevel")
      set(value) {
        _builder.setGroupSupportLevel(value)
      }
    /**
     * <pre>
     *optional ?? space_details = 37;
     * </pre>
     *
     * <code>optional .GroupSupportLevel group_support_level = 38;</code>
     */
    public fun clearGroupSupportLevel() {
      _builder.clearGroupSupportLevel()
    }
    /**
     * <pre>
     *optional ?? space_details = 37;
     * </pre>
     *
     * <code>optional .GroupSupportLevel group_support_level = 38;</code>
     * @return Whether the groupSupportLevel field is set.
     */
    public fun hasGroupSupportLevel(): kotlin.Boolean {
      return _builder.hasGroupSupportLevel()
    }

    /**
     * <code>optional .GroupUnsupportedReason group_unsupported_reason = 39;</code>
     */
    public var groupUnsupportedReason: org.matrix.dma.gchat.proto.GroupUnsupportedReason
      @JvmName("getGroupUnsupportedReason")
      get() = _builder.getGroupUnsupportedReason()
      @JvmName("setGroupUnsupportedReason")
      set(value) {
        _builder.setGroupUnsupportedReason(value)
      }
    /**
     * <code>optional .GroupUnsupportedReason group_unsupported_reason = 39;</code>
     */
    public fun clearGroupUnsupportedReason() {
      _builder.clearGroupUnsupportedReason()
    }
    /**
     * <code>optional .GroupUnsupportedReason group_unsupported_reason = 39;</code>
     * @return Whether the groupUnsupportedReason field is set.
     */
    public fun hasGroupUnsupportedReason(): kotlin.Boolean {
      return _builder.hasGroupUnsupportedReason()
    }

    /**
     * <pre>
     *optional DYNProtoHubGroupProperties hub_group_properties = 41;
     *optional ?? ufr_upgrade_info = 42;
     * </pre>
     *
     * <code>optional bool typing_indicators_enabled = 43;</code>
     */
    public var typingIndicatorsEnabled: kotlin.Boolean
      @JvmName("getTypingIndicatorsEnabled")
      get() = _builder.getTypingIndicatorsEnabled()
      @JvmName("setTypingIndicatorsEnabled")
      set(value) {
        _builder.setTypingIndicatorsEnabled(value)
      }
    /**
     * <pre>
     *optional DYNProtoHubGroupProperties hub_group_properties = 41;
     *optional ?? ufr_upgrade_info = 42;
     * </pre>
     *
     * <code>optional bool typing_indicators_enabled = 43;</code>
     */
    public fun clearTypingIndicatorsEnabled() {
      _builder.clearTypingIndicatorsEnabled()
    }
    /**
     * <pre>
     *optional DYNProtoHubGroupProperties hub_group_properties = 41;
     *optional ?? ufr_upgrade_info = 42;
     * </pre>
     *
     * <code>optional bool typing_indicators_enabled = 43;</code>
     * @return Whether the typingIndicatorsEnabled field is set.
     */
    public fun hasTypingIndicatorsEnabled(): kotlin.Boolean {
      return _builder.hasTypingIndicatorsEnabled()
    }
  }
  @kotlin.jvm.JvmName("-initializeflatGroup")
  public inline fun flatGroup(block: org.matrix.dma.gchat.proto.GroupKt.FlatGroupKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.Group.FlatGroup =
    org.matrix.dma.gchat.proto.GroupKt.FlatGroupKt.Dsl._create(org.matrix.dma.gchat.proto.Group.FlatGroup.newBuilder()).apply { block() }._build()
  public object FlatGroupKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: org.matrix.dma.gchat.proto.Group.FlatGroup.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: org.matrix.dma.gchat.proto.Group.FlatGroup.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): org.matrix.dma.gchat.proto.Group.FlatGroup = _builder.build()
    }
  }
  @kotlin.jvm.JvmName("-initializethreadedGroup")
  public inline fun threadedGroup(block: org.matrix.dma.gchat.proto.GroupKt.ThreadedGroupKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.Group.ThreadedGroup =
    org.matrix.dma.gchat.proto.GroupKt.ThreadedGroupKt.Dsl._create(org.matrix.dma.gchat.proto.Group.ThreadedGroup.newBuilder()).apply { block() }._build()
  public object ThreadedGroupKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
      private val _builder: org.matrix.dma.gchat.proto.Group.ThreadedGroup.Builder
    ) {
      public companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: org.matrix.dma.gchat.proto.Group.ThreadedGroup.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): org.matrix.dma.gchat.proto.Group.ThreadedGroup = _builder.build()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.Group.copy(block: org.matrix.dma.gchat.proto.GroupKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.Group =
  org.matrix.dma.gchat.proto.GroupKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.Group.FlatGroup.copy(block: org.matrix.dma.gchat.proto.GroupKt.FlatGroupKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.Group.FlatGroup =
  org.matrix.dma.gchat.proto.GroupKt.FlatGroupKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.Group.ThreadedGroup.copy(block: org.matrix.dma.gchat.proto.GroupKt.ThreadedGroupKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.Group.ThreadedGroup =
  org.matrix.dma.gchat.proto.GroupKt.ThreadedGroupKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.GroupOrBuilder.groupIdOrNull: org.matrix.dma.gchat.proto.GroupId?
  get() = if (hasGroupId()) getGroupId() else null

public val org.matrix.dma.gchat.proto.GroupOrBuilder.creatorOrNull: org.matrix.dma.gchat.proto.User?
  get() = if (hasCreator()) getCreator() else null

public val org.matrix.dma.gchat.proto.GroupOrBuilder.groupReadStateOrNull: org.matrix.dma.gchat.proto.GroupReadState?
  get() = if (hasGroupReadState()) getGroupReadState() else null

public val org.matrix.dma.gchat.proto.GroupOrBuilder.retentionSettingsOrNull: org.matrix.dma.gchat.proto.RetentionSettings?
  get() = if (hasRetentionSettings()) getRetentionSettings() else null

public val org.matrix.dma.gchat.proto.GroupOrBuilder.visibilityOrNull: org.matrix.dma.gchat.proto.GroupVisibility?
  get() = if (hasVisibility()) getVisibility() else null

public val org.matrix.dma.gchat.proto.GroupOrBuilder.flatGroupOrNull: org.matrix.dma.gchat.proto.Group.FlatGroup?
  get() = if (hasFlatGroup()) getFlatGroup() else null

public val org.matrix.dma.gchat.proto.GroupOrBuilder.threadedGroupOrNull: org.matrix.dma.gchat.proto.Group.ThreadedGroup?
  get() = if (hasThreadedGroup()) getThreadedGroup() else null

public val org.matrix.dma.gchat.proto.GroupOrBuilder.nameUsersOrNull: org.matrix.dma.gchat.proto.NameUsers?
  get() = if (hasNameUsers()) getNameUsers() else null

