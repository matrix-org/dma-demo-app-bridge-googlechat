//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializeandroidLocalNotification")
public inline fun androidLocalNotification(block: org.matrix.dma.gchat.proto.AndroidLocalNotificationKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.AndroidLocalNotification =
  org.matrix.dma.gchat.proto.AndroidLocalNotificationKt.Dsl._create(org.matrix.dma.gchat.proto.AndroidLocalNotification.newBuilder()).apply { block() }._build()
public object AndroidLocalNotificationKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.AndroidLocalNotification.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.AndroidLocalNotification.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.AndroidLocalNotification = _builder.build()

    /**
     * <code>optional string thread_id = 1;</code>
     */
    public var threadId: kotlin.String
      @JvmName("getThreadId")
      get() = _builder.getThreadId()
      @JvmName("setThreadId")
      set(value) {
        _builder.setThreadId(value)
      }
    /**
     * <code>optional string thread_id = 1;</code>
     */
    public fun clearThreadId() {
      _builder.clearThreadId()
    }
    /**
     * <code>optional string thread_id = 1;</code>
     * @return Whether the threadId field is set.
     */
    public fun hasThreadId(): kotlin.Boolean {
      return _builder.hasThreadId()
    }

    /**
     * <code>optional string type_id = 2;</code>
     */
    public var typeId: kotlin.String
      @JvmName("getTypeId")
      get() = _builder.getTypeId()
      @JvmName("setTypeId")
      set(value) {
        _builder.setTypeId(value)
      }
    /**
     * <code>optional string type_id = 2;</code>
     */
    public fun clearTypeId() {
      _builder.clearTypeId()
    }
    /**
     * <code>optional string type_id = 2;</code>
     * @return Whether the typeId field is set.
     */
    public fun hasTypeId(): kotlin.Boolean {
      return _builder.hasTypeId()
    }

    /**
     * <code>optional string group_name = 3;</code>
     */
    public var groupName: kotlin.String
      @JvmName("getGroupName")
      get() = _builder.getGroupName()
      @JvmName("setGroupName")
      set(value) {
        _builder.setGroupName(value)
      }
    /**
     * <code>optional string group_name = 3;</code>
     */
    public fun clearGroupName() {
      _builder.clearGroupName()
    }
    /**
     * <code>optional string group_name = 3;</code>
     * @return Whether the groupName field is set.
     */
    public fun hasGroupName(): kotlin.Boolean {
      return _builder.hasGroupName()
    }

    /**
     * <code>optional string text_body = 6;</code>
     */
    public var textBody: kotlin.String
      @JvmName("getTextBody")
      get() = _builder.getTextBody()
      @JvmName("setTextBody")
      set(value) {
        _builder.setTextBody(value)
      }
    /**
     * <code>optional string text_body = 6;</code>
     */
    public fun clearTextBody() {
      _builder.clearTextBody()
    }
    /**
     * <code>optional string text_body = 6;</code>
     * @return Whether the textBody field is set.
     */
    public fun hasTextBody(): kotlin.Boolean {
      return _builder.hasTextBody()
    }

    /**
     * <code>optional string icon_url = 4;</code>
     */
    public var iconUrl: kotlin.String
      @JvmName("getIconUrl")
      get() = _builder.getIconUrl()
      @JvmName("setIconUrl")
      set(value) {
        _builder.setIconUrl(value)
      }
    /**
     * <code>optional string icon_url = 4;</code>
     */
    public fun clearIconUrl() {
      _builder.clearIconUrl()
    }
    /**
     * <code>optional string icon_url = 4;</code>
     * @return Whether the iconUrl field is set.
     */
    public fun hasIconUrl(): kotlin.Boolean {
      return _builder.hasIconUrl()
    }

    /**
     * <pre>
     * optional ComGoogleProtobufAny chime_notification_payload = 5;
     * </pre>
     *
     * <code>optional string title = 7;</code>
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.getTitle()
      @JvmName("setTitle")
      set(value) {
        _builder.setTitle(value)
      }
    /**
     * <pre>
     * optional ComGoogleProtobufAny chime_notification_payload = 5;
     * </pre>
     *
     * <code>optional string title = 7;</code>
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }
    /**
     * <pre>
     * optional ComGoogleProtobufAny chime_notification_payload = 5;
     * </pre>
     *
     * <code>optional string title = 7;</code>
     * @return Whether the title field is set.
     */
    public fun hasTitle(): kotlin.Boolean {
      return _builder.hasTitle()
    }

    /**
     * <code>optional string group_id = 8;</code>
     */
    public var groupId: kotlin.String
      @JvmName("getGroupId")
      get() = _builder.getGroupId()
      @JvmName("setGroupId")
      set(value) {
        _builder.setGroupId(value)
      }
    /**
     * <code>optional string group_id = 8;</code>
     */
    public fun clearGroupId() {
      _builder.clearGroupId()
    }
    /**
     * <code>optional string group_id = 8;</code>
     * @return Whether the groupId field is set.
     */
    public fun hasGroupId(): kotlin.Boolean {
      return _builder.hasGroupId()
    }

    /**
     * <code>optional string sub_text = 9;</code>
     */
    public var subText: kotlin.String
      @JvmName("getSubText")
      get() = _builder.getSubText()
      @JvmName("setSubText")
      set(value) {
        _builder.setSubText(value)
      }
    /**
     * <code>optional string sub_text = 9;</code>
     */
    public fun clearSubText() {
      _builder.clearSubText()
    }
    /**
     * <code>optional string sub_text = 9;</code>
     * @return Whether the subText field is set.
     */
    public fun hasSubText(): kotlin.Boolean {
      return _builder.hasSubText()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.AndroidLocalNotification.copy(block: org.matrix.dma.gchat.proto.AndroidLocalNotificationKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.AndroidLocalNotification =
  org.matrix.dma.gchat.proto.AndroidLocalNotificationKt.Dsl._create(this.toBuilder()).apply { block() }._build()

