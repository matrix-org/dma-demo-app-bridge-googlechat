//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializelistTopicsResponse")
public inline fun listTopicsResponse(block: org.matrix.dma.gchat.proto.ListTopicsResponseKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.ListTopicsResponse =
  org.matrix.dma.gchat.proto.ListTopicsResponseKt.Dsl._create(org.matrix.dma.gchat.proto.ListTopicsResponse.newBuilder()).apply { block() }._build()
public object ListTopicsResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.ListTopicsResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.ListTopicsResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.ListTopicsResponse = _builder.build()

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class TopicsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .Topic topics = 1;</code>
     */
     public val topics: com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.Topic, TopicsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getTopicsList()
      )
    /**
     * <code>repeated .Topic topics = 1;</code>
     * @param value The topics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addTopics")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.Topic, TopicsProxy>.add(value: org.matrix.dma.gchat.proto.Topic) {
      _builder.addTopics(value)
    }
    /**
     * <code>repeated .Topic topics = 1;</code>
     * @param value The topics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignTopics")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.Topic, TopicsProxy>.plusAssign(value: org.matrix.dma.gchat.proto.Topic) {
      add(value)
    }
    /**
     * <code>repeated .Topic topics = 1;</code>
     * @param values The topics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllTopics")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.Topic, TopicsProxy>.addAll(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.Topic>) {
      _builder.addAllTopics(values)
    }
    /**
     * <code>repeated .Topic topics = 1;</code>
     * @param values The topics to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllTopics")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.Topic, TopicsProxy>.plusAssign(values: kotlin.collections.Iterable<org.matrix.dma.gchat.proto.Topic>) {
      addAll(values)
    }
    /**
     * <code>repeated .Topic topics = 1;</code>
     * @param index The index to set the value at.
     * @param value The topics to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setTopics")
    public operator fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.Topic, TopicsProxy>.set(index: kotlin.Int, value: org.matrix.dma.gchat.proto.Topic) {
      _builder.setTopics(index, value)
    }
    /**
     * <code>repeated .Topic topics = 1;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearTopics")
    public fun com.google.protobuf.kotlin.DslList<org.matrix.dma.gchat.proto.Topic, TopicsProxy>.clear() {
      _builder.clearTopics()
    }


    /**
     * <code>optional .ReadRevision user_revision = 2;</code>
     */
    public var userRevision: org.matrix.dma.gchat.proto.ReadRevision
      @JvmName("getUserRevision")
      get() = _builder.getUserRevision()
      @JvmName("setUserRevision")
      set(value) {
        _builder.setUserRevision(value)
      }
    /**
     * <code>optional .ReadRevision user_revision = 2;</code>
     */
    public fun clearUserRevision() {
      _builder.clearUserRevision()
    }
    /**
     * <code>optional .ReadRevision user_revision = 2;</code>
     * @return Whether the userRevision field is set.
     */
    public fun hasUserRevision(): kotlin.Boolean {
      return _builder.hasUserRevision()
    }
    public val ListTopicsResponseKt.Dsl.userRevisionOrNull: org.matrix.dma.gchat.proto.ReadRevision?
      get() = _builder.userRevisionOrNull

    /**
     * <code>optional .ReadRevision group_revision = 3;</code>
     */
    public var groupRevision: org.matrix.dma.gchat.proto.ReadRevision
      @JvmName("getGroupRevision")
      get() = _builder.getGroupRevision()
      @JvmName("setGroupRevision")
      set(value) {
        _builder.setGroupRevision(value)
      }
    /**
     * <code>optional .ReadRevision group_revision = 3;</code>
     */
    public fun clearGroupRevision() {
      _builder.clearGroupRevision()
    }
    /**
     * <code>optional .ReadRevision group_revision = 3;</code>
     * @return Whether the groupRevision field is set.
     */
    public fun hasGroupRevision(): kotlin.Boolean {
      return _builder.hasGroupRevision()
    }
    public val ListTopicsResponseKt.Dsl.groupRevisionOrNull: org.matrix.dma.gchat.proto.ReadRevision?
      get() = _builder.groupRevisionOrNull

    /**
     * <code>optional bool contains_first_topic = 4;</code>
     */
    public var containsFirstTopic: kotlin.Boolean
      @JvmName("getContainsFirstTopic")
      get() = _builder.getContainsFirstTopic()
      @JvmName("setContainsFirstTopic")
      set(value) {
        _builder.setContainsFirstTopic(value)
      }
    /**
     * <code>optional bool contains_first_topic = 4;</code>
     */
    public fun clearContainsFirstTopic() {
      _builder.clearContainsFirstTopic()
    }
    /**
     * <code>optional bool contains_first_topic = 4;</code>
     * @return Whether the containsFirstTopic field is set.
     */
    public fun hasContainsFirstTopic(): kotlin.Boolean {
      return _builder.hasContainsFirstTopic()
    }

    /**
     * <code>optional bool contains_last_topic = 5;</code>
     */
    public var containsLastTopic: kotlin.Boolean
      @JvmName("getContainsLastTopic")
      get() = _builder.getContainsLastTopic()
      @JvmName("setContainsLastTopic")
      set(value) {
        _builder.setContainsLastTopic(value)
      }
    /**
     * <code>optional bool contains_last_topic = 5;</code>
     */
    public fun clearContainsLastTopic() {
      _builder.clearContainsLastTopic()
    }
    /**
     * <code>optional bool contains_last_topic = 5;</code>
     * @return Whether the containsLastTopic field is set.
     */
    public fun hasContainsLastTopic(): kotlin.Boolean {
      return _builder.hasContainsLastTopic()
    }

    /**
     * <code>optional .ReadReceiptSet read_receipt_set = 6;</code>
     */
    public var readReceiptSet: org.matrix.dma.gchat.proto.ReadReceiptSet
      @JvmName("getReadReceiptSet")
      get() = _builder.getReadReceiptSet()
      @JvmName("setReadReceiptSet")
      set(value) {
        _builder.setReadReceiptSet(value)
      }
    /**
     * <code>optional .ReadReceiptSet read_receipt_set = 6;</code>
     */
    public fun clearReadReceiptSet() {
      _builder.clearReadReceiptSet()
    }
    /**
     * <code>optional .ReadReceiptSet read_receipt_set = 6;</code>
     * @return Whether the readReceiptSet field is set.
     */
    public fun hasReadReceiptSet(): kotlin.Boolean {
      return _builder.hasReadReceiptSet()
    }
    public val ListTopicsResponseKt.Dsl.readReceiptSetOrNull: org.matrix.dma.gchat.proto.ReadReceiptSet?
      get() = _builder.readReceiptSetOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.ListTopicsResponse.copy(block: org.matrix.dma.gchat.proto.ListTopicsResponseKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.ListTopicsResponse =
  org.matrix.dma.gchat.proto.ListTopicsResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val org.matrix.dma.gchat.proto.ListTopicsResponseOrBuilder.userRevisionOrNull: org.matrix.dma.gchat.proto.ReadRevision?
  get() = if (hasUserRevision()) getUserRevision() else null

public val org.matrix.dma.gchat.proto.ListTopicsResponseOrBuilder.groupRevisionOrNull: org.matrix.dma.gchat.proto.ReadRevision?
  get() = if (hasGroupRevision()) getGroupRevision() else null

public val org.matrix.dma.gchat.proto.ListTopicsResponseOrBuilder.readReceiptSetOrNull: org.matrix.dma.gchat.proto.ReadReceiptSet?
  get() = if (hasReadReceiptSet()) getReadReceiptSet() else null

