//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google_chat.proto

package org.matrix.dma.gchat.proto;

@kotlin.jvm.JvmName("-initializejAddOnsImageCropStyle")
public inline fun jAddOnsImageCropStyle(block: org.matrix.dma.gchat.proto.JAddOnsImageCropStyleKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsImageCropStyle =
  org.matrix.dma.gchat.proto.JAddOnsImageCropStyleKt.Dsl._create(org.matrix.dma.gchat.proto.JAddOnsImageCropStyle.newBuilder()).apply { block() }._build()
public object JAddOnsImageCropStyleKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: org.matrix.dma.gchat.proto.JAddOnsImageCropStyle.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: org.matrix.dma.gchat.proto.JAddOnsImageCropStyle.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): org.matrix.dma.gchat.proto.JAddOnsImageCropStyle = _builder.build()

    /**
     * <code>optional .JAddOnsImageCropStyle.ImageCropType type = 1;</code>
     */
    public var type: org.matrix.dma.gchat.proto.JAddOnsImageCropStyle.ImageCropType
      @JvmName("getType")
      get() = _builder.getType()
      @JvmName("setType")
      set(value) {
        _builder.setType(value)
      }
    /**
     * <code>optional .JAddOnsImageCropStyle.ImageCropType type = 1;</code>
     */
    public fun clearType() {
      _builder.clearType()
    }
    /**
     * <code>optional .JAddOnsImageCropStyle.ImageCropType type = 1;</code>
     * @return Whether the type field is set.
     */
    public fun hasType(): kotlin.Boolean {
      return _builder.hasType()
    }

    /**
     * <code>optional double aspect_ratio = 2;</code>
     */
    public var aspectRatio: kotlin.Double
      @JvmName("getAspectRatio")
      get() = _builder.getAspectRatio()
      @JvmName("setAspectRatio")
      set(value) {
        _builder.setAspectRatio(value)
      }
    /**
     * <code>optional double aspect_ratio = 2;</code>
     */
    public fun clearAspectRatio() {
      _builder.clearAspectRatio()
    }
    /**
     * <code>optional double aspect_ratio = 2;</code>
     * @return Whether the aspectRatio field is set.
     */
    public fun hasAspectRatio(): kotlin.Boolean {
      return _builder.hasAspectRatio()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun org.matrix.dma.gchat.proto.JAddOnsImageCropStyle.copy(block: org.matrix.dma.gchat.proto.JAddOnsImageCropStyleKt.Dsl.() -> kotlin.Unit): org.matrix.dma.gchat.proto.JAddOnsImageCropStyle =
  org.matrix.dma.gchat.proto.JAddOnsImageCropStyleKt.Dsl._create(this.toBuilder()).apply { block() }._build()

